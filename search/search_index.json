{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to LangSmith Course","text":"<p>\ub7ad\uc2a4\ubbf8\uc2a4 \uac15\uc758\uc5d0 \uc624\uc2e0 \uac83\uc744 \ud658\uc601 \ud569\ub2c8\ub2e4 !!! \uc88c\uce21 \ucee8\ud150\uce20 \ub124\ube44\uac8c\uc774\uc158\uacfc \uae38\ub77c\uc7a1\uc774\ub97c \ud655\uc778\ud558\uc154\uc11c \ub530\ub77c\uac00\uc2dc\ub294 \uac83\uc744 \ucd94\ucc9c\ub4dc\ub9bd\ub2c8\ub2e4. \uc720\ud22c\ube0c \uc601\uc0c1\uc73c\ub85c \uac15\uc758 \uc81c\uc791 \uc608\uc815\uc785\ub2c8\ub2e4</p>"},{"location":"#_1","title":"\uae38\ub77c\uc7a1\uc774","text":"<ol> <li>\uc9c1\uc811 \ucf54\ub529\ud558\ub294 \uac1c\ubc1c\uc790\ub294 \uc544\ub2c8\ub2e4!<ul> <li>\ucee8\uc149 \uac00\uc774\ub4dc \uae4c\uc9c0\ub9cc \ubcf4\uc2dc\uba74 \ub429\ub2c8\ub2e4.</li> </ul> </li> <li>LangChain \uc0ac\uc6a9 \uacbd\ud5d8\uc774 \uc788\uac70\ub098, RAG \uc640 \uac19\uc740 \uae30\ubc95\uc774 \uc775\uc219\ud558\ub2e4!<ul> <li>\ud29c\ud1a0\ub9ac\uc5bc\uc744 \uc0ac\uc804\ucc98\ub7fc \ud65c\uc6a9\ud558\uc2dc\uace0, Setup \uc774\ud6c4\uc5d0 \uc2e4\uc804\uc73c\ub85c \ubc14\ub85c \uac00\uc2dc\uba74 \ub429\ub2c8\ub2e4.</li> </ul> </li> <li>LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ucc98\uc74c \uc811\ud558\ub294 \uac1c\ubc1c\uc790\ub2e4!<ul> <li>\ucee8\uc149, \ud29c\ud1a0\ub9ac\uc5bc, \uc2e4\uc804 \uc21c\uc73c\ub85c \ucc28\ub840\ub300\ub85c \uc775\ud788\uc2dc\uba74 \ub429\ub2c8\ub2e4.</li> </ul> </li> <li>LLM, Embeddings \uc5d0 \ub300\ud574 \uc0dd\uc18c\ud558\ub2e4!<ul> <li>OpenAI cookbook \ub610\ub294 LangChain \ud29c\ud1a0\ub9ac\uc5bc \ubd80\ud130 \ubcf4\uace0 \uc624\uc2dc\ub294 \uac83\uc744 \ucd94\ucc9c \ub4dc\ub9bd\ub2c8\ub2e4.</li> </ul> </li> </ol> <p>\ubcf8 \ucee8\ud150\uce20\ub4e4\uc740 \uc81c\uac00 \uc9c1\uc811 \uc791\uc131\ud558\uc600\uc73c\uba70, GPT \uc640 \uac19\uc740 LLM \uc758 \ub3c4\uc6c0\uc744 \ubc1b\uc9c0 \uc54a\uc558\uc2b5\ub2c8\ub2e4. \uc81c\uac00 \uacf5\ubd80\ud558\ub824\uace0 \uc791\uc131\ud55c \uac83\uc774\ub77c\uc11c\uc694.</p>"},{"location":"FAQ/","title":"FAQ","text":""},{"location":"FAQ/#1-langsmith","title":"1. \ub370\uc774\ud130\ub97c \uc678\ubd80\ub85c \ubc18\ucd9c\uc774 \ubd88\uac00\ub2a5\ud55c\ub370, LangSmith\ub97c \uc9c1\uc811 \ud638\uc2a4\ud305 \ud574\uc11c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub098\uc694?","text":"<p>\ub124, \uc0ac\uc6a9 \uac00\ub2a5\ud569\ub2c8\ub2e4. Self-Host LangSmith \uac00 \uac00\ub2a5\ud558\uace0, 24\ub144 7\uc6d4 \uae30\uc900 \ucfe0\ubc84\ub124\ud2f0\uc2a4\uc640 \ub3c4\ucee4\ub85c \uc124\uce58\ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uacf5\uc2dd \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694.</p>"},{"location":"FAQ/#2-python","title":"2. Python \ub9cc \uc9c0\uc6d0\ud558\ub098\uc694?","text":"<p>\uc544\ub2c8\uc624, \ubb38\uc11c\uc758 \uae30\ubcf8 \uc124\uba85\uc774 Python \uc778 \uac83\uc73c\ub85c \ubd10\uc11c Python \uc774 \uccab\ubc88\uc9f8 \ud0c0\uac9f\uc774\uc9c0\ub9cc, typescript SDK \ub3c4 \uc788\uace0, \ubc94\uc6a9\uc801\uc778 REST API \ud638\ucd9c\ub85c \uc5b8\uc5b4\uc640 \ubb34\uad00\ud558\uac8c \uc0ac\uc6a9\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740, API \uc124\uba85\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694.</p>"},{"location":"intros/Evaluation_with_dataset/","title":"Datasets &amp; Evaluation \ucee8\uc149 \uac00\uc774\ub4dc","text":"<p>LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ud3c9\uac00\ud558\uae30 \uc704\ud55c \ub370\uc774\ud130\uc14b\uacfc \ud3c9\uac00 \ubc29\ubc95 \uc785\ub2c8\ub2e4. \ub370\uc774\ud130\uc14b\uc744 \uc900\ube44\ud574\ub450\uace0, LangSmith \uc5d0 \uc801\uc7ac\ud574\ub454 \ub2e4\uc74c Evaluator \uc5d0 \ubcf4\ub0b4\uc90d\ub2c8\ub2e4. Evaluator\ub294 LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uacb0\uacfc\uc640 \ub370\uc774\ud130\uc5d0 \uc900\ube44\ub41c \uacb0\uacfc\ub97c \ubcf4\uace0 \ud3c9\uac00\ud569\ub2c8\ub2e4. \uc5ec\uae30\uc11c Dataset \uc758 Output (\uc815\ub2f5) \uc740 \ud544\uc218 \uc0ac\ud56d\uc774 \uc544\ub2d9\ub2c8\ub2e4. \uc815\ub2f5\uc774 \uc788\uc73c\uba74 \uc88b\uaca0\uc9c0\ub9cc, \uc5c6\uc5b4\ub3c4 \ud3c9\uac00\ub97c \ud560\uc218\ub294 \uc788\uc8e0.</p> <p></p>"},{"location":"intros/Evaluation_with_dataset/#datasets","title":"Datasets","text":"<p>LangSmith \uc5d0\uc11c\ub294 \uc8fc\uc694\ud55c \ub370\uc774\ud130\uc14b\uc744 \ub2e4\ub8f0 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e8\uc21c \uc800\uc7a5\uc18c\uc774\uae30 \ub54c\ubb38\uc5d0 \"\uc774\uac78 \uc65c \uc124\uba85\ud558\uc9c0?\" \ub77c\uace0 \ud558\uc2e4 \uc218 \uc788\uaca0\uc9c0\ub9cc, Tracing (\ucd94\uc801) \uc774\ub098, Evaluation (\ud3c9\uac00) \uae30\ub2a5\uacfc \uc5f0\ub3d9\ub418\uc5b4 \ub3d9\uc791\ud558\uae30 \ub54c\ubb38\uc5d0 \ub9e4\uc6b0 \uc720\uc6a9\ud569\ub2c8\ub2e4.</p>"},{"location":"intros/Evaluation_with_dataset/#_1","title":"\uc0dd\uc131 \ubc29\ubc95\uc5d0 \ub530\ub978 \ub370\uc774\ud130 \ubd84\ub958","text":"<p>\ub370\uc774\ud130\uc14b\uc758 \uc0dd\uc131\uc740 \ub2e4\uc74c\uacfc \uac19\uc740 \ubc29\ubc95\uc73c\ub85c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.  </p> <ul> <li>\uc5f0\uad6c/\uac1c\ubc1c\uc790\uac00 \uc9c1\uc811 \uc791\uc131 \ub610\ub294 \uc120\uc815\ud55c \ub370\uc774\ud130. <ul> <li>Input \uacfc \uc608\uc0c1 Output\uc744 \uc9c1\uc811 \uc791\uc131\ud569\ub2c8\ub2e4. \ubb38\uc81c\uc9d1\uacfc \uc815\ub2f5\uc774\uc8e0. \uc218\uc2ed\uac1c \uc218\uc900\uc815\ub3c4\ub85c \ub370\uc774\ud130\uc758 \uc591\uc774 \uc791\ub354\ub77c\ub3c4 \uae30\uc900\uc774 \ub418\ub294 \ub370\uc774\ud130\uc14b\uc774\uae30 \ub54c\ubb38\uc5d0 \uc911\uc694\ud569\ub2c8\ub2e4.  </li> </ul> </li> <li>\ub85c\uae45\ub41c \ub370\uc774\ud130. <ul> <li>LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc11c\ube44\uc2a4\uac00 \uc2dc\uc791\ub418\uc5c8\ub2e4\uba74, \uc0ac\uc6a9\uc790\uc758 tracing \uacb0\uacfc\ub4e4\uc774 \ub85c\uadf8\uac00 \ub418\uc5b4 \ub370\uc774\ud130\uc14b\uc73c\ub85c \ud3b8\uc785\ub420 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc2e4\uc81c \uc0ac\uc6a9 \uc608\uc2dc\uc774\uace0, \uc0ac\uc6a9\uc790 \ud53c\ub4dc\ubc31\uc774 \uac19\uc774 \uc788\ub2e4\uba74 \ub354 \uac00\uce58\uc788\ub294 \ub370\uc774\ud130\uac00 \ub429\ub2c8\ub2e4.  </li> </ul> </li> <li>\ud569\uc131 \ub370\uc774\ud130. <ul> <li>LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc774\uc6a9\ud574\uc11c \uc9c1\uc811 \uc0dd\uc131\ud574\ub0bc \uc218 \ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \uc0ac\ub78c\uc774 \uc9c1\uc811 \uac80\ud1a0\ud558\uc9c0 \uc54a\ub294\ub2e4\uba74, \ub370\uc774\ud130\uac00 \uc800\ud488\uc9c8\uc77c \uc704\ud5d8\uc131\uc774 \uc788\uc9c0\ub9cc, \uc790\ub3d9 \uc0dd\uc131\ub418\uc5b4\uc11c \uc591\uc744 \ub9ce\uc774 \ub298\ub9b4 \uc218 \uc788\uc2b5\ub2c8\ub2e4.  </li> </ul> </li> </ul> <p>LangSmith \ud50c\ub7ab\ud3fc\uc740 \uc704 3\uac00\uc9c0 \ubc29\ubc95\uc73c\ub85c \uc0dd\uc131\ub418\ub294 \ub370\uc774\ud130\ub97c \ubaa8\ub450 \uc27d\uac8c \ub370\uc774\ud130\uc14b\uc5d0 \ucd94\uac00\ud560 \uc218 \uc788\uac8c \uc9c0\uc6d0\ud569\ub2c8\ub2e4.  </p> <p>\uc81c \uacbd\ud5d8\uc0c1 \ub2e4\uc74c\uacfc \uac19\uc774 \uc791\uc5c5\uc744 \uc2dc\ub3c4\ud558\ub294 \uac83\uc774 \uc81c\uc77c \uc88b\uc740 \uac83 \uac19\uc544\uc694.  </p> <ol> <li>\uac00\ub2a5\ud558\ub2e4\uba74, \uc790\ub3d9\uc73c\ub85c \ub370\uc774\ud130\ub97c \uc218\uc9d1\ud569\ub2c8\ub2e4, \ubca0\uc2a4\ud2b8 \ucf00\uc774\uc2a4\uc5d0 \ud574\ub2f9\ud558\uace0 \uc870\ub2ec \ud55c\uacc4\uac00 \uc0ac\uc2e4\uc0c1 \uc5c6\uc2b5\ub2c8\ub2e4. \uc774\ub7f0 \uacbd\uc6b0\ub77c\uba74 \uc544\ub798 2, 3 \ub2e8\uacc4\uac00 \ubb34\uc758\ubbf8 \ud569\ub2c8\ub2e4.</li> <li>\uc591\uc9c8\uc758 \ub370\uc774\ud130\uac00 \ucda9\ubd84\ud558\uc9c0 \uc54a\ub2e4\uba74, \uc5f0\uad6c/\uac1c\ubc1c\uc790\uac00 \ub370\uc774\ud130\ub97c \uc9c1\uc811 \uc791\uc131\ud569\ub2c8\ub2e4. (~100\uc138\ud2b8)</li> <li>\ud604\uc874 \uc81c\uc77c \ub611\ub611\ud55c \ubaa8\ub378\ub85c \ud569\uc131 \ub370\uc774\ud130\ub97c \uc0dd\uc131\ud569\ub2c8\ub2e4.<ol> <li>\ud3c9\uac00\ub97c \ud55c\ubc88 \ub3cc\ub824\uc11c \uc774\uc0c1\ud55c \ub370\uc774\ud130\ub294 \uc190\uc73c\ub85c \uc9c1\uc811 \uc7a1\uc544\uc90d\ub2c8\ub2e4.</li> </ol> </li> <li>\uc11c\ube44\uc2a4\ub97c \uc6b4\uc601\ud558\uba74\uc11c \ub85c\uae45\ub41c \ub370\uc774\ud130\ub97c \ucd94\uac00\ud569\ub2c8\ub2e4.</li> </ol>"},{"location":"intros/Evaluation_with_dataset/#langsmith","title":"LangSmith \uc758 \ub370\uc774\ud130 \ud0c0\uc785","text":"<p>LangSmith \uc5d0\uc11c\ub294 \uc544\ub798 3\uac00\uc9c0 \ud0c0\uc785\uc73c\ub85c \ub370\uc774\ud130\uac00 \uad6c\ubd84\ub429\ub2c8\ub2e4.  </p> <ul> <li>kv (key-value)<ul> <li>\uc77c\ubc18\uc801\uc778 \ub515\uc154\ub108\ub9ac \ud615\ud0dc\uc640 \uac19\uc2b5\ub2c8\ub2e4. \uac00\uc7a5 \ubc94\uc6a9\uc801\uc774\uace0, \ub2e4\uc591\ud55c evaluation \uc2dc\ub098\ub9ac\uc624\ub97c \ucee4\ubc84\ud569\ub2c8\ub2e4.</li> <li>\uae30\ubcf8 \ud0c0\uc785\uc774\uae30\ub3c4\ud558\uace0, \uadf8\ub0e5 kv \ud0c0\uc785 \uc0ac\uc6a9\ud558\uba74 \uc6ec\ub9cc\ud558\uba74 \ub429\ub2c8\ub2e4.</li> </ul> </li> <li>llm (large language model)<ul> <li>\"completion\" \uc2a4\ud0c0\uc77c\uc758 llm \ud3c9\uac00\ub97c \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.</li> </ul> </li> <li>chat<ul> <li>\ucc44\ud305 \uc2a4\ud0c0\uc77c\ub85c \ucc57\ubd07\uacfc \uac19\uc740 \ub300\ud654 \uc2a4\ud0c0\uc77c \ud3c9\uac00\ub97c \uc704\ud574 \uc0ac\uc6a9\ub429\ub2c8\ub2e4.</li> </ul> </li> </ul>"},{"location":"intros/Evaluation_with_dataset/#_2","title":"\ub370\uc774\ud130 \uc14b \ub098\ub204\uae30","text":"<p>\uc6a9\ub3c4\uc5d0 \ub530\ub77c \ub370\uc774\ud130\uc14b\uc744 \ub098\ub20c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc791\uace0 \ube60\ub978 \ud14c\uc2a4\ud2b8\uc6a9, \ud480 \ud14c\uc2a4\ud2b8\uc6a9 \uacfc \uac19\uc774 \ud14c\uc2a4\ud2b8 \uaddc\ubaa8\uc5d0 \ub530\ub77c\uc11c \ub098\ub20c \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud329\ud2b8 \uccb4\ud06c\uc6a9 \uc774\ub77c\ub358\uac00, \uc758\uacac \uc81c\uc2dc\uc6a9 \uc774\ub77c\ub358\uac00, \ub2e4\uc591\ud55c task \ub97c \uc218\ud589\ud574\uc57c\ud558\ub294 \uacbd\uc6b0 task \ubcc4\ub85c \ub098\ub204\uae30\ub3c4 \ud569\ub2c8\ub2e4.  </p>"},{"location":"intros/Evaluation_with_dataset/#evaluation","title":"Evaluation (\ud3c9\uac00)","text":"<p>LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ud3c9\uac00\ub294 \uacbd\uc6b0\uc5d0 \ub530\ub77c \ub9e4\uc6b0 \uc5b4\ub824\uc6b4 \uc77c\uc785\ub2c8\ub2e4. \ucc57\ubd07\uc758 \uc608\ub97c \ub4e4\uba74, \ub300\ub2f5\uc774 \uc5bc\ub9c8\ub098 \uc88b\uc740\uc9c0\ub97c \uc815\ub7c9 \ud3c9\uac00 \ud558\uae30\ub780 \uc815\ub2f5\uc774 \uc5c6\ub294 \ubb38\uc81c\uc785\ub2c8\ub2e4. </p> <p>\ub2e4\ud589\ud788\ub3c4 LangSmith\uc5d0\uc11c\ub294 \ub2e4\uc591\ud55c \ud3c9\uac00 \uae30\uc900\uc744 \uc27d\uac8c \uad6c\ud604\ud560 \uc218 \uc788\ub3c4\ub85d \uc81c\uacf5\ud569\ub2c8\ub2e4. \uc774\uac83\uc774 \ub9e4\uc6b0 \uc720\uc6a9\ud558\ub354\uad70\uc694.</p>"},{"location":"intros/Evaluation_with_dataset/#_3","title":"\uc8fc\uc694 \uad6c\uc131 \uc694\uc18c","text":"<ul> <li><code>Example</code> : \ub370\uc774\ud130\uc14b\uc758 \ub370\uc774\ud130 \ud558\ub098\ud558\ub098 \uc785\ub2c8\ub2e4. \uc8fc\ub85c In, Out \uc73c\ub85c \uad6c\uc131\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.</li> <li><code>Root_run</code> : \ud558\ub098\uc758 \uc2dc\ud5d8 run \uc778\ub370, LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc5ec\ub7ec\uac1c\uc758 run \uc774 \ud558\ub098\uc758 task\uac00 \ub418\uae30 \ub584\ubb38\uc5d0, \ubb36\uc74c \uc785\ub2c8\ub2e4. \uc0ac\uc6a9\uc790 \uc785\uc7a5\uc5d0\uc11c in/out \uc774\ub77c\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. <ul> <li>RAG application \uc744 \uc608\ub85c \ub4e4\uba74, Retrieval \ub3c4 run, Generation \ub3c4 run \uc774\uace0, \ubb36\uc5b4\uc11c Root_run \uc785\ub2c8\ub2e4.</li> </ul> </li> </ul> <p>\uc704 <code>Example</code> \ub370\uc774\ud130\ub4e4\uc744 \ubb3c\uace0, <code>Root_run</code> \ub4e4\uc744 \uc218\ud589\ud558\uba74, \uacb0\uacfc\uac00 \ub098\uc635\ub2c8\ub2e4. \uacb0\uacfc\ub294 <code>EvalutionResult</code> (dictionary\ub791 \uc720\uc0ac\ud55c \ud074\ub798\uc2a4) \uac00 \ub9ac\ud134\ub418\uace0, \uc544\ub798 \ud56d\ubaa9\ub4e4\uc744 \uac00\uc9c0\uace0 \uc788\uc2b5\ub2c8\ub2e4.  - <code>Key</code>: \ud3c9\uac00 \uc9c0\ud45c \uc774\ub984 (the name of metric)  - <code>Score</code> : \ud3c9\uac00 \uc9c0\ud45c \uac12 (the value of metric)  - <code>Comment</code> : \ud3c9\uac00 \uadfc\uac70, \uc0ac\uc720. \uc5b4\ub5bb\uac8c \ud574\uc11c \ud3c9\uac00 \uc9c0\ud45c\uac12\uc774 \ub3c4\ucd9c \ub418\uc5c8\ub294\uc9c0\uc5d0 \ub300\ud55c \ud574\uc124.</p>"},{"location":"intros/Evaluation_with_dataset/#_4","title":"\ud3c9\uac00 \uc8fc\uccb4\uc640 \ubc29\ubc95","text":""},{"location":"intros/Evaluation_with_dataset/#human","title":"Human","text":"<p>\ub2f9\uc5f0\ud788 \uac00\uc7a5 \uc88b\uc740 \ud3c9\uac00\uc790\ub294 \uc0ac\ub78c\uc785\ub2c8\ub2e4. \uc0ac\ub78c\uc774 \uc9c1\uc811 \ud3c9\uac00\ub97c \uc368\uc8fc\uba74 \uc88b\uaca0\uc9c0\ub9cc, \ube44\uc2f8\uae30\ub3c4 \ud558\uace0 \uc804\ubb38\uc131\uc5d0 \ub300\ud55c \uac80\uc99d \uc791\uc5c5\ub3c4 \ud544\uc694\ud569\ub2c8\ub2e4. \uc6b0\ub9ac\uac00 \uc6d0\ud558\ub294 \uac83\uc740 \ub2f9\uc5f0\ud788 \uc0ac\ub78c\uc774 \ud3c9\uac00\ub97c \ud574\uc8fc\ub294 \uac83\uc740 \uc544\ub2d0\ud14c\uc8e0. \uadf8\ub798\ub3c4 \uc2dc\uc791 \uc9c0\uc810\uc73c\ub85c\ub294 \uc88b\uc2b5\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc758 \uacbd\uc6b0\uc5d0 \ud544\uc218\uc801\uc774\uae30\ub3c4 \ud569\ub2c8\ub2e4.</p>"},{"location":"intros/Evaluation_with_dataset/#heuristic","title":"Heuristic","text":"<p>\ub2e4\uc74c \ub2e8\uacc4\ub294 \ud734\ub9ac\uc2a4\ud2f1\ud55c \uae30\ubc95\uc758 \uc801\uc6a9\uc785\ub2c8\ub2e4. \uc0ac\ub78c\uc774 \"\uc774\ub807\uac8c \ud3c9\uac00\ud558\uba74 \uad1c\ucc2e\uc9c0 \uc54a\uc744\uae4c?\" \ud558\ub294 \uac00\uc124\uc744 \uc138\uc6b0\uace0 \uc9c1\uc811 \ud568\uc218\ub97c \ud30c\uc774\uc36c\uc73c\ub85c \uad6c\ud604\ud558\uc5ec \ub123\uc5b4\uc90d\ub2c8\ub2e4. \ub2e8\uc21c\ud55c \ub2e8\ub2f5\ud615 QA \ud3c9\uac00\uc14b\uc758 \uacbd\uc6b0 \uc815\ub2f5\uacfc \uc815\ud655\ud788 \uc77c\uce58\ud558\ub294\uc9c0 \ud14c\uc2a4\ud2b8 \ud558\ub294 \ud568\uc218\ub97c \uad6c\ud604\ud560 \uc218\ub3c4 \uc788\uace0, \uc815\ub2f5 \ud0a4\uc6cc\ub4dc\uac00 \ud3ec\ud568 \ub418\ub294 \uc9c0 \ud14c\uc2a4\ud2b8\ud558\ub294 \ud568\uc218\ub97c \uad6c\ud604\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. <code>Custom evaluator</code> \ub97c \uad6c\ud604\ud558\uc5ec \ub123\uc5b4\uc8fc\uba74 \ub418\ub2c8 \uc790\uc720\ub3c4\uac00 \ub192\uc73c\ub098, \ud3c9\uac00 \ubc29\ubc95\uc5d0 \ub300\ud55c \uc2e0\ub8b0\ub3c4\ub97c \uc9c1\uc811 \ud310\ub2e8\ud574\uc57c\ud569\ub2c8\ub2e4. \ub2e8\uc21c\ud55c \ub370\uc774\ud130\uc14b\uc5d0 \ub300\ud574\uc11c\ub9cc \uc798 \uc791\ub3d9\ud558\uaca0\uc2b5\ub2c8\ub2e4.</p>"},{"location":"intros/Evaluation_with_dataset/#llm-as-judge","title":"LLM-as-judge","text":"<p>LLM \uc744 \ud310\uc0ac\ub85c \uc0ac\uc6a9\ud569\ub2c8\ub2e4. \ud3c9\uac00\uc790\ub85c\uc11c LLM \uc744 \uc0ac\uc6a9\ud558\uace0, \uae30\uc900\ub3c4 \ub123\uc5b4\uc8fc\uace0 LLM \uc774 \ud3c9\uac00 \uc810\uc218\uc640 \uc774\uc720\uae4c\uc9c0 \ub0b4\uc90d\ub2c8\ub2e4. \uc804\ubb38\uac00\ubcf4\ub2e4 \ub354 \uc798 \ud3c9\uac00\ud55c\ub2e4\uba74 \ub9e4\uc6b0 \uac15\ub825\ud558\uace0, \uc2dc\uac04\ub3c4 \ub2e8\ucd95\ub418\uace0, \ube44\uc6a9\ub3c4 \uc904\uace0, \uc88b\uaca0\uc8e0. \ud3c9\uac00\ub97c \uc798 \ud558\uac8c \ub9cc\ub4dc\ub294 \uac83 \ub610\ud55c \ud558\ub098\uc758 LLM application \uc774\ub77c, \ubc30\ubcf4\ub2e4 \ubc30\uaf3d\uc774 \ub354 \ucee4\uc9c8 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.  </p> <ul> <li>reference-free \ud55c \ud3c9\uac00<ul> <li>\ub2f5\ubcc0\uc774 \uacf5\uaca9\uc131\uc774 \uc788\ub294 \uc9c0, \ubd80\uc815\uc801\uc778\uc9c0, \uac04\uacb0\ud55c\uc9c0, \ub4f1 \uc815\ub2f5\uc9c0\uc640 \ubb34\uad00\ud55c \ud3c9\uac00\ub97c \uc9c4\ud589\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>LangSmith \uc5d0\uc11c\ub294 conciseness, harmfulness, maliciousness \ub4f1 \uc5ec\ub7ec \uae30\uc900\uc5d0 \ub300\ud574 \ud3c9\uac00\ud558\ub294 LLM judge \ub97c \ud15c\ud50c\ub9bf \ucc98\ub7fc \ub9cc\ub4e4\uc5b4\uc11c \uc81c\uacf5\ud569\ub2c8\ub2e4. \ub9e4\uc6b0 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc6d0\ubc84\ud2bc\uc5d0 \ub2e4\uc591\ud55c \ud3c9\uac00\ub97c \ubc14\ub85c \uc218\ud589\uac00\ub2a5\ud558\ub2c8\uae4c\uc694.</li> </ul> </li> <li>reference \uac00 \ud544\uc694\ud55c \ud3c9\uac00<ul> <li>\ub370\uc774\ud130\uc14b example\uc5d0 \uc801\ud600\uc788\ub294 \uacb0\uacfc\uac12\uacfc \ube44\uad50\ud558\uc5ec \ud3c9\uac00\ub97c \ub0b4\ub9b4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. </li> <li>LangSmith \uc5d0\uc11c\ub294 QA correctness, Context QA, Chain of Thought QA \uc640 \uac19\uc774 \uc5bc\ub9c8\ub098 \ub300\ub2f5\uc774 \uc815\ud655\ud55c\uc9c0 reference \uc640 \ube44\uad50\ud558\uc5ec \uacb0\uacfc\ub97c \ub0b4\ub9ac\uc8fc\uae30\ub3c4 \ud569\ub2c8\ub2e4.</li> <li>LLM application \uc5d0 \ub530\ub77c \ud3c9\uac00 \ub85c\uc9c1 \uac1c\ubc1c\uc774 \uc5b4\ub824\uc6b8 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul> </li> </ul>"},{"location":"intros/Evaluation_with_dataset/#pairwise","title":"Pairwise","text":"<p>\ube44\uad50 \uac80\uc0ac\uc785\ub2c8\ub2e4. LLM-as-judge \uac00 \ud310\ub2e8\uc744 \uc798 \ubabb \ud560 \ub54c \uc720\uc6a9\ud569\ub2c8\ub2e4. Summarization \uc744 \uc608\uc2dc\ub85c \uc0dd\uac01\ud574\ubcf4\uba74, \uc5b4\ub5a4 \uac83\uc774 \uc798 \ub41c \uc694\uc57d\uc778\uc9c0 \ud310\ub2e8\ud558\uae30\uac00 \uc5b4\ub835\uc2b5\ub2c8\ub2e4. \ubb38\uccb4\ub77c\ub358\uac00, \ubd84\ub7c9\uc774\ub77c\ub358\uac00, \uac1c\ubc1c\uc790\uac00 \uc6d0\ud558\ub294 \ubc29\uc2dd\uc5d0 \uc810\uc218\ub97c \ub9e4\uae30\uae30 \uc704\ud574\uc11c pairwise \ub85c \ub450 \uacb0\uacfc\ub97c \ub208\uc73c\ub85c \ubcf4\uace0 \ube44\uad50\ud558\uba74, \ud6a8\uc728\uc801\uc73c\ub85c \ud3c9\uac00\ub97c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.  </p>"},{"location":"intros/Evaluation_with_dataset/#evaluation_1","title":"Evaluation \uc801\uc6a9\ud558\uae30","text":"<p>\uc55e\uc11c \uc124\uba85\ud55c Evaluation \ubc29\ubc95\ub4e4\uc744 \uc2e4\uc81c\ub85c \uc801\uc6a9\uc744 \ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.</p>"},{"location":"intros/Evaluation_with_dataset/#unit-tests","title":"Unit Tests","text":"<p>\uac00\uc7a5 \uae30\ubcf8\uc801\uc778 \ud14c\uc2a4\ud2b8 \ubc29\ubc95\uc774\uc8e0. \ub300\ubd80\ubd84\uc758 \uc720\ub2db\ud14c\uc2a4\ud2b8\ub294 \ub2e8\uc21c assertion\ub4e4 \uc785\ub2c8\ub2e4. \uc808\ub300 \ud2c0\ub9ac\uba74 \uc548\ub418\ub294 \uac83\ub4e4\uc744 \uccb4\ud06c\ud574\uc11c, LLM application \uc774 \ubcc0\uacbd \ub418\uc5c8\uc744 \ub54c, \ubb38\uc81c\ub4e4\uc744 \uccb4\ud06c\ud558\uace0 \ubc30\ud3ec\uac00 \ub418\uc5b4\ub3c4 \ub418\ub294\uc9c0 \uc790\ub3d9\uc73c\ub85c \uac80\uc0ac\ub97c \ud569\ub2c8\ub2e4. CI \ub2e8\uacc4\ub85c \ud1b5\ud569\uc744 \uc2dc\ud0a4\ub294 \uac83\uc774 \uc77c\ubc18\uc801\uc77c \ud14c\uace0, \uac00\uc7a5 \ub9de\ucdb0\uc57c \ud558\ub294 \ud14c\uc2a4\ud2b8\ub4e4\uc744 \ub123\uc5b4\uc8fc\uba74 \ub429\ub2c8\ub2e4. QA \ud14c\uc2a4\ud2b8\ub098, hallucination, harmfulness \uac19\uc740 \uce58\uba85\uc801\uc778 \uc624\ub958\ub4e4\uc744 \uac78\ub7ec\ub0b4\ub3c4\ub85d \ub370\uc774\ud130 \uc14b\uc744 \uad6c\uc131\ud569\ub2c8\ub2e4.  </p>"},{"location":"intros/Evaluation_with_dataset/#regression-tests","title":"Regression Tests","text":"<p>\ub2e4\uc591\ud55c evaluator\ub4e4\uc744 \uad6c\uc131\ud558\uace0, \uc810\uc810 \ubc1c\uc804\ud558\ub294 \uac83\uc744 \uc810\uc218\ud654 \ud574\uc11c \uad00\ub9ac\ud569\ub2c8\ub2e4. baseline \uc73c\ub85c \ubd80\ud130 LLM application \uc744 \ubc1c\uc804\uc2dc\ucf1c \ub098\uac08\ub54c, \uc810\uc218\uac00 \uc62c\ub77c\uac00\ub294 \uac83\uc744 \uad00\ucc30\ud558\uae30 \uc88b\uc2b5\ub2c8\ub2e4. \ub2e4\uc591\ud55c \ub370\uc774\ud130\uc14b example\uc5d0 \ub530\ub77c \ube44\uad50\ub97c \ud574\ubcf4\uba74\uc11c \uc5b4\ub5a4 \ubd80\ubd84\uc774 \uac1c\uc120\uc774 \ub418\uc5c8\ub294\uc9c0, \ud639\uc740 \uac1c\uc120\uc774 \ub354 \ud544\uc694\ud55c\uc9c0 \ube44\uad50\ud574 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.  </p>"},{"location":"intros/Evaluation_with_dataset/#back-testing","title":"Back-testing","text":"<p>\uc0c1\uc6a9\ud654\ub97c \ud558\uace0 \ub098\uba74, \uc0ac\uc6a9\uc790\ub4e4\uc774 \uc0ac\uc6a9\ud558\uba74\uc11c \uc0dd\uc131\ub41c \ub370\uc774\ud130\uc14b\uc744 \ucd94\uac00\ub85c \ud655\ubcf4\ud558\uac8c \ub429\ub2c8\ub2e4. \uc774 \ub370\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\uc5ec \ud14c\uc2a4\ud2b8 \ud569\ub2c8\ub2e4. \uc0c8\ub85c\uc6b4 \ubc84\uc804\uc758 GPT \ubaa8\ub378\uc774 \ub098\uc624\uba74, \ucd5c\uadfc \uc0ac\uc6a9\uc790\ub4e4\uc758 trace\ub4e4\uc744 1000\uac1c \uc815\ub3c4 \ub370\uc774\ud130\uc14b\uc73c\ub85c \ubaa8\uc73c\uace0, \uc2e0 \ubaa8\ub378\ub85c \ubcc0\uacbd \ud6c4 \ubc14\ub85c \ube44\uad50\ud14c\uc2a4\ud2b8\ub97c \ud569\ub2c8\ub2e4. \uc2e4 \uc0ac\uc6a9 \uc720\uc800\ub4e4\uc758 \uc785\uc7a5\uc5d0\uc11c \ubaa8\ub378 \uad50\uccb4\uac00 \ubc14\ub85c \uc801\uc6a9\uac00\ub2a5\ud55c\uc9c0 \ud14c\uc2a4\ud2b8 \ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.  </p>"},{"location":"intros/Evaluation_with_dataset/#online-evaluation","title":"Online Evaluation","text":"<p>\uc628\ub77c\uc778 \ud3c9\uac00\ub294 \uc2e4\uc81c \uc11c\ube44\uc2a4\uac00 \ub3d9\uc791\ud558\uace0 \uc788\ub294 \uc0c1\ud669\uc5d0\uc11c\uc758 \uc2e4\uc2dc\uac04 \ud3c9\uac00\ub97c \uc758\ubbf8\ud569\ub2c8\ub2e4. \uc55e\uc11c \uc124\uba85\ud55c \ub0b4\uc6a9\ub4e4\uc740 \ub300\ubd80\ubd84 \uc624\ud504\ub77c\uc778 \ud3c9\uac00\ub85c \ubc30\ud3ec \uc774\uc804 \ub2e8\uacc4\uc5d0\uc11c \uc88b\uc740 LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ub9cc\ub4e4\uae30 \uc704\ud55c \ubaa9\uc801\uc774 \uac15\ud569\ub2c8\ub2e4. \uc628\ub77c\uc778 \ud3c9\uac00\ub294 \uc11c\ube44\uc2a4 \ub2e8\uacc4\uc5d0\uc11c \uc548\uc804 \uc7a5\uce58 (guardrails) \uad6c\ud604 \ud558\ub294 \ub370\uc5d0 \uc788\uc5b4 \uc720\uc6a9\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uba74, \ucc57\ubd07 \uc11c\ube44\uc2a4\uac00 \ud2c0\ub9b0 \uc18c\ub9ac\ub97c \ud558\ub294\uc9c0, \ud610\uc624 \ud45c\ud604\uc744 \ud558\ub294\uc9c0, \uc774\ub7f0 \ud56d\ubaa9\ub4e4\uc744 \uac80\uc0ac\ud558\ub3c4\ub85d \uc0ac\uc6a9\ud560 \uc218 \uc788\uaca0\uc8e0. \ud0dc\uadf8\ub97c \ub2ec\uc544\uc11c \ub098\uc911\uc5d0 \ub370\uc774\ud130 \uc14b\uc73c\ub85c \ucd94\uac00\ud558\uae30\uc704\ud55c \uc790\ub3d9 \ubd84\ub958\ub97c \ud55c\ub2e4\uac70\ub098, \uc5ec\ub7ec\uac00\uc9c0 \uc0c1\ud669\uc5d0 \ub9de\uac8c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.  </p> <p>LangSmith \ud50c\ub7ab\ud3fc\uc5d0 \ud568\uc218\ub97c \ub4f1\ub85d\ud574\ub450\uac70\ub098, \uc6f9\ud6c5\uc73c\ub85c \ub04c\uc5b4\uac00\uc11c \ud2b8\ub808\uc774\uc2a4\uc5d0 \uc790\ub3d9\uc73c\ub85c \ud3c9\uac00 \ud568\uc218\ub97c \ubd99\uc785\ub2c8\ub2e4.  </p>"},{"location":"intros/LLMOps/","title":"LLMOps","text":"<p>\uc55e\uc11c LangSmith \uc5d0 \ub300\ud574\uc11c \ub300\ub7b5\uc801\uc73c\ub85c \uc18c\uac1c\ub97c \ud588\uc2b5\ub2c8\ub2e4.</p> <p>LangSmith \ub77c\ub294 \ud50c\ub7ab\ud3fc\uc740 \uacb0\uad6d LLM \uae30\ubc18 \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac1c\ubc1c/\uc6b4\uc601 \uacfc\uc815\uc5d0 \ub3c4\uc6c0\uc744 \uc8fc\ub294 \ub3c4\uad6c\uc778\ub370\uc694, \ud55c\ub9c8\ub514\ub85c \ubd84\ub958\ud558\uc790\uba74 LLMOps \ub77c\uace0 \ubcfc \uc218 \uc788\uaca0\uc2b5\ub2c8\ub2e4. \uc774\uc81c\ub294 LMMOps \ub77c\uace0 \ubd88\ub7ec\uc57c \ud560 \uc218\ub3c4 \uc788\uaca0\uad70\uc694. </p> <p>LLMOps \ub77c\ub294 \uc6a9\uc5b4\uc640 \uac1c\ub150\uc5d0 \ub300\ud574 \uba85\ud655\ud788 \uc815\uc758\ud558\uae30\uac00 \uc5b4\ub835\uae30 \ub54c\ubb38\uc5d0 \uc124\uba85\ud558\uace0\uc790 \ud569\ub2c8\ub2e4.</p>"},{"location":"intros/LLMOps/#devops-mlops-llmops","title":"DevOps, MLOps, LLMOps","text":"<p>LLMOps \ub294 DevOps \ub85c \ubd80\ud130 \ud30c\uc0dd\ub418\uc5b4 \ub098\uc628 \uac1c\ub150\uc774\ub77c\uace0 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. DevOps \ubd80\ud130 \uc124\uba85\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.</p>"},{"location":"intros/LLMOps/#devops","title":"DevOps","text":"<p>2007\ub144\uc815\ub3c4 \ub3c4\uc785\ub41c \uac1c\ub150\uc73c\ub85c NASA \uc758 \uc808\ucc28\uc640 \uc544\uc774\ub514\uc5b4\ub97c \ubaa8\ubc29\ud558\uc5ec \ubc30\ud3ec\uc758 \uc548\uc815\uc131\uc744 \ub192\uc774\ub824\ub294 \uc2dc\ub3c4\uac00 \uc2dc\ucd08\ub77c\uace0 \ud569\ub2c8\ub2e4. \ud575\uc2ec \ubaa9\ud45c\ub294 \uac1c\ubc1c, \ud14c\uc2a4\ud2b8, \ubc30\ud3ec\uc758 \ub2e8\uacc4\ub97c \ud6a8\uc728\ud654 \ud558\ub294 \uac83\uc785\ub2c8\ub2e4. \uac1c\ubc1c\ud300, QA\ud300, \uc6b4\uc601\ud300 (+ documentation\ud300) \ubaa8\ub450\uac00 \uac78\uccd0\uc788\ub294 \ub2e8\uacc4\ub77c\uc11c \ud611\uc5c5\uc774 \uc911\uc694\ud558\uc8e0. DevOps \ub3c4\uc785 \uc774\uc804\uc5d0\ub294 \uac1c\ubc1c -&gt; \ud14c\uc2a4\ud2b8 -&gt; \ubc30\ud3ec -&gt; \uc6b4\uc601 \uacfc\uc815\uc774 \ub108\ubb34 \ub290\ub9ac\uace0 \ubb38\uc81c\uac00 \ubc1c\uc0dd\ud560 \uc5ec\uc9c0\ub3c4 \ub9ce\uace0, \ub2e4\uc591\ud55c \ud300\ub4e4 \uac04\uc758 \uc18c\ud1b5\uc5d0\ub3c4 \ubb38\uc81c\uac00 \uc790\uc8fc \ubc1c\uc0dd \ud588\uc5c8\uc2b5\ub2c8\ub2e4. </p> <p>DevOps \ub294 \uc5ec\ub7ec \ud615\ud0dc\uac00 \uc788\uc9c0\ub9cc, \ud604 \uc2dc\uc810 \uae30\uc900\uc73c\ub85c \ub9ce\uc740 \uc870\uc9c1\uc758 \ubcc0\ud654\ub97c \uc9c0\ucf1c\ubcf8 \uacb0\uacfc \uc544\ub798\uc640 \uac19\uc740 \ubaa8\uc2b5\uc774 \ub418\uc5c8\uc2b5\ub2c8\ub2e4. - QA \ud300\uc740 \ud574\uace0\ub418\uace0, \uac1c\ubc1c\ud300\uacfc \uc6b4\uc601\ud300\uc774 \ud558\ub098\uc758 \ud300\uc73c\ub85c \ud1b5\ud569\uc774 \ub418\uc5b4 \ube60\ub978 \ubc30\ud3ec\ub97c \ub2ec\uc131\ud568. - \uac1c\ubc1c \ube0c\ub79c\uce58\uc758 \ucee4\ubc0b\ub4e4\uc774 \uba54\uc778 \ube0c\ub79c\uce58\ub85c \uba38\uc9c0\ub418\uba74, CI/CD \uc2dc\uc2a4\ud15c\uc774 \ube4c\ub4dc, \ud14c\uc2a4\ud2b8 \ud6c4 \uc790\ub3d9\uc73c\ub85c \ubc30\ud3ec\ud568.</p> <p>\uc694\uc998\uc5d0\ub294 Github \uc774\ub098 Gitlab \uc5d0\uc11c\ub3c4 CI/CD \ub97c \uc798 \uc9c0\uc6d0\ud558\uc8e0. \uc870\uc9c1 \ub2e8\uc704\uac00 \uc544\ub2cc \uac1c\uc778 \ub2e8\uc704\ub85c\ub3c4 \ud6a8\uc728\uc801\uc778 \ubc29\ubc95\ub860\uc785\ub2c8\ub2e4. \ucd5c\uadfc\uc5d0\ub294 \ud68c\uc758\uc801\uc778 \uc2dc\uac01\ub4e4\ub3c4 \ub9ce\uc774 \uc788\uae30\ub294 \ud569\ub2c8\ub2e4\ub9cc, \ucc44\uc6a9 \ud3ec\uc9c0\uc158\uc5d0 DevOps \ud3ec\uc9c0\uc158\uc774 \uc788\ub2e4\ub294 \uac83 \ub9cc\uc73c\ub85c\ub3c4 \uc5bc\ub9c8\ub098 \ub300\uc911\uc801\uc778 \ubc29\ubc95\ub860\uc778\uc9c0 \uccb4\uac10\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.  </p> <p>DevOps \uc5d0 \uad00\uc2ec\uc774 \uc788\uc73c\uc2dc\ub2e4\uba74 \uc544\ub798 \ub450 \uac00\uc9c0 \uae00\uc744 \uc77d\uc5b4\ubcf4\uc2dc\uae38 \ucd94\ucc9c\ub4dc\ub9bd\ub2c8\ub2e4. DevOps \uc5d0 \ub300\ud55c \uc544\ub9c8\uc874\uc758 \uc815\uc758\uc640 \ucd5c\uadfc\uc758 \ud68c\uc758\uc801\uc778 \uc2dc\uac01\uc5d0 \ub300\ud55c \ud3ec\uc2a4\ud2b8 \uc785\ub2c8\ub2e4.  </p> <ol> <li>DevOps\uc5d0 \ub300\ud55c \ud68c\uc758\ub860 </li> <li>AWS\uc758 DevOps \uc815\uc758</li> </ol>"},{"location":"intros/LLMOps/#mlops","title":"MLOps","text":"<p>DevOps \uc911\uc5d0\uc11c Machine Learning \uacfc \uad00\ub828\ub41c \ubd80\ubd84\uc744 \ub530\ub85c \uc9c0\uce6d\ud558\ub294 \uc6a9\uc5b4\uc774\uc790 \uac1c\ub150, \ubd84\uc57c\uc785\ub2c8\ub2e4.  ML \uc744 \uae30\ubc18\uc73c\ub85c\ud55c \uc11c\ube44\uc2a4\ub4e4\uc740 \uc5f0\uad6c/\uac1c\ubc1c \uc2dc\uc5d0 \ub370\uc774\ud130\uac00 \uc911\uc694\ud558\uc8e0. \uadf8\ub798\uc11c, \ub370\uc774\ud130\uc640 \ud559\uc2b5\uc744 \uc911\uc810\uc801\uc73c\ub85c \ud55c \uac1c\ubc1c, \ud14c\uc2a4\ud2b8, \uc6b4\uc601 \ud504\ub85c\uc138\uc2a4\uc5d0 \uc9d1\uc911\ud569\ub2c8\ub2e4.</p> <p>DevOps \uc640\uc758 \uad6c\uccb4\uc801\uc778 \ucc28\uc774\uc810\uc744 \uaf3d\uc73c\ub77c\uba74, - \ub370\uc774\ud130 \uc218\uc9d1, \uac00\uacf5, \ud65c\uc6a9 - \ubaa8\ub378\uc758 \ud559\uc2b5, \uac80\uc99d, \ubc30\ud3ec, \ubaa8\ub2c8\ud130\ub9c1 \uc815\ub3c4\uac00 \uc788\uaca0\uc2b5\ub2c8\ub2e4.</p> <p>DevOps\uc5d0\uc11c\uc758 \ucf54\ub4dc\uac00 MLOps \uc5d0\uc11c\uc758 \ub370\uc774\ud130&amp;\ubaa8\ub378 \uc774\ub77c\uace0 \ubcf4\uba74 \ub418\uaca0\uc2b5\ub2c8\ub2e4. \uc544\ub798 \uadf8\ub9bc\uc740 RedHat OpenShift \uc5d0\uc11c \ubc14\ub77c\ubcf4\ub294 MLOps \uc758 \uac1c\uc694\uc785\ub2c8\ub2e4.</p> <p></p> <ol> <li>Redhat\uc758 MLOps \uc815\uc758</li> </ol>"},{"location":"intros/LLMOps/#llmops","title":"LLMOps","text":"<p>MLOps\uc5d0\uc11c \ud55c\ubc1c\uc790\uad6d \ub354 \ub098\uc544\uac00 LLM \uc744 \uc704\ud55c DevOps \uc785\ub2c8\ub2e4. \ud3ec\ud568\uad00\uacc4\ub97c \ub530\uc838\ubcf4\uba74 <code>DevOps &gt; MLOps &gt; LLMOps</code> \ub77c\uace0 \ubd10\ub3c4 \ub418\uaca0\uc8e0. LLM (Large Language Model) \ub3c4 \uacb0\uad6d Machine Learning Model\uc758 \uc77c\uc885\uc785\ub2c8\ub2e4.</p> <p>\ud55c\uac00\uc9c0 \uac15\uc870\ud558\uc790\uba74, \uc791\uae08\uc758 LLM \uc740 Language \ub97c \ub118\uc5b4\uc11c Multimodality\ub85c \ubcc0\ud654\ud558\uace0 \uc788\uae30\uc5d0 LMMOps \ub77c\uace0 \ubd80\ub974\uae30\ub3c4 \ud558\uace0, \ubc94\uc6a9\uc801\uc778 \ubaa8\ub378\uc774\ub77c\ub294 \ub73b\uc5d0\uc11c FMOps (Foundation Models Ops) \ub77c\uace0 \ubd80\ub974\uae30\ub3c4 \ud569\ub2c8\ub2e4. 24\ub144\uae30\uc900 LLMOps \ub77c\uace0 \uac00\uc7a5 \ub9ce\uc774 \uce6d\ud558\uae30 \ub54c\ubb38\uc5d0 LLMOps \ub77c\uace0 \uc9c0\uce6d\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.</p> <p>\uae30\uc874\uc758 \ubaa8\ub378 MLOps\uc640\uc758 \ucc28\uc774\uc810\uc73c\ub85c\ub294 - Model \uacfc \ub370\uc774\ud130\uac00 \uc774 \ub9e4\uc6b0! \ub9e4\uc6b0\ub9e4\uc6b0\ub9e4\uc6b0 \ucee4\uc84c\ub2e4\ub294 \uc810 - LLM (\ub610\ub294 LMM, FM) \uc758 \uc544\uc6c3\ud48b\uc774 \uc815\ub7c9\ud3c9\uac00\uac00 \uc5b4\ub835\ub2e4\ub294\uc810 - \ubaa8\ub378\uc758 \uc55e\ub4a4\ub85c \ubd99\ub294 Agent, Retriever \ub610\ud55c \ubaa8\ub378\uc774 \uc790\uc758\uc801\uc73c\ub85c \ud310\ub2e8\ud558\uace0 \ubcc0\ud615/\uc218\ud589\ud55c\ub2e4\ub294 \uc810 - \uc0ac\uc6a9\uc790\uc758 \ub370\uc774\ud130\ub97c \uc218\uc9d1\ud558\uc5ec \ud65c\uc6a9 \ud558\ub294 \uac83\uc774 \uc911\uc694\ud574\uc84c\ub2e4\ub294 \uc810 \uc815\ub3c4\ub85c \uc694\uc57d\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>\ub530\ub77c\uc11c, - Tracing &amp; \uc720\uc800 \ud53c\ub4dc\ubc31 \uc218\uc9d1 - HIL (Human In the Loop) - \ud070 \uaddc\ubaa8\uc758 \ubaa8\ub378 &amp; \ub370\uc774\ud130 \uad00\ub9ac, \ud29c\ub2dd, \ud3c9\uac00, \uac80\uc99d, \ubc30\ud3ec \ub4f1\uc758 \uae30\ub2a5\uc774 \uc694\uad6c \ub429\ub2c8\ub2e4.</p> <p>\uac1c\uc778\uc801\uc73c\ub85c\ub294 \ud3c9\uac00, \uac80\uc99d \uc774 \uc815\ub2f5\uc774 \uc5c6\ub294 \ubb38\uc81c\uc774\uace0, \uc0ac\uc6a9\uc790\ub4e4\uc758 \uc774\uc6a9 \ud615\ud0dc\uac00 \ubcc0\ud654\ud558\uba74 \uc0c8\ub85c\uc6b4 \ud3c9\uac00, \uac80\uc99d \uae30\ubc95\uc774 \ub3c4\uc785\ub418\uc5b4\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0, \uc774\ub97c \ube60\ub974\uac8c \ubaa8\ub2c8\ud130\ub9c1\ud558\uace0 \uc801\uc6a9\uc2dc\ud0ac \uc218 \uc788\ub294 \uac83\uc774 \uac00\uc7a5 \ud544\uc694\ud55c \uae30\ub2a5\uc774 \uc544\ub2cc\uac00 \uc2f6\uc2b5\ub2c8\ub2e4.</p>"},{"location":"intros/LLMOps/#langsmith-as-a-llmops","title":"LangSmith as a LLMOps","text":"<p>LangSmith \ub294 \uc704 \ub098\uc5f4\ud55c \uae30\ub2a5\ub4e4\uc744 \ucda9\uc871\ud558\ub294 \ud50c\ub7ab\ud3fc\uc785\ub2c8\ub2e4. \ub530\ub77c\uc11c, LLMOps\ub77c\uace0 \ubd84\ub958 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc774\uc81c \uc9c1\uc811 \uc0ac\uc6a9\ud574\ubcf4\uba74\uc11c \uc720\uc6a9\ud568\uc744 \uccb4\ud5d8\ubcf4\ub3c4\ub85d \ud558\uc8e0.</p>"},{"location":"intros/LangSmith/","title":"LangSmith\ub294  \ubb34\uc5c7\uc778\uac00\uc694?","text":"<p>LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc704\ud55c \uac1c\ubc1c\uc790 \ud50c\ub7ab\ud3fc \uc785\ub2c8\ub2e4. LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uc9c1\uc811 \ub9cc\ub4dc\ub294 \ub3c4\uad6c\ub294 \uc544\ub2c8\uace0\uc694, LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ubc1c\uc0dd\ud560\ub9cc\ud55c \ubc84\uadf8\ub97c \ucd94\uc801\ud558\uac70\ub098, \uc5b4\ub5a4 \uacfc\uc815\uc744 \ud1b5\ud574 \ucc57\ubd07\uc774 \ub300\ub2f5\uc744 \ud558\ub294\uc9c0, \uc5bc\ub9c8\ub098 \ube60\ub974\uac8c \ub300\ub2f5 \ud558\ub294 \uc9c0 \ub4f1\uc744 \ucd94\uc801\ud558\uace0, \uc720\uc800 \ud53c\ub4dc\ubc31\uc744 \uc218\uc9d1\ud558\uae30\ub3c4 \ud558\uace0, A/B \ud14c\uc2a4\ud2b8\ub3c4 \ud558\uace0 \uc5ec\ub7ec\uac00\uc9c0 \ud544\uc694\ud55c \uc77c\uc744 \ud574\uc90d\ub2c8\ub2e4.</p> <p>\uc9c1\uc811 \uc0ac\uc6a9\ud574\ubcf8 \uacb0\uacfc, \ud504\ub85c\ub355\uc158 \ub808\ubca8\uc774 \uc544\ub2c8\ub77c \uc5f0\uad6c/\uac1c\ubc1c \ub2e8\uacc4\uc5d0\uc11c\ub3c4 \ub9e4\uc6b0\ub9e4\uc6b0\ub9e4\uc6b0 \uc720\uc6a9\ud569\ub2c8\ub2e4. </p> <p>\ucca8\uc5b8\ud558\uc790\uba74,</p> <ul> <li>LangChain \uc5d0\uc11c \ub9cc\ub4e0 \ud50c\ub7ab\ud3fc\uc774\uc9c0\ub9cc \uaf2d LangChain \uacfc \ud568\uaed8 \uc0ac\uc6a9\ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4.</li> <li>LLM \ubfd0 \uc544\ub2c8\ub77c \uba40\ud2f0\ubaa8\ub2ec\ub9ac\ud2f0\ub85c \ud655\uc7a5\ub41c \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\ub3c4 \uc720\uc6a9\ud569\ub2c8\ub2e4.  </li> </ul>","tags":["langsmith"]},{"location":"intros/LangSmith/#_1","title":"\uc8fc\uc694 \uae30\ub2a5","text":"<ul> <li>Tracing (\ucd94\uc801)</li> <li>Dataset (\ub370\uc774\ud130 \uad00\ub9ac)</li> <li>Evaluation (\ud3c9\uac00)</li> <li>Human Feedback (\uc720\uc800 \ud53c\ub4dc\ubc31)</li> <li>Monitoring and Automations (\ubaa8\ub2c8\ud130\ub9c1)</li> <li>Playground </li> <li>Prompts (\ud504\ub86c\ud504\ud2b8)</li> </ul>","tags":["langsmith"]},{"location":"intros/LangSmith/#_2","title":"\uc7a5\uc810","text":"","tags":["langsmith"]},{"location":"intros/LangSmith/#_3","title":"\uc5f0\uad6c/\uac1c\ubc1c\uc790\uc758 \uc785\uc7a5\uc5d0\uc11c","text":"<p>LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc5ec\ub7ec \ud615\ud0dc\uac00 \ub420 \uc218 \uc788\uc9c0\ub9cc, \uae30\ubcf8\uc801\uc73c\ub85c\ub294 LLM \uc55e\ub4a4\uc5d0 agents \ub4e4\uc774 \ubd99\uc740 \ucc57\ubd07\uc758 \ud615\ud0dc\ub97c \uae30\ubcf8 \uad6c\uc870\ub85c \uac00\uc838\uac00\uaca0\uc8e0. RAG (Retrieval Augmented Generation) \uc774\ub098 \uc6f9\ube0c\ub77c\uc6b0\uc9d5 \uac19\uc740 \ud589\uc704\ub4e4\uc774 LLM \uc55e\ub2e8\uc5d0 \ubd99\ub294\ub2e4\uace0 \uac00\uc815\ud558\uba74, \uac80\uc0c9\uacfc LLM \uc758 \uc131\ub2a5\uc744 \uad6c\ubd84\ud560 \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc591\ud55c \uc0ac\uc6a9\uc790\uc758 \uc9c8\ubb38\uc5d0 \ub530\ub77c \ub2f5\ubcc0\uc744 \uc798 \ubabb\ud558\ub294 \uacbd\uc6b0\ub4e4\uc774 \uc788\uc744 \ud150\ub370, \uc5b4\ub5a4 \ubd80\ubd84\uc774 \ubb38\uc81c\uc778\uc9c0 \ub2e8\uacc4\ub4e4\uc744 \ucd94\uc801\ud560 \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub9ac\uace0 \uadf8 \ub370\uc774\ud130\ub97c \uae30\ubc18\uc73c\ub85c \uac1c\uc120\uc744 \ud574\uc57c\uaca0\uc8e0. \uc774 \uacfc\uc815\uc774 \ub2e8 \ud558\ub098\uc758 \uc14b\ud305\uc744 \ubaa8\ub450 \ub05d\ub0a9\ub2c8\ub2e4. \ub108\ubb34\ub108\ubb34 \ud3b8\ud558\uace0, 24\ub144 \uc0c1\ubc18\uae30 \uae30\uc900 \ub2e4\ub978 \uc720\uc758\ubbf8\ud55c \ud504\ub808\uc784\uc6cc\ud06c\ub294 \ucc3e\uc9c0 \ubabb\ud588\uc2b5\ub2c8\ub2e4. LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uadf8 \uc131\ub2a5\uc744 \uc815\ub7c9\ud654 \ud558\uae30\ub3c4 \uc5b4\ub824\uc6b4\ub370, \ud3c9\uac00 \ub3c4\uad6c\ub3c4 \uc798 \ub418\uc5b4 \uc788\uc5b4\uc11c \ud3c9\uac00\ub97c \uc27d\uac8c \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p>","tags":["langsmith"]},{"location":"intros/LangSmith/#_4","title":"\ud611\uc5c5\uc758 \uad00\uc810\uc5d0\uc11c","text":"<p>LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \ud0c0\uac9f \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub530\ub77c \uadf8 \ubd84\uc57c \uc804\ubb38\uac00\uc758 \ub3c4\uc6c0\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. \uc608\ub97c \ub4e4\uc5b4 \uc800\ub294 ESG \uad00\ub828 LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158 \ud504\ub85c\uc81d\ud2b8\ub97c \uc9c4\ud589\ud588\ub294\ub370, ESG \uc804\ubb38\uac00\uc758 \ub3c4\uc6c0\uc774 \ud544\uc694\ud569\ub2c8\ub2e4. LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc774 ESG \uc6a9\uc5b4\uc758 \uc815\uc758\ub294 \uc815\ud655\ud558\uac8c \ud30c\uc545 \ud558\uace0 \uc788\ub294\ub370, \uc801\uc808\ud55c \uc790\ub8cc\ub97c \uc798 \uac80\uc0c9\ud588\ub294\uc9c0, \ud560\ub8e8\uc2dc\ub124\uc774\uc158\uc774 \ubc1c\uc0dd\ud558\uc9c0\ub294 \uc54a\uc558\ub294\uc9c0 \uc81c\uac00 \ud310\ub2e8\ud558\uae30\uac00 \uc5b4\ub824\uc6e0\uc8e0. LangSmith \ud50c\ub7ab\ud3fc\uc744 \ud1b5\ud574 ESG \uc804\ubb38\uac00\uc5d0\uac8c \ub370\uc774\ud130\ub97c \uacf5\uc720\ud558\uac70\ub098, ESG \uc804\ubb38\uac00\uac00 \ubc14\ub85c\ubc14\ub85c \uc9c1\uc811 \ud50c\ub808\uc774\uadf8\ub77c\uc6b4\ub4dc\ub85c \uc2e4\ud5d8\uc744 \ud558\uba70 \uac1c\uc120\uc744 \ud55c\ub2e4\uac70\ub098 \ud3b8\ub9ac\ud55c \uc810\uc774 \ub9ce\uc2b5\ub2c8\ub2e4.</p>","tags":["langsmith"]},{"location":"intros/LangSmith/#_5","title":"\uc6b4\uc601\uc790\uc758 \uc785\uc7a5\uc5d0\uc11c","text":"<p>\uc2e4\uc81c\ub85c \uc11c\ube44\uc2a4\ub85c \ub098\uac00\uac8c \ub418\uba74, LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ub2f5\ubcc0\uc774 \ub290\ub9ac\uc9c0\ub294 \uc54a\uc740\uc9c0, \uc0ac\uc6a9\uc790\ub4e4\uc740 \ub2f5\ubcc0\uc5d0 \ub300\ud574 \ub9cc\uc871\ud558\uace0 \uc788\ub294\uc9c0 \ubaa8\ub2c8\ud130\ub9c1\uc744 \ud574\uc57c\ud569\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\ub4e4\uc758 \ud53c\ub4dc\ubc31\uc740 AB \ud14c\uc2a4\ud2b8\ub85c \uac1c\uc120\uc5d0 \uc0ac\uc6a9\ub420 \uc218\ub3c4 \uc788\uace0, \ud559\uc2b5 \ub370\uc774\ud130\ub85c \ub2e4\uc2dc \ud65c\uc6a9\ub420 \uc218\ub3c4 \uc788\uc8e0. \ubaa8\ub4e0 \ucd94\uc801 run \uc5d0 \ub300\ud574 \uc138\uc138\ud788 \uc5b4\ub514\uc11c \uc2dc\uac04\uc774 \uc5bc\ub9c8\ub098 \uac78\ub838\ub294\uc9c0 \ubcfc \uc218 \uc788\uae30 \ub54c\ubb38\uc5d0 \uc6b4\uc601\uc2dc\uc5d0 \ud544\uc694\ud55c \ubd80\ubd84\ub4e4\uc744 \ubc14\ub85c\ubc14\ub85c \uce90\uce58\ud558\uae30\ub3c4 \uc88b\uc2b5\ub2c8\ub2e4.  </p>","tags":["langsmith"]},{"location":"intros/LangSmith/#_6","title":"\uacb0\ub860","text":"<p>LangSmith \uc88b\uc2b5\ub2c8\ub2e4. \uc2dc\uac04\uc774 \uc9c0\ub098\uba74 \ub9ce\uc740 \uacbd\uc7c1\uc790\uac00 \ub4f1\uc7a5\ud560 \uc218 \uc788\uaca0\uc9c0\ub9cc, 24\ub144 \uae30\uc900\uc73c\ub85c\ub294 LLM \uc744 \uc0c1\uc5c5\ud654 \ud558\ub294 \uacfc\uc815\uc5d0 \uaf2d \ud544\uc694\ud55c \ub3c4\uad6c\ub77c\uace0 \uc0dd\uac01\ub429\ub2c8\ub2e4. \uadf8\ub798\uc11c \uc81c\uac00 \uc774 \uae00\uc744 \uc4f0\uace0 \uac15\uc758\ub97c \ub9cc\ub4e4\uace0 \uc788\uc8e0. \uc81c\uac00 LLM \uc744 \uc0c1\uc5c5\ud654 \uc2dc\ud0a4\ub294 \uacfc\uc815\uc5d0\uc11c \ud544\uc694\ud55c \uc694\uad6c \uc0ac\ud56d\uc744 \uc815\ud655\ud788 \ub9cc\uc871\ud558\ub294 \uc720\uc77c\ud55c \ub3c4\uad6c\uc600\uace0, \ud55c\uad6d\uc5b4 \uc790\ub8cc\uac00 \uc5c6\uc744 \ubfd0\ub354\ub7ec, N \uac1c\uc758 \uae30\uc5c5\uc5d0\uc11c \uac15\uc758\ub97c \uc694\uccad\ud588\uae30\uc5d0 \uc2dc\uc7a5\uc758 \uc218\uc694\ub3c4 \ud655\uc778\ud588\uc2b5\ub2c8\ub2e4.</p>","tags":["langsmith"]},{"location":"intros/Pricing/","title":"\uac00\uaca9 \uc815\ucc45","text":"<p>\uc81c\uc77c \uc911\uc694\ud55c \uac83 \uba3c\uc800 \uc694\uc57d\ud558\uaca0\uc2b5\ub2c8\ub2e4.</p> <p>LangSmith (\ub7ad\uc2a4\ubbf8\uc2a4) \ub294 \ubb34\ub8cc\ub85c \uc2dc\uc791 \uac00\ub2a5\ud569\ub2c8\ub2e4.</p> <p>\uc0ac\uc6a9\ub7c9\uc774 \ub9ce\uc544\uc9c0\uba74, \ube44\uc6a9\uc744 \ub0b4\uc57c \ud558\ub294\ub370, \uac1c\ubc1c\ub2e8\uacc4\uc5d0\uc11c \uc0ac\uc6a9\ud558\uae30\uc5d0\ub294 \ucda9\ubd84\ud569\ub2c8\ub2e4. \ud639\uc2dc \ub108\ubb34 \uc0ac\uc6a9\ub7c9\uc774 \ub108\ubb34 \ub9ce\uc544\uc9c8 \uac83\uc774 \uace0\ubbfc\uc774\ub77c\uba74, self hosting \uc0ac\uc6a9\ub3c4 \uac00\ub2a5\ud55c\ub370, \uc5d4\ud130\ud504\ub77c\uc774\uc988 \ubb38\uc758\ub97c \ud574\ubd10\uc57c \ud569\ub2c8\ub2e4. LangFuse \uc640 \uac19\uc740 \ub2e4\ub978 \uc624\ud508\uc18c\uc2a4 \ub300\uccb4\uc81c\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.  </p>"},{"location":"intros/Pricing/#langsmith-cloud","title":"LangSmith Cloud","text":"<p>\uae30\ubcf8\uc801\uc73c\ub85c LangSmith \ub294 \ud074\ub77c\uc6b0\ub4dc \uc11c\ube44\uc2a4 \uc785\ub2c8\ub2e4. \uadf8\ub0e5 \uacf5\ud648\uc5d0\uc11c \uac00\uc785\ud558\uace0 \ubc14\ub85c \uc0ac\uc6a9\ud558\uc2dc\uba74 \ub429\ub2c8\ub2e4. \uc774 \ub54c \ubb34\ub8cc\uc0ac\uc6a9\ub7c9\uc774 \uaf64 \ub429\ub2c8\ub2e4. 24\ub144 7\uc6d4 \uae30\uc900, \ub9e4\uc6d4 5000 tracing \uae4c\uc9c0 \ubb34\ub8cc \uc785\ub2c8\ub2e4. \uac1c\ubc1c \ub2e8\uacc4\uc5d0\uc11c\ub294 \ub9e4\uc6d4 5000 \uac1c \uc774\uc0c1\uc758 trace \ub97c \ub9cc\ub4e0\ub2e4\uba74, \ubb34\ub8cc\uc0ac\uc6a9\uc774 \uc911\uc694\ud55c \ubd84\uc740 \uc544\ub2c8\uc2dc\uaca0\uc8e0.  </p> <p>\uc694\uae08\uc740 \ud06c\uac8c \uc544\ub798\uc640 \uac19\uc740 \ud56d\ubaa9\uc5d0 \ubd80\uacfc\uac00 \ub429\ub2c8\ub2e4.   - Trace \uac00 \uc313\uc774\ub294 \ub9cc\ud07c \ube44\uc6a9\uc774 \ubc1c\uc0dd\ud569\ub2c8\ub2e4.       - Trace \ub294 14\uc77c \ubcf4\uad00, 400\uc77c \ubcf4\uad00 \ud06c\uac8c \ub450 \uac00\uc9c0\uc5d0 \ub530\ub77c \uac00\uaca9\uc774 \ub2ec\ub77c\uc9d1\ub2c8\ub2e4.   - \ud558\ub098\uc758 \ud504\ub85c\uc81d\ud2b8\ub97c \uba87 \uac1c\uc758 \uacc4\uc815\uc774 \uac19\uc774 \uc791\uc5c5\ud558\ub290\ub0d0\uc5d0 \ub530\ub77c \ube44\uc6a9\uc774 \ubc1c\uc0dd\ud569\ub2c8\ub2e4.</p> <p>\uc2a4\ud0c0\ud2b8\uc5c5 \ud560\uc778\ub3c4 \uc788\ub294\ub370 \uc800\ub294 \ub300\ucda9 \ubc18\uac12\uc815\ub3c4\ub85c \ud560\uc778 \ud574\uc92c\uace0, \uc774\ub294 \uc544\ub9c8 \ud68c\uc0ac\ub9c8\ub2e4 \uc2dc\uc810\ub9c8\ub2e4 \ub9ce\uc774 \ub2e4\ub97c \uac83 \uac19\ub124\uc694.  \uc2dc\uc810\ub9c8\ub2e4 \ub2ec\ub77c\uc9c8 \ud14c\ub2c8 \uaf2d \uacf5\uc2dd \uac00\uaca9 \uc548\ub0b4 \ud398\uc774\uc9c0 \ub97c \ucc38\uc870\ud558\uc138\uc694.  </p>"},{"location":"intros/Pricing/#self-hosting","title":"Self Hosting","text":"<p>LangSmith \ud50c\ub7ab\ud3fc\uc740 \uc624\ud508\uc18c\uc2a4\ub294 \uc544\ub2c8\uc9c0\ub9cc, \uc9c1\uc811 \ud638\uc2a4\ud305\uc740 \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc548\ub0b4\ub97c \ubcf4\ub2c8 \ucfe0\ubc84\ub124\ud2f0\uc2a4\ub791 \ub3c4\ucee4\ub85c \uc124\uce58\ud558\ub294 \uc548\ub0b4\uac00 \uc788\ub124\uc694. \uc774\uac78 \uc0dd\uac01\ud558\uc2dc\ub294 \ubd84\ub4e4\uc740 \uc774\ubbf8 \uace0\uc218\uc774\uc2e4\ud14c\ub2c8 \uc790\uc138\ud788 \uc124\uba85\uc740 \uc0dd\ub7b5\ud558\uace0\uc694, \ub9c1\ud06c\ub9cc \ub2ec\uc544\ub461\ub2c8\ub2e4. \ucc38\uc870 - \uc548\ub0b4 \ud398\uc774\uc9c0</p>"},{"location":"intros/Tracing_concept/","title":"Tracing \ucee8\uc149 \uac00\uc774\ub4dc","text":"<p>LangSmith \uc5d0\uc11c \uace0\uc548\ud55c Tracing \ucee8\uc149 \uac00\uc774\ub4dc \uc785\ub2c8\ub2e4. LangSmith\ub294 Project &gt;&gt; Trace &gt;&gt; Run  \ub2e8\uc704\ub85c \ub370\uc774\ud130\ub97c \uad00\ub9ac\ud569\ub2c8\ub2e4.</p> <p></p>"},{"location":"intros/Tracing_concept/#run","title":"Run","text":"<ul> <li>\ud558\ub098\uc758 In, \ud558\ub098\uc758 Out \uc785\ub2c8\ub2e4.</li> </ul>"},{"location":"intros/Tracing_concept/#trace","title":"Trace","text":"<ul> <li>\uc0ac\uc6a9\uc790 \uc785\uc7a5\uc5d0\uc11c\uc758 \ud558\ub098\uc758 In, \ud558\ub098\uc758 Out \uc785\ub2c8\ub2e4.</li> <li>\uc608\ub97c \ub4e4\uc5b4 RAG \ub77c\uace0 \uac00\uc815\ud558\uba74, Retrieve \uac00 \ud558\ub098\uc758 Run, Generation\uc774 \ud558\ub098\uc758 Run \uc774\ub77c \ud569\uccd0\uc11c \ud558\ub098\uc758 Trace \uc785\ub2c8\ub2e4.</li> </ul> <p>\uc544\ub798 \ubcf4\ub294 \uac83\uacfc \uac19\uc774 \uc77c\ubc18\uc801\uc778 LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uc5ec\ub7ec\uac1c\uc758 Run\uc774 \ubaa8\uc5ec \ud558\ub098\uc758 Trace \uac00 \ub418\uaca0\uc8e0.</p> <p></p>"},{"location":"intros/Tracing_concept/#project","title":"Project","text":"<ul> <li>\uc5ec\ub7ec \uac1c\uc758 Trace \ub4e4 \ubaa8\uc74c\uc73c\ub85c \uc6b4\uc601\uc790\uac00 \uad00\ub9ac\ud558\ub294 \ub2e8\uc704\uc785\ub2c8\ub2e4.</li> <li>\ucd94\uc801 \uae30\ub2a5\uc744 \ud65c\uc131\ud654 \ud560\ub54c, Project\ub97c \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul>"},{"location":"intros/Tracing_concept/#feedback","title":"Feedback","text":"<p>\uac01\uac01\uc758 Run \uc5d0 \ud53c\ub4dc\ubc31\uc744 \uc218\uc9d1\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.  </p> <ul> <li>\uc0ac\uc6a9\uc790\uac00 \ud53c\ub4dc\ubc31\uc744 \uac19\uc774 \ub0a0\ub824\uc904 \uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>LangSmith \uc5d0\uc11c \uc6b4\uc601\uc790\uac00 \uc9c1\uc811 \ub2ec\uc544 \uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>Evaluation \uacfc\uc815\uc744 \uc790\ub3d9\ud654\ud574\uc11c \ud504\ub85c\uadf8\ub7a8\uc774 \ub2ec\uc544 \uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</li> </ul> <p>\uc544\ub798\uc758 \uacbd\uc6b0\ub294 \uc0ac\uc6a9\uc790\uac00 \ud53c\ub4dc\ubc31\uc744 \ucc57\ubd07 \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \ub9c8\ud0b9 \ud574\uc900 \uacbd\uc6b0 \uc785\ub2c8\ub2e4. API \ub97c \ud1b5\ud574 \uc218\uc9d1 \ub418\uc5c8\uc2b5\ub2c8\ub2e4.</p> <p></p>"},{"location":"intros/Tracing_concept/#tag-metadata","title":"Tag &amp; Metadata","text":"<p>\uc774 \uc678\uc5d0\ub3c4 \ud0dc\uadf8\ub791 \uba54\ud0c0\ub370\uc774\ud130\ub97c \ucd94\uac00\ub85c \ub2ec\uc544\uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ucd94\uac00 \uc815\ubcf4\ub97c \ub2ec\uc544 \uc8fc\ub294 \uac1c\ub150\uc774\ub85c \uc77c\ubc18\uc801\uc778 \ub370\uc774\ud130 \uad00\ub9ac\uc5d0\uc11c\uc758 \ud0dc\uadf8\ub791 \uba54\ud0c0\ub370\uc774\ud130\uc640 \uac1c\ub150\uc774 \uac19\uc2b5\ub2c8\ub2e4. \uc5ed\uc2dc \uc9c1\uc811 LangSmith\uc5d0\uc11c \ub2ec\uc544\uc904 \uc218\ub3c4 \uc788\uace0, LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0\uc11c \uac19\uc774 \ub2ec\uc544 \uc904 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>LangSmith \ud074\ub77c\uc6b0\ub4dc \uc11c\ube44\uc2a4\ub294 400\uc77c\uac04 \ub370\uc774\ud130\ub97c \ubcf4\uad00\ud574 \uc90d\ub2c8\ub2e4. \uadf8 \uc774\ud6c4\uc5d0\ub294 \ub0a0\ub77c\uac04\ub2e4\uace0 \ud558\ub124\uc694.</p>"},{"location":"intros/Tracing_concept/#_1","title":"\ucc38\uc870","text":"<ul> <li>LangSmith \uacf5\uc2dd \ubb38\uc11c</li> </ul>"},{"location":"practice/1_LangSmith_Tracing/","title":"LangSmith Tracing","text":"In\u00a0[\u00a0]: Copied! <pre># download txt file from the link\n!wget https://www.gutenberg.org/cache/epub/23950/pg23950.txt\n</pre> # download txt file from the link !wget https://www.gutenberg.org/cache/epub/23950/pg23950.txt In\u00a0[\u00a0]: Copied! <pre># read data from the file\nwith open('pg23950.txt', 'r') as f:\n    text = f.read()\n\n# get rid of '\\u3000'\ntext = text.replace('\\u3000', '')\n</pre> # read data from the file with open('pg23950.txt', 'r') as f:     text = f.read()  # get rid of '\\u3000' text = text.replace('\\u3000', '') In\u00a0[\u00a0]: Copied! <pre># split text files to chunk based on empty line, and get rid of metadata\nchunks = text.split('\\n\\n')\nchunks = chunks[10:] # cut starts\nchunks = chunks[:3694] # cut ends\n\nchunks[3]\n\n# remove \"\\n\" in the each chunk\n#for i in range(len(chunks)):\n#  chunks[i] = chunks[i].replace(\"\\n\", \"\")\n</pre> # split text files to chunk based on empty line, and get rid of metadata chunks = text.split('\\n\\n') chunks = chunks[10:] # cut starts chunks = chunks[:3694] # cut ends  chunks[3]  # remove \"\\n\" in the each chunk #for i in range(len(chunks)): #  chunks[i] = chunks[i].replace(\"\\n\", \"\") In\u00a0[\u00a0]: Copied! <pre>!pip install -U openai\n</pre> !pip install -U openai In\u00a0[\u00a0]: Copied! <pre>import os\n\nos.environ[\"OPENAI_API_KEY\"]=\"\"\n</pre> import os  os.environ[\"OPENAI_API_KEY\"]=\"\" In\u00a0[\u00a0]: Copied! <pre>import openai\n\nclient = openai.Client()\n\ndef translate_pipeline(prompt:str, user_input: str):\n\n    result = client.chat.completions.create(\n      model=\"gpt-4o-mini\",\n      messages=[\n      {\n       \"role\": \"system\",\n       \"content\": \"You will be provided with a sentence in Chinese, and your task is to translate it into Korean.\"\n      },\n      {\n       \"role\": \"user\",\n       \"content\": prompt + user_input\n      }\n      ],\n      temperature=0.7,\n      top_p=1\n    )\n    return result.choices[0].message.content\n</pre> import openai  client = openai.Client()  def translate_pipeline(prompt:str, user_input: str):      result = client.chat.completions.create(       model=\"gpt-4o-mini\",       messages=[       {        \"role\": \"system\",        \"content\": \"You will be provided with a sentence in Chinese, and your task is to translate it into Korean.\"       },       {        \"role\": \"user\",        \"content\": prompt + user_input       }       ],       temperature=0.7,       top_p=1     )     return result.choices[0].message.content   In\u00a0[\u00a0]: Copied! <pre>translate_pipeline(\"\", chunks[2])\n</pre> translate_pipeline(\"\", chunks[2]) In\u00a0[\u00a0]: Copied! <pre>!pip install -U langsmith\n</pre> !pip install -U langsmith In\u00a0[\u00a0]: Copied! <pre>os.environ[\"LANGCHAIN_TRACING_V2\"]=\"true\"\nos.environ[\"LANGCHAIN_API_KEY\"]=\"\"\n</pre> os.environ[\"LANGCHAIN_TRACING_V2\"]=\"true\" os.environ[\"LANGCHAIN_API_KEY\"]=\"\" In\u00a0[\u00a0]: Copied! <pre>import openai\nfrom langsmith.wrappers import wrap_openai\nfrom langsmith import traceable\n\n# Auto-trace LLM calls in-context\nclient = wrap_openai(openai.Client())\n\n@traceable # Auto-trace this function\ndef translate_pipeline(prompt:str, user_input: str):\n\n    result = client.chat.completions.create(\n      model=\"gpt-4o-mini\",\n      messages=[\n      {\n       \"role\": \"system\",\n       \"content\": \"You will be provided with a sentence in Chinese, and your task is to translate it into Korean.\"\n      },\n      {\n       \"role\": \"user\",\n       \"content\": prompt + user_input\n      }\n      ],\n      temperature=0.7,\n      top_p=1\n    )\n    return result.choices[0].message.content\n</pre> import openai from langsmith.wrappers import wrap_openai from langsmith import traceable  # Auto-trace LLM calls in-context client = wrap_openai(openai.Client())  @traceable # Auto-trace this function def translate_pipeline(prompt:str, user_input: str):      result = client.chat.completions.create(       model=\"gpt-4o-mini\",       messages=[       {        \"role\": \"system\",        \"content\": \"You will be provided with a sentence in Chinese, and your task is to translate it into Korean.\"       },       {        \"role\": \"user\",        \"content\": prompt + user_input       }       ],       temperature=0.7,       top_p=1     )     return result.choices[0].message.content In\u00a0[\u00a0]: Copied! <pre>translate_pipeline(\"\", chunks[2])\n</pre> translate_pipeline(\"\", chunks[2]) In\u00a0[\u00a0]: Copied! <pre>@traceable(name=\"Translate Pipeline\",\n           project_name=\"Translator\",\n           tags=[\"sentence\"],\n           metadata={\"version\": \"1.0\"}) # Auto-trace this function\ndef translate_pipeline(prompt:str, user_input: str):\n\n    result = client.chat.completions.create(\n      model=\"gpt-4o-mini\",\n      messages=[\n      {\n       \"role\": \"system\",\n       \"content\": \"You will be provided with a sentence in Chinese, and your task is to translate it into Korean.\"\n      },\n      {\n       \"role\": \"user\",\n       \"content\": prompt + user_input\n      }\n      ],\n      temperature=0.7,\n      top_p=1\n    )\n    return result.choices[0].message.content\n</pre> @traceable(name=\"Translate Pipeline\",            project_name=\"Translator\",            tags=[\"sentence\"],            metadata={\"version\": \"1.0\"}) # Auto-trace this function def translate_pipeline(prompt:str, user_input: str):      result = client.chat.completions.create(       model=\"gpt-4o-mini\",       messages=[       {        \"role\": \"system\",        \"content\": \"You will be provided with a sentence in Chinese, and your task is to translate it into Korean.\"       },       {        \"role\": \"user\",        \"content\": prompt + user_input       }       ],       temperature=0.7,       top_p=1     )     return result.choices[0].message.content In\u00a0[\u00a0]: Copied! <pre>translate_pipeline(\"\", chunks[2])\n</pre> translate_pipeline(\"\", chunks[2]) In\u00a0[\u00a0]: Copied! <pre># install tiktoken\n!pip install tiktoken\n</pre> # install tiktoken !pip install tiktoken In\u00a0[\u00a0]: Copied! <pre># find out number of tokens of txt file\nimport tiktoken\n\n# Initialize tokenizer\nencoding = tiktoken.get_encoding(\"cl100k_base\")\n# Tokenize the text\ntokens = encoding.encode(text)\n# Get the size of the tokens\ntoken_size = len(tokens)\n\nprint(f\"Number of tokens: {token_size}\")\n</pre> # find out number of tokens of txt file import tiktoken  # Initialize tokenizer encoding = tiktoken.get_encoding(\"cl100k_base\") # Tokenize the text tokens = encoding.encode(text) # Get the size of the tokens token_size = len(tokens)  print(f\"Number of tokens: {token_size}\") In\u00a0[\u00a0]: Copied! <pre># for 20 chunks, translate it.\nfor chunk in chunks[:20]:\n    print(translate_pipeline(\"\", chunk))\n</pre> # for 20 chunks, translate it. for chunk in chunks[:20]:     print(translate_pipeline(\"\", chunk)) <ul> <li>\ubd84\uba85\ud788 \ubc88\uc5ed\uc744 \uc81c\ub300\ub85c \ubabb\ud55c \ubb38\uc7a5\ub4e4\uc774 \uc788\uc744 \uac83 \uc785\ub2c8\ub2e4. LangSmith \uc5d0\uc11c \ud45c\uc2dc\ub97c \ud574\ub461\uc2dc\ub2e4.</li> <li>feedback \uc73c\ub85c \uc810\uc218\ub97c \ub9e4\uaca8\ub194\ub3c4 \ub418\uace0, annotation queue \uc5d0 \ub123\uc5b4\ub194\ub3c4 \ub429\ub2c8\ub2e4.</li> </ul> In\u00a0[\u00a0]: Copied! <pre># for loop these text to 1 ~ 220\n# for i in [\"\u7b2c\u4e00\u56de\", \"\u7b2c\u4e8c\u56de\", \"\u7b2c\u4e09\u56de\", \"\u7b2c\u56db\u56de\", \"\u7b2c\u4e94\u56de\", ... , \"\u7b2c\u4e00\u4e8c\u25cb\u56de\"]\ndef number_to_chinese(num):\n    numerals = {\n        0: '\u25cb', 1: '\u4e00', 2: '\u4e8c', 3: '\u4e09', 4: '\u56db', 5: '\u4e94',\n        6: '\u516d', 7: '\u4e03', 8: '\u516b', 9: '\u4e5d', 10: '\u5341'\n    }\n    if num &lt;= 10:\n        return numerals[num]\n    elif num &lt; 20:\n        return numerals[10] + numerals[num - 10]\n    elif num &lt; 100:\n        if num % 10 == 0:\n          return numerals[num // 10] + numerals[10]\n        else:\n          return numerals[num // 10] + numerals[10] + numerals[num % 10]\n    else:\n      return numerals[num // 100] + numerals[(num%100) // 10] + numerals[num % 10]\n\n\nrounds = [f\"\u7b2c{number_to_chinese(i)}\u56de\" for i in range(1, 122)]\n</pre> # for loop these text to 1 ~ 220 # for i in [\"\u7b2c\u4e00\u56de\", \"\u7b2c\u4e8c\u56de\", \"\u7b2c\u4e09\u56de\", \"\u7b2c\u56db\u56de\", \"\u7b2c\u4e94\u56de\", ... , \"\u7b2c\u4e00\u4e8c\u25cb\u56de\"] def number_to_chinese(num):     numerals = {         0: '\u25cb', 1: '\u4e00', 2: '\u4e8c', 3: '\u4e09', 4: '\u56db', 5: '\u4e94',         6: '\u516d', 7: '\u4e03', 8: '\u516b', 9: '\u4e5d', 10: '\u5341'     }     if num &lt;= 10:         return numerals[num]     elif num &lt; 20:         return numerals[10] + numerals[num - 10]     elif num &lt; 100:         if num % 10 == 0:           return numerals[num // 10] + numerals[10]         else:           return numerals[num // 10] + numerals[10] + numerals[num % 10]     else:       return numerals[num // 100] + numerals[(num%100) // 10] + numerals[num % 10]   rounds = [f\"\u7b2c{number_to_chinese(i)}\u56de\" for i in range(1, 122)] In\u00a0[\u00a0]: Copied! <pre>round_texts = []\n\n# loop for chunks until chunk has a round\ncurrent_round = 1\ncurrent_round_texts = []\nfor chunk in chunks:\n  current_round_texts.append(chunk)\n  if rounds[current_round] in chunk:\n    subject_chunk = current_round_texts[-1]\n    round_texts.append( \"\\n\".join(current_round_texts[:-1]) )\n    current_round_texts = [subject_chunk]\n    current_round += 1\nround_texts.append(\"\\n\".join(current_round_texts[:-1]))\n</pre> round_texts = []  # loop for chunks until chunk has a round current_round = 1 current_round_texts = [] for chunk in chunks:   current_round_texts.append(chunk)   if rounds[current_round] in chunk:     subject_chunk = current_round_texts[-1]     round_texts.append( \"\\n\".join(current_round_texts[:-1]) )     current_round_texts = [subject_chunk]     current_round += 1 round_texts.append(\"\\n\".join(current_round_texts[:-1])) In\u00a0[\u00a0]: Copied! <pre>print(round_texts[3])\n</pre> print(round_texts[3]) In\u00a0[\u00a0]: Copied! <pre>import pandas as pd\n\n# read data from google spreadsheet, make it dataframe\ndf = pd.read_csv('https://docs.google.com/spreadsheets/d/' +\n                   '1DFK_gqMfJ34ufaMyk03crEzK5lEYEHoatmTK05WqU_0' +\n                   '/export?gid=0&amp;format=csv',\n                   # Set first column as rownames in data frame\n                   index_col=0,\n                  )\ndf.head(5)\n</pre> import pandas as pd  # read data from google spreadsheet, make it dataframe df = pd.read_csv('https://docs.google.com/spreadsheets/d/' +                    '1DFK_gqMfJ34ufaMyk03crEzK5lEYEHoatmTK05WqU_0' +                    '/export?gid=0&amp;format=csv',                    # Set first column as rownames in data frame                    index_col=0,                   ) df.head(5) In\u00a0[\u00a0]: Copied! <pre>print(df.loc[\"1\ud654\", \"\uae40\ud658\uc900 \ubb38\uccb4\"])\n</pre> print(df.loc[\"1\ud654\", \"\uae40\ud658\uc900 \ubb38\uccb4\"]) In\u00a0[\u00a0]: Copied! <pre># \ud504\ub86c\ud504\ud305\ndef prompting(examples, name, latest_sentences: str, chunk:str):\n return  f\"\"\"You are a professional translator and writer.\nYou will be provided with Chinese sentences which is the original text of \uc0bc\uad6d\uc9c0 (The Romance of Three Kingdoms).\nYour task is write a translated version of the Chinese sentences into Korean.\nThe result will be published in Korean online novel platform.\nYou have to write sentences in the style of recent web novel to be interesting.\n\nHere is the examples.\n\n///\nChinese Input: {df.loc[\"1\ud654\", f\"\uc6d0\ubb38\"]}\n///\nKorean Output: {df.loc[\"1\ud654\", f\"{name} \ubb38\uccb4\"]}\n///\n\n///\nChinese Input: {df.loc[\"2\ud654\", f\"\uc6d0\ubb38\"]}\n///\nKorean Output: {df.loc[\"2\ud654\", f\"{name} \ubb38\uccb4\"]}\n///\n\nTo make a consistency between sentences i will give you sentences that translated before.\nSentences written before:\n///\n{latest_sentences}\n///\n\nNow here is the sentences in chinse to translate.\n///\n{chunk}\n///\n\n\nWrite sentences in Korean.\n\n/// \ub77c\ub294 \uae00\uc790\ub294 \uad6c\ubd84\uc790\ub97c \uc4f4 \uac83\uc774\ubbc0\ub85c \uc808\ub300 \ub123\uc9c0 \ub9d0\uace0.\n\uc6d0\ubb38\uc744 \ubc88\uc5ed\ud558\ub294 \ub0b4\uc6a9 \uc678\uc5d0 \ub2e4\ub978 \uc124\uba85\ub3c4 \uc808\ub300 \ub123\uc9c0 \ub9c8.\n\"\"\"\n\n@traceable(name=\"Translate Pipeline\",\n           project_name=\"Translator\",\n           tags=[\"two-shot\"],\n           metadata={\"version\": \"2.0\"}) # Auto-trace this function\ndef translate_pipeline(df, name, latest_sentences:str, user_input: str):\n\n    result = client.chat.completions.create(\n      model=\"gpt-4o-mini\",\n      messages=[\n      {\n       \"role\": \"system\",\n       \"content\": \"You will be provided with a sentence in Chinese, and your task is to translate it into Korean.\"\n      },\n      {\n       \"role\": \"user\",\n       \"content\": prompting(df, name, latest_sentences,user_input)\n      }\n      ],\n      temperature=0.7,\n      top_p=1\n    )\n    return result.choices[0].message.content\n</pre> # \ud504\ub86c\ud504\ud305 def prompting(examples, name, latest_sentences: str, chunk:str):  return  f\"\"\"You are a professional translator and writer. You will be provided with Chinese sentences which is the original text of \uc0bc\uad6d\uc9c0 (The Romance of Three Kingdoms). Your task is write a translated version of the Chinese sentences into Korean. The result will be published in Korean online novel platform. You have to write sentences in the style of recent web novel to be interesting.  Here is the examples.  /// Chinese Input: {df.loc[\"1\ud654\", f\"\uc6d0\ubb38\"]} /// Korean Output: {df.loc[\"1\ud654\", f\"{name} \ubb38\uccb4\"]} ///  /// Chinese Input: {df.loc[\"2\ud654\", f\"\uc6d0\ubb38\"]} /// Korean Output: {df.loc[\"2\ud654\", f\"{name} \ubb38\uccb4\"]} ///  To make a consistency between sentences i will give you sentences that translated before. Sentences written before: /// {latest_sentences} ///  Now here is the sentences in chinse to translate. /// {chunk} ///   Write sentences in Korean.  /// \ub77c\ub294 \uae00\uc790\ub294 \uad6c\ubd84\uc790\ub97c \uc4f4 \uac83\uc774\ubbc0\ub85c \uc808\ub300 \ub123\uc9c0 \ub9d0\uace0. \uc6d0\ubb38\uc744 \ubc88\uc5ed\ud558\ub294 \ub0b4\uc6a9 \uc678\uc5d0 \ub2e4\ub978 \uc124\uba85\ub3c4 \uc808\ub300 \ub123\uc9c0 \ub9c8. \"\"\"  @traceable(name=\"Translate Pipeline\",            project_name=\"Translator\",            tags=[\"two-shot\"],            metadata={\"version\": \"2.0\"}) # Auto-trace this function def translate_pipeline(df, name, latest_sentences:str, user_input: str):      result = client.chat.completions.create(       model=\"gpt-4o-mini\",       messages=[       {        \"role\": \"system\",        \"content\": \"You will be provided with a sentence in Chinese, and your task is to translate it into Korean.\"       },       {        \"role\": \"user\",        \"content\": prompting(df, name, latest_sentences,user_input)       }       ],       temperature=0.7,       top_p=1     )     return result.choices[0].message.content In\u00a0[\u00a0]: Copied! <pre># Split the rounds in to sentences\ndef split_rounds(round_text):\n  sentences = round_text.split('\\n')\n  num_sentences = len(sentences)\n  sentences_to_join = [sentences[i:i+40] for i in range(0, len(sentences), 40)]\n\n  # if length of last sentences_to_join is under 20, add up last two elements\n  if len(sentences_to_join[-1]) &lt; 20:\n    sentences_to_join[-2] += sentences_to_join[-1]\n    del sentences_to_join[-1]\n\n  chunks = []\n  for sentence_list in sentences_to_join:\n    chunk = \"\".join(sentence_list)\n    chunks.append(chunk)\n\n  return chunks\n</pre> # Split the rounds in to sentences def split_rounds(round_text):   sentences = round_text.split('\\n')   num_sentences = len(sentences)   sentences_to_join = [sentences[i:i+40] for i in range(0, len(sentences), 40)]    # if length of last sentences_to_join is under 20, add up last two elements   if len(sentences_to_join[-1]) &lt; 20:     sentences_to_join[-2] += sentences_to_join[-1]     del sentences_to_join[-1]    chunks = []   for sentence_list in sentences_to_join:     chunk = \"\".join(sentence_list)     chunks.append(chunk)    return chunks In\u00a0[\u00a0]: Copied! <pre>splitted = split_rounds(round_texts[2])\nsplitted[-1]\n</pre> splitted = split_rounds(round_texts[2]) splitted[-1] In\u00a0[\u00a0]: Copied! <pre>name = \"\uae40\uc9c4\ud638\"\nhistories = [df.loc[\"1\ud654\", f\"{name} \ubb38\uccb4\"], df.loc[\"2\ud654\", f\"{name} \ubb38\uccb4\"]]\n\n# 3\ud654, 4\ud654 \ud14c\uc2a4\ud2b8\ni = 3\nfor chunk in round_texts[2:4]:\n  # open i.txt\n  with open(f\"{i}.txt\", \"w\") as f:\n    for chunk in split_rounds(chunk):\n      history = histories[-1]\n      result = translate_pipeline(df, name, history, chunk)\n      histories.append(result)\n\n      print(\" ********* \")\n      print(result)\n\n      #write to f\n      f.write(result)\n\n  i += 1\n</pre> name = \"\uae40\uc9c4\ud638\" histories = [df.loc[\"1\ud654\", f\"{name} \ubb38\uccb4\"], df.loc[\"2\ud654\", f\"{name} \ubb38\uccb4\"]]  # 3\ud654, 4\ud654 \ud14c\uc2a4\ud2b8 i = 3 for chunk in round_texts[2:4]:   # open i.txt   with open(f\"{i}.txt\", \"w\") as f:     for chunk in split_rounds(chunk):       history = histories[-1]       result = translate_pipeline(df, name, history, chunk)       histories.append(result)        print(\" ********* \")       print(result)        #write to f       f.write(result)    i += 1 In\u00a0[\u00a0]: Copied! <pre># zip ./*.txt files\n!zip -r ./result.zip ./\n</pre> # zip ./*.txt files !zip -r ./result.zip ./ In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"practice/1_LangSmith_Tracing/#langsmith-tracing","title":"LangSmith Tracing\u00b6","text":"<ul> <li><p>Trace \ub97c \ub2ec\uace0 \uc77c\uc744 \uc2dc\ucf1c\ubd05\uc2dc\ub2e4</p> </li> <li></li> <li><p>\uac00\ubccd\uac8c \ubc88\uc5ed\ubd80\ud130 \ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.</p> </li> </ul>"},{"location":"practice/1_LangSmith_Tracing/","title":"\uc0bc\uad6d\uc9c0 \uc6d0\ubb38\u00b6","text":"<p>https://www.gutenberg.org/cache/epub/23950/pg23950.txt</p>"},{"location":"practice/1_LangSmith_Tracing/#openai-api","title":"OPENAI API \ub97c \uc0ac\uc6a9\ud574\uc11c \ubc88\uc5ed\ud558\uae30\u00b6","text":"<ul> <li>openai python library \uc124\uce58</li> <li>api \ud0a4 \ubc1c\uae09 &amp; \ub4f1\ub85d</li> <li>prompting \uc73c\ub85c chunk \ub2e8\uc704 \ubc88\uc5ed</li> </ul>"},{"location":"practice/1_LangSmith_Tracing/#langsmith-tracing","title":"LangSmith Tracing \ucd94\uac00\ud558\uae30\u00b6","text":"<ul> <li>LangSmith \uac00\uc785 &amp; api_key \ubc1c\uae09</li> <li>\uc704 \ubc88\uc5ed task \uc5d0 tracing\uc744 \ucd94\uac00</li> </ul>"},{"location":"practice/1_LangSmith_Tracing/#lasngsmith-tracing","title":"LasngSmith Tracing \uc5d0 \ucd94\uac00 \uc815\ubcf4 \ub2ec\uae30\u00b6","text":"<ul> <li>project name, tag, metadata</li> </ul>"},{"location":"practice/1_LangSmith_Tracing/","title":"\uae30\ud0c0: \uc608\uc0c1 \ube44\uc6a9 \uccb4\ud06c\u00b6","text":"<ul> <li>tiktoken \uc73c\ub85c token \uc218 \uccb4\ud06c</li> </ul>"},{"location":"practice/1_LangSmith_Tracing/","title":"\uac1c\uc120 \uc791\uc5c5\u00b6","text":"<p>\ud504\ub86c\ud504\ud305\uc744 \ucd94\uac00\ud560 \uac83\uc778\ub370, \uc704 \ub370\uc774\ud130\ub97c \ubcf4\uace0 \ub9c8\uc74c\uc5d0 \uc548\ub4e0 \uac83\uc774\ub098, \uc608\uc0c1\ub418\ub294 \ubb38\uc81c\ub97c \ud574\uacb0\ud574\ubcf4\uc8e0.</p> <ul> <li>\uc911\uad6d\uc5b4\uac00 \uc11e\uc5ec \ub098\uc624\ub294 \uacbd\uc6b0\uac00 \uc788\uc74c.<ul> <li>\ud504\ub86c\ud504\ud305\uc744 \uac15\ud558\uac8c \uc8fc\uc790.</li> </ul> </li> <li>\uc7ac\ubbf8\uac00 \uc5c6\uc74c.<ul> <li>\uc9c1\uc811 \uc190\uc73c\ub85c \ub9cc\ub4e4\uc5b4\uc900 \ub370\uc774\ud130\ub97c \ub123\uc5b4\uc8fc\uc790.</li> <li>\uc6d0\ubb38 -&gt; \ubc88\uc5ed\ubcf8 \uc608\uc2dc\ub97c N \uac1c\ub97c \ub123\uc5b4\uc8fc\uc790 (* Few-shot Prompting)</li> <li>DATA link : \uc2a4\ud504\ub808\ub4dc \uc2dc\ud2b8 \ub9c1\ud06c</li> </ul> </li> <li>\uc55e/\ub4a4 \ubb38\uc7a5\ub4e4\uc774 \uc601\ud5a5\uc744 \uc8fc\uc9c0 \ubabb \ud568.<ul> <li>\uc6d0\ubcf8\uc758 1\ud68c \ub2e8\uc704\ub85c \ub123\uc5b4\uc8fc\uc790</li> <li>\uc55e\uc120 \ub0b4\uc6a9\uacfc \uc774\uc5b4\uc9c0\ub3c4\ub85d history \ub97c \uac19\uc774 \ub123\uc5b4\uc8fc\uc790</li> </ul> </li> </ul>"},{"location":"practice/2_LangSmith_Evaluation/","title":"Evalution","text":"In\u00a0[\u00a0]: Copied! <pre>import pandas as pd\n\ndata = {\n    \"Input\": [\n        \"\uc0bc\uad6d\uc9c0\uc5f0\uc758\uc758 \uc800\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?\",\n        \"\uc720\ube44\uc758 \uc790\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",\n        \"\uc870\uc870\uc758 \uc790\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",\n        \"\uc81c\uac08\ub7c9\uc758 \ubcc4\uba85\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",\n        \"\uc720\ube44\uc758 \ub450 \ubc88\uc9f8 \ubd80\uc778\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",\n        \"\uad00\uc6b0\uc758 \ubb34\uae30\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",\n        \"\uc7a5\ube44\uc758 \ubb34\uae30\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",\n        \"\uc0bc\uad6d\uc9c0\uc5f0\uc758\uc5d0\uc11c \uc624\ub098\ub77c\ub97c \uc138\uc6b4 \uc0ac\ub78c\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?\",\n        \"\uc870\uc870\uc758 \uc544\ub4e4 \uc911 \ud669\uc81c\uac00 \ub41c \uc0ac\ub78c\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?\",\n        \"\uc870\uc6b4\uc758 \uc790\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",\n        \"\uc720\ube44\uac00 \uc720\uc77c\ud558\uac8c \ud328\ubc30\ud55c \uc804\ud22c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",\n        \"\uc870\uc870\uc758 \uc815\uc801 \uc911 \ud558\ub098\ub85c \uc720\uba85\ud55c \uc778\ubb3c\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?\",\n        \"\uad00\uc6b0\uac00 \uc8fd\uc74c\uc744 \ub9de\uc774\ud55c \uacf3\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?\",\n        \"\ub3d9\ud0c1\uc758 \uc591\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?\",\n        \"\uc0bc\uad6d\uc9c0\uc5f0\uc758\uc5d0\uc11c \uc720\ube44\uc758 \uc758\ud615\uc81c\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?\",\n        \"\uc81c\uac08\ub7c9\uc774 \ubd81\ubc8c\uc744 \ud560 \ub54c \uc790\uc8fc \uc0ac\uc6a9\ud55c \uacc4\ucc45\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",\n        \"\uc721\uc190\uc774 \ud65c\uc57d\ud55c \uc804\ud22c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\"\n    ],\n    \"Output\": [\n        \"\ub098\uad00\uc911\",\n        \"\ud604\ub355\",\n        \"\ub9f9\ub355\",\n        \"\uc640\ub8e1\",\n        \"\uc190\ubd80\uc778\",\n        \"\uccad\ub8e1\uc5b8\uc6d4\ub3c4\",\n        \"\uc7a5\ud314\uc0ac\ubaa8\",\n        \"\uc190\uad8c\",\n        \"\uc870\ube44\",\n        \"\uc790\ub8e1\",\n        \"\uc774\ub989\ub300\uc804\",\n        \"\uc6d0\uc18c\",\n        \"\ub9e5\uc131\",\n        \"\uc5ec\ud3ec\",\n        \"\uad00\uc6b0, \uc7a5\ube44\",\n        \"\uacf5\uc131\uacc4\",\n        \"\uc774\ub989\ub300\uc804\"\n    ]\n}\n\n\ndf = pd.DataFrame(data)\ndf.to_csv('qa_dataset_match.csv', index=False, encoding='utf-8')\n</pre> import pandas as pd  data = {     \"Input\": [         \"\uc0bc\uad6d\uc9c0\uc5f0\uc758\uc758 \uc800\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?\",         \"\uc720\ube44\uc758 \uc790\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",         \"\uc870\uc870\uc758 \uc790\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",         \"\uc81c\uac08\ub7c9\uc758 \ubcc4\uba85\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",         \"\uc720\ube44\uc758 \ub450 \ubc88\uc9f8 \ubd80\uc778\uc758 \uc774\ub984\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",         \"\uad00\uc6b0\uc758 \ubb34\uae30\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",         \"\uc7a5\ube44\uc758 \ubb34\uae30\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",         \"\uc0bc\uad6d\uc9c0\uc5f0\uc758\uc5d0\uc11c \uc624\ub098\ub77c\ub97c \uc138\uc6b4 \uc0ac\ub78c\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?\",         \"\uc870\uc870\uc758 \uc544\ub4e4 \uc911 \ud669\uc81c\uac00 \ub41c \uc0ac\ub78c\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?\",         \"\uc870\uc6b4\uc758 \uc790\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",         \"\uc720\ube44\uac00 \uc720\uc77c\ud558\uac8c \ud328\ubc30\ud55c \uc804\ud22c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",         \"\uc870\uc870\uc758 \uc815\uc801 \uc911 \ud558\ub098\ub85c \uc720\uba85\ud55c \uc778\ubb3c\uc740 \ub204\uad6c\uc785\ub2c8\uae4c?\",         \"\uad00\uc6b0\uac00 \uc8fd\uc74c\uc744 \ub9de\uc774\ud55c \uacf3\uc740 \uc5b4\ub514\uc785\ub2c8\uae4c?\",         \"\ub3d9\ud0c1\uc758 \uc591\uc790\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?\",         \"\uc0bc\uad6d\uc9c0\uc5f0\uc758\uc5d0\uc11c \uc720\ube44\uc758 \uc758\ud615\uc81c\ub294 \ub204\uad6c\uc785\ub2c8\uae4c?\",         \"\uc81c\uac08\ub7c9\uc774 \ubd81\ubc8c\uc744 \ud560 \ub54c \uc790\uc8fc \uc0ac\uc6a9\ud55c \uacc4\ucc45\uc740 \ubb34\uc5c7\uc785\ub2c8\uae4c?\",         \"\uc721\uc190\uc774 \ud65c\uc57d\ud55c \uc804\ud22c\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c?\"     ],     \"Output\": [         \"\ub098\uad00\uc911\",         \"\ud604\ub355\",         \"\ub9f9\ub355\",         \"\uc640\ub8e1\",         \"\uc190\ubd80\uc778\",         \"\uccad\ub8e1\uc5b8\uc6d4\ub3c4\",         \"\uc7a5\ud314\uc0ac\ubaa8\",         \"\uc190\uad8c\",         \"\uc870\ube44\",         \"\uc790\ub8e1\",         \"\uc774\ub989\ub300\uc804\",         \"\uc6d0\uc18c\",         \"\ub9e5\uc131\",         \"\uc5ec\ud3ec\",         \"\uad00\uc6b0, \uc7a5\ube44\",         \"\uacf5\uc131\uacc4\",         \"\uc774\ub989\ub300\uc804\"     ] }   df = pd.DataFrame(data) df.to_csv('qa_dataset_match.csv', index=False, encoding='utf-8') In\u00a0[\u00a0]: Copied! <pre>import csv\n\nqa_dataset = [\n    {\"Input\": \"\uc720\ube44\ub294 \ub204\uad6c\uc758 \ud6c4\uc190\uc778\uac00?\", \"Output\": \"\uc720\ube44\ub294 \ud55c\ub098\ub77c \uacbd\uc81c\uc758 \ud6c4\uc190\uc785\ub2c8\ub2e4.\"},\n    {\"Input\": \"\ub3c4\uc6d0\uacb0\uc758\ub294 \ubb34\uc5c7\uc778\uac00?\", \"Output\": \"\ub3c4\uc6d0\uacb0\uc758\ub294 \uc720\ube44, \uad00\uc6b0, \uc7a5\ube44\uac00 \uc758\ud615\uc81c\ub97c \ub9fa\uc740 \uc0ac\uac74\uc785\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc0bc\uad6d\uc9c0\uc5f0\uc758\uc758 \uc8fc\uc694 \uc138\ub825 \uc138 \uac00\uc9c0\ub294?\", \"Output\": \"\ucd09\ub098\ub77c, \uc704\ub098\ub77c, \uc624\ub098\ub77c\uc785\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc81c\uac08\ub7c9\uc774 \uc720\ube44\uc5d0\uac8c \uc81c\uc2dc\ud55c \uc138 \uac00\uc9c0 \uc804\ub7b5\uc740 \ubb34\uc5c7\uc778\uac00?\", \"Output\": \"\ud615\uc8fc\ub97c \ucc28\uc9c0\ud558\uace0, \uc775\uc8fc\ub97c \ucde8\ud558\uace0, \ucc9c\ud558\ub97c \uacbd\uc601\ud558\ub77c\ub294 \uc804\ub7b5\uc785\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc870\uc870\uac00 \uc81c\uc77c \ucc98\uc74c \ucd9c\uc0ac\ud55c \uad00\uc9c1\uc740?\", \"Output\": \"\ub099\uc591 \ubd81\ubd80\ub3c4\uc704\uc785\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc801\ubcbd\ub300\uc804\uc5d0\uc11c \ub204\uac00 \ud654\uacf5\uc744 \uc0ac\uc6a9\ud588\ub294\uac00?\", \"Output\": \"\uc8fc\uc720\uc640 \ud669\uac1c\uac00 \ud654\uacf5\uc744 \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc7a5\ube44\uc758 \ubcc4\uba85\uc740 \ubb34\uc5c7\uc778\uac00?\", \"Output\": \"\uc7a5\ube44\uc758 \ubcc4\uba85\uc740 \uc775\ub355\uc785\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uad00\uc6b0\uac00 \uc0b4\ud574\ub41c \uc7a5\uc18c\ub294?\", \"Output\": \"\uad00\uc6b0\ub294 \ub9e5\uc131\uc5d0\uc11c \uc0b4\ud574\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc720\ube44\uac00 \uc8fd\uc740 \uc7a5\uc18c\ub294?\", \"Output\": \"\ubc31\uc81c\uc131\uc5d0\uc11c \uc8fd\uc5c8\uc2b5\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc0bc\uad6d\uc9c0\uc5f0\uc758\uc758 \uc800\uc790\ub294?\", \"Output\": \"\ub098\uad00\uc911\uc785\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc720\ube44\uac00 \ucd08\uae30\uc5d0 \uc138\uc6b4 \ub098\ub77c\ub294?\", \"Output\": \"\uc720\ube44\ub294 \ucd09\ud55c\uc744 \uc138\uc6e0\uc2b5\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc870\uc870\uac00 \uc138\uc6b4 \ub098\ub77c\ub294?\", \"Output\": \"\uc870\uc870\ub294 \uc704\ub098\ub77c\ub97c \uc138\uc6e0\uc2b5\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc190\uad8c\uc774 \uc138\uc6b4 \ub098\ub77c\ub294?\", \"Output\": \"\uc190\uad8c\uc740 \uc624\ub098\ub77c\ub97c \uc138\uc6e0\uc2b5\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uad00\uc6b0\uc758 \ubb34\uae30\ub294 \ubb34\uc5c7\uc778\uac00?\", \"Output\": \"\uad00\uc6b0\uc758 \ubb34\uae30\ub294 \uccad\ub8e1\uc5b8\uc6d4\ub3c4\uc785\ub2c8\ub2e4.\"},\n    {\"Input\": \"\ud669\uac74\uc801\uc758 \ub09c\uc744 \uc9c4\uc555\ud55c \uc778\ubb3c\uc740?\", \"Output\": \"\ud669\uac74\uc801\uc758 \ub09c\uc744 \uc9c4\uc555\ud55c \uc778\ubb3c\uc740 \ud669\ubcf4\uc22d\uacfc \uc8fc\uc900\uc785\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc81c\uac08\ub7c9\uc758 \uc544\ub0b4 \uc774\ub984\uc740?\", \"Output\": \"\uc81c\uac08\ub7c9\uc758 \uc544\ub0b4\ub294 \ud669\uc528\uc785\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc720\ube44\uac00 \uc81c\uac08\ub7c9\uc744 \uc138 \ubc88 \ucc3e\uc544\uac04 \uc77c\ud654\ub294 \ubb34\uc5c7\uc778\uac00?\", \"Output\": \"\uc0bc\uace0\ucd08\ub824\uc785\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc870\uc870\uc758 \uc544\ub4e4 \uc911 \ud669\uc81c\uac00 \ub41c \uc778\ubb3c\uc740?\", \"Output\": \"\uc870\ube44\uc785\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc81c\uac08\ub7c9\uc758 \ubcc4\uba85\uc740?\", \"Output\": \"\uc81c\uac08\ub7c9\uc758 \ubcc4\uba85\uc740 \uc640\ub8e1\uc785\ub2c8\ub2e4.\"},\n    {\"Input\": \"\uc0bc\uad6d\uc9c0\uc5f0\uc758\uc5d0\uc11c \ub9c8\uc9c0\ub9c9\uc73c\ub85c \uba78\ub9dd\ud55c \ub098\ub77c\ub294?\", \"Output\": \"\uc624\ub098\ub77c\uc785\ub2c8\ub2e4.\"}\n]\n\nwith open('qa_dataset_sentence.csv', 'w', newline='', encoding='utf-8') as csvfile:\n    fieldnames = ['Input', 'Output']\n    writer = csv.DictWriter(csvfile, fieldnames=fieldnames)\n\n    writer.writeheader()\n    for qa in qa_dataset:\n        writer.writerow(qa)\n</pre> import csv  qa_dataset = [     {\"Input\": \"\uc720\ube44\ub294 \ub204\uad6c\uc758 \ud6c4\uc190\uc778\uac00?\", \"Output\": \"\uc720\ube44\ub294 \ud55c\ub098\ub77c \uacbd\uc81c\uc758 \ud6c4\uc190\uc785\ub2c8\ub2e4.\"},     {\"Input\": \"\ub3c4\uc6d0\uacb0\uc758\ub294 \ubb34\uc5c7\uc778\uac00?\", \"Output\": \"\ub3c4\uc6d0\uacb0\uc758\ub294 \uc720\ube44, \uad00\uc6b0, \uc7a5\ube44\uac00 \uc758\ud615\uc81c\ub97c \ub9fa\uc740 \uc0ac\uac74\uc785\ub2c8\ub2e4.\"},     {\"Input\": \"\uc0bc\uad6d\uc9c0\uc5f0\uc758\uc758 \uc8fc\uc694 \uc138\ub825 \uc138 \uac00\uc9c0\ub294?\", \"Output\": \"\ucd09\ub098\ub77c, \uc704\ub098\ub77c, \uc624\ub098\ub77c\uc785\ub2c8\ub2e4.\"},     {\"Input\": \"\uc81c\uac08\ub7c9\uc774 \uc720\ube44\uc5d0\uac8c \uc81c\uc2dc\ud55c \uc138 \uac00\uc9c0 \uc804\ub7b5\uc740 \ubb34\uc5c7\uc778\uac00?\", \"Output\": \"\ud615\uc8fc\ub97c \ucc28\uc9c0\ud558\uace0, \uc775\uc8fc\ub97c \ucde8\ud558\uace0, \ucc9c\ud558\ub97c \uacbd\uc601\ud558\ub77c\ub294 \uc804\ub7b5\uc785\ub2c8\ub2e4.\"},     {\"Input\": \"\uc870\uc870\uac00 \uc81c\uc77c \ucc98\uc74c \ucd9c\uc0ac\ud55c \uad00\uc9c1\uc740?\", \"Output\": \"\ub099\uc591 \ubd81\ubd80\ub3c4\uc704\uc785\ub2c8\ub2e4.\"},     {\"Input\": \"\uc801\ubcbd\ub300\uc804\uc5d0\uc11c \ub204\uac00 \ud654\uacf5\uc744 \uc0ac\uc6a9\ud588\ub294\uac00?\", \"Output\": \"\uc8fc\uc720\uc640 \ud669\uac1c\uac00 \ud654\uacf5\uc744 \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4.\"},     {\"Input\": \"\uc7a5\ube44\uc758 \ubcc4\uba85\uc740 \ubb34\uc5c7\uc778\uac00?\", \"Output\": \"\uc7a5\ube44\uc758 \ubcc4\uba85\uc740 \uc775\ub355\uc785\ub2c8\ub2e4.\"},     {\"Input\": \"\uad00\uc6b0\uac00 \uc0b4\ud574\ub41c \uc7a5\uc18c\ub294?\", \"Output\": \"\uad00\uc6b0\ub294 \ub9e5\uc131\uc5d0\uc11c \uc0b4\ud574\ub418\uc5c8\uc2b5\ub2c8\ub2e4.\"},     {\"Input\": \"\uc720\ube44\uac00 \uc8fd\uc740 \uc7a5\uc18c\ub294?\", \"Output\": \"\ubc31\uc81c\uc131\uc5d0\uc11c \uc8fd\uc5c8\uc2b5\ub2c8\ub2e4.\"},     {\"Input\": \"\uc0bc\uad6d\uc9c0\uc5f0\uc758\uc758 \uc800\uc790\ub294?\", \"Output\": \"\ub098\uad00\uc911\uc785\ub2c8\ub2e4.\"},     {\"Input\": \"\uc720\ube44\uac00 \ucd08\uae30\uc5d0 \uc138\uc6b4 \ub098\ub77c\ub294?\", \"Output\": \"\uc720\ube44\ub294 \ucd09\ud55c\uc744 \uc138\uc6e0\uc2b5\ub2c8\ub2e4.\"},     {\"Input\": \"\uc870\uc870\uac00 \uc138\uc6b4 \ub098\ub77c\ub294?\", \"Output\": \"\uc870\uc870\ub294 \uc704\ub098\ub77c\ub97c \uc138\uc6e0\uc2b5\ub2c8\ub2e4.\"},     {\"Input\": \"\uc190\uad8c\uc774 \uc138\uc6b4 \ub098\ub77c\ub294?\", \"Output\": \"\uc190\uad8c\uc740 \uc624\ub098\ub77c\ub97c \uc138\uc6e0\uc2b5\ub2c8\ub2e4.\"},     {\"Input\": \"\uad00\uc6b0\uc758 \ubb34\uae30\ub294 \ubb34\uc5c7\uc778\uac00?\", \"Output\": \"\uad00\uc6b0\uc758 \ubb34\uae30\ub294 \uccad\ub8e1\uc5b8\uc6d4\ub3c4\uc785\ub2c8\ub2e4.\"},     {\"Input\": \"\ud669\uac74\uc801\uc758 \ub09c\uc744 \uc9c4\uc555\ud55c \uc778\ubb3c\uc740?\", \"Output\": \"\ud669\uac74\uc801\uc758 \ub09c\uc744 \uc9c4\uc555\ud55c \uc778\ubb3c\uc740 \ud669\ubcf4\uc22d\uacfc \uc8fc\uc900\uc785\ub2c8\ub2e4.\"},     {\"Input\": \"\uc81c\uac08\ub7c9\uc758 \uc544\ub0b4 \uc774\ub984\uc740?\", \"Output\": \"\uc81c\uac08\ub7c9\uc758 \uc544\ub0b4\ub294 \ud669\uc528\uc785\ub2c8\ub2e4.\"},     {\"Input\": \"\uc720\ube44\uac00 \uc81c\uac08\ub7c9\uc744 \uc138 \ubc88 \ucc3e\uc544\uac04 \uc77c\ud654\ub294 \ubb34\uc5c7\uc778\uac00?\", \"Output\": \"\uc0bc\uace0\ucd08\ub824\uc785\ub2c8\ub2e4.\"},     {\"Input\": \"\uc870\uc870\uc758 \uc544\ub4e4 \uc911 \ud669\uc81c\uac00 \ub41c \uc778\ubb3c\uc740?\", \"Output\": \"\uc870\ube44\uc785\ub2c8\ub2e4.\"},     {\"Input\": \"\uc81c\uac08\ub7c9\uc758 \ubcc4\uba85\uc740?\", \"Output\": \"\uc81c\uac08\ub7c9\uc758 \ubcc4\uba85\uc740 \uc640\ub8e1\uc785\ub2c8\ub2e4.\"},     {\"Input\": \"\uc0bc\uad6d\uc9c0\uc5f0\uc758\uc5d0\uc11c \ub9c8\uc9c0\ub9c9\uc73c\ub85c \uba78\ub9dd\ud55c \ub098\ub77c\ub294?\", \"Output\": \"\uc624\ub098\ub77c\uc785\ub2c8\ub2e4.\"} ]  with open('qa_dataset_sentence.csv', 'w', newline='', encoding='utf-8') as csvfile:     fieldnames = ['Input', 'Output']     writer = csv.DictWriter(csvfile, fieldnames=fieldnames)      writer.writeheader()     for qa in qa_dataset:         writer.writerow(qa) In\u00a0[\u00a0]: Copied! <pre>!pip install -U langsmith\n</pre> !pip install -U langsmith In\u00a0[\u00a0]: Copied! <pre>import os\n\nos.environ[\"LANGCHAIN_TRACING_V2\"]=\"true\"\nos.environ[\"LANGCHAIN_API_KEY\"]=\"\"\n</pre> import os  os.environ[\"LANGCHAIN_TRACING_V2\"]=\"true\" os.environ[\"LANGCHAIN_API_KEY\"]=\"\" In\u00a0[\u00a0]: Copied! <pre>from langsmith import Client\nimport os\n\nclient = Client()\n</pre> from langsmith import Client import os  client = Client() In\u00a0[\u00a0]: Copied! <pre>csv_file = './qa_dataset_match.csv'\ninput_keys = [\"Input\"] # replace with your input column names\noutput_keys = [\"Output\"] # replace with your output column names\n\ndataset = client.upload_csv(\n    csv_file=csv_file,\n    input_keys=input_keys,\n    output_keys=output_keys,\n    name=\"threekingdoms-qa-words\",\n    description=\"\",\n    data_type=\"kv\"\n)\n</pre> csv_file = './qa_dataset_match.csv' input_keys = [\"Input\"] # replace with your input column names output_keys = [\"Output\"] # replace with your output column names  dataset = client.upload_csv(     csv_file=csv_file,     input_keys=input_keys,     output_keys=output_keys,     name=\"threekingdoms-qa-words\",     description=\"\",     data_type=\"kv\" ) In\u00a0[\u00a0]: Copied! <pre>!pip install openai\n</pre> !pip install openai In\u00a0[\u00a0]: Copied! <pre>os.environ[\"OPENAI_API_KEY\"]=\"\"\n</pre> os.environ[\"OPENAI_API_KEY\"]=\"\" In\u00a0[\u00a0]: Copied! <pre>from langsmith import traceable, wrappers\nfrom openai import Client\n\nopenai = wrappers.wrap_openai(Client())\n\n@traceable\ndef label_text(text, model=\"gpt-4o-mini\"):\n    messages = [\n        {\n            \"role\": \"system\",\n            \"content\": \"Please read the user query below and answer the question in 1 word.\",\n        },\n        {\"role\": \"user\", \"content\": text},\n    ]\n    result = openai.chat.completions.create(\n        messages=messages, model=model, temperature=0\n    )\n    return result.choices[0].message.content\n</pre> from langsmith import traceable, wrappers from openai import Client  openai = wrappers.wrap_openai(Client())  @traceable def label_text(text, model=\"gpt-4o-mini\"):     messages = [         {             \"role\": \"system\",             \"content\": \"Please read the user query below and answer the question in 1 word.\",         },         {\"role\": \"user\", \"content\": text},     ]     result = openai.chat.completions.create(         messages=messages, model=model, temperature=0     )     return result.choices[0].message.content In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>from langsmith.schemas import Example, Run\n\ndef correct_label(root_run: Run, example: Example) -&gt; dict:\n    score = root_run.outputs.get(\"output\") == example.outputs.get(\"Output\")\n    return {\"score\": int(score), \"key\": \"correct_label\"}\n</pre> from langsmith.schemas import Example, Run  def correct_label(root_run: Run, example: Example) -&gt; dict:     score = root_run.outputs.get(\"output\") == example.outputs.get(\"Output\")     return {\"score\": int(score), \"key\": \"correct_label\"} In\u00a0[\u00a0]: Copied! <pre>from langsmith.evaluation import evaluate\n\ndataset_name = \"threekingdoms-qa-words\"\n\nresults = evaluate(\n    lambda inputs: label_text(inputs[\"Input\"], \"gpt-4o-mini\"),\n    data=dataset_name,\n    #data=client.list_examples(dataset_name=dataset_name, as_of=\"test_v1.0\"),\n    evaluators=[correct_label],\n    experiment_prefix=\"threekingdoms-qa-words\",\n    description=\"Testing the system.\",  # optional\n)\n</pre> from langsmith.evaluation import evaluate  dataset_name = \"threekingdoms-qa-words\"  results = evaluate(     lambda inputs: label_text(inputs[\"Input\"], \"gpt-4o-mini\"),     data=dataset_name,     #data=client.list_examples(dataset_name=dataset_name, as_of=\"test_v1.0\"),     evaluators=[correct_label],     experiment_prefix=\"threekingdoms-qa-words\",     description=\"Testing the system.\",  # optional ) In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>!pip install langchain langchain-openai langchain-community\n</pre> !pip install langchain langchain-openai langchain-community In\u00a0[\u00a0]: Copied! <pre>from langsmith.evaluation import LangChainStringEvaluator, evaluate\nfrom langchain_openai import ChatOpenAI\n\n# default \ub294 gpt-4\uc9c0\ub9cc, \ube44\uc6a9 \ubb38\uc81c\ub85c \uad50\uccb4.\neval_llm = ChatOpenAI(temperature=0.0, model=\"gpt-4o-mini\")\n\nqa_evaluator = LangChainStringEvaluator(\"qa\", config={\"llm\": eval_llm})\ncontext_qa_evaluator = LangChainStringEvaluator(\"context_qa\", config={\"llm\": eval_llm})\ncot_qa_evaluator = LangChainStringEvaluator(\"cot_qa\", config={\"llm\": eval_llm})\n\nresults = evaluate(\n    lambda inputs: label_text(inputs[\"Input\"], \"gpt-4o-mini\"),\n    data=dataset_name,\n    #data=client.list_examples(dataset_name=dataset_name, as_of=\"test_v1.0\"),\n    evaluators=[correct_label, qa_evaluator, context_qa_evaluator, cot_qa_evaluator],\n    experiment_prefix=\"threekingdoms-qa-words\",\n    description=\"Testing the system.\",  # optional\n)\n</pre> from langsmith.evaluation import LangChainStringEvaluator, evaluate from langchain_openai import ChatOpenAI  # default \ub294 gpt-4\uc9c0\ub9cc, \ube44\uc6a9 \ubb38\uc81c\ub85c \uad50\uccb4. eval_llm = ChatOpenAI(temperature=0.0, model=\"gpt-4o-mini\")  qa_evaluator = LangChainStringEvaluator(\"qa\", config={\"llm\": eval_llm}) context_qa_evaluator = LangChainStringEvaluator(\"context_qa\", config={\"llm\": eval_llm}) cot_qa_evaluator = LangChainStringEvaluator(\"cot_qa\", config={\"llm\": eval_llm})  results = evaluate(     lambda inputs: label_text(inputs[\"Input\"], \"gpt-4o-mini\"),     data=dataset_name,     #data=client.list_examples(dataset_name=dataset_name, as_of=\"test_v1.0\"),     evaluators=[correct_label, qa_evaluator, context_qa_evaluator, cot_qa_evaluator],     experiment_prefix=\"threekingdoms-qa-words\",     description=\"Testing the system.\",  # optional ) In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>csv_file = './qa_dataset_sentence.csv'\ninput_keys = [\"Input\"] # replace with your input column names\noutput_keys = [\"Output\"] # replace with your output column names\n\ndataset = client.upload_csv(\n    csv_file=csv_file,\n    input_keys=input_keys,\n    output_keys=output_keys,\n    name=\"threekingdoms-qa-sentences\",\n    description=\"\",\n    data_type=\"kv\"\n)\n\neval_llm = ChatOpenAI(temperature=0.0, model=\"gpt-4o-mini\")\n\nqa_evaluator = LangChainStringEvaluator(\"qa\", config={\"llm\": eval_llm})\ncontext_qa_evaluator = LangChainStringEvaluator(\"context_qa\", config={\"llm\": eval_llm})\ncot_qa_evaluator = LangChainStringEvaluator(\"cot_qa\", config={\"llm\": eval_llm})\n\nresults = evaluate(\n    lambda inputs: label_text(inputs[\"Input\"], \"gpt-4o-mini\"),\n    data=\"threekingdoms-qa-sentences\",\n    #data=client.list_examples(dataset_name=dataset_name, as_of=\"test_v1.0\"),\n    evaluators=[ qa_evaluator, context_qa_evaluator, cot_qa_evaluator],\n    experiment_prefix=\"threekingdoms-qa-sentences\",\n    metadata={\n      \"version\": \"1.0.0\",\n      \"revision_id\": \"beta\",\n      \"model\": \"gpt-4o-mini\"\n    },\n    description=\"Testing the system.\",  # optional\n)\n</pre> csv_file = './qa_dataset_sentence.csv' input_keys = [\"Input\"] # replace with your input column names output_keys = [\"Output\"] # replace with your output column names  dataset = client.upload_csv(     csv_file=csv_file,     input_keys=input_keys,     output_keys=output_keys,     name=\"threekingdoms-qa-sentences\",     description=\"\",     data_type=\"kv\" )  eval_llm = ChatOpenAI(temperature=0.0, model=\"gpt-4o-mini\")  qa_evaluator = LangChainStringEvaluator(\"qa\", config={\"llm\": eval_llm}) context_qa_evaluator = LangChainStringEvaluator(\"context_qa\", config={\"llm\": eval_llm}) cot_qa_evaluator = LangChainStringEvaluator(\"cot_qa\", config={\"llm\": eval_llm})  results = evaluate(     lambda inputs: label_text(inputs[\"Input\"], \"gpt-4o-mini\"),     data=\"threekingdoms-qa-sentences\",     #data=client.list_examples(dataset_name=dataset_name, as_of=\"test_v1.0\"),     evaluators=[ qa_evaluator, context_qa_evaluator, cot_qa_evaluator],     experiment_prefix=\"threekingdoms-qa-sentences\",     metadata={       \"version\": \"1.0.0\",       \"revision_id\": \"beta\",       \"model\": \"gpt-4o-mini\"     },     description=\"Testing the system.\",  # optional ) In\u00a0[\u00a0]: Copied! <pre>eval_llm = ChatOpenAI(temperature=0.0, model=\"gpt-4o-mini\")\n\nqa_evaluator = LangChainStringEvaluator(\"qa\", config={\"llm\": eval_llm})\ncontext_qa_evaluator = LangChainStringEvaluator(\"context_qa\", config={\"llm\": eval_llm})\ncot_qa_evaluator = LangChainStringEvaluator(\"cot_qa\", config={\"llm\": eval_llm})\n\nresults = evaluate(\n    lambda inputs: label_text(inputs[\"Input\"], \"gpt-4o-mini\"),\n    data=\"threekingdoms-qa-sentences\",\n    #data=client.list_examples(dataset_name=dataset_name, as_of=\"test_v1.0\"),\n    evaluators=[ qa_evaluator, context_qa_evaluator, cot_qa_evaluator],\n    experiment_prefix=\"threekingdoms-qa-sentences\",\n    metadata={\n      \"version\": \"1.0.0\",\n      \"revision_id\": \"beta\",\n      \"model\": \"gpt-4o-mini\"\n    },\n    description=\"Testing the system.\",  # optional\n)\n</pre> eval_llm = ChatOpenAI(temperature=0.0, model=\"gpt-4o-mini\")  qa_evaluator = LangChainStringEvaluator(\"qa\", config={\"llm\": eval_llm}) context_qa_evaluator = LangChainStringEvaluator(\"context_qa\", config={\"llm\": eval_llm}) cot_qa_evaluator = LangChainStringEvaluator(\"cot_qa\", config={\"llm\": eval_llm})  results = evaluate(     lambda inputs: label_text(inputs[\"Input\"], \"gpt-4o-mini\"),     data=\"threekingdoms-qa-sentences\",     #data=client.list_examples(dataset_name=dataset_name, as_of=\"test_v1.0\"),     evaluators=[ qa_evaluator, context_qa_evaluator, cot_qa_evaluator],     experiment_prefix=\"threekingdoms-qa-sentences\",     metadata={       \"version\": \"1.0.0\",       \"revision_id\": \"beta\",       \"model\": \"gpt-4o-mini\"     },     description=\"Testing the system.\",  # optional ) In\u00a0[\u00a0]: Copied! <pre>!pip install --quiet langchain_experimental langchain_openai chromadb\n</pre> !pip install --quiet langchain_experimental langchain_openai chromadb In\u00a0[\u00a0]: Copied! <pre>#unzip ./3kingdoms.zip\n!unzip ./jinho_3kingdoms.zip -d ./3kingdoms\n</pre> #unzip ./3kingdoms.zip !unzip ./jinho_3kingdoms.zip -d ./3kingdoms In\u00a0[\u00a0]: Copied! <pre>import glob\n\n# Use glob to find files matching the pattern\nfiles = glob.glob('./3kingdoms/[0-9]*.txt')\n\n# Print the collected files\nfor file in files:\n    print(file)\n</pre> import glob  # Use glob to find files matching the pattern files = glob.glob('./3kingdoms/[0-9]*.txt')  # Print the collected files for file in files:     print(file) In\u00a0[\u00a0]: Copied! <pre>import openai\nimport os\n\nfrom langsmith import traceable\nfrom langsmith.wrappers import wrap_openai\nfrom langchain.text_splitter import CharacterTextSplitter\nfrom langchain.embeddings.openai import OpenAIEmbeddings\nfrom langchain.vectorstores import Chroma\n\n\ntexts = []\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\nfor file in files:\n    with open(file, 'r', encoding='utf-8') as f:\n      # split the documents into chunks\n      texts.append(text_splitter.create_documents([f.read()], metadatas=[{\"source\": str(file)}]))\n</pre> import openai import os  from langsmith import traceable from langsmith.wrappers import wrap_openai from langchain.text_splitter import CharacterTextSplitter from langchain.embeddings.openai import OpenAIEmbeddings from langchain.vectorstores import Chroma   texts = [] text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0) for file in files:     with open(file, 'r', encoding='utf-8') as f:       # split the documents into chunks       texts.append(text_splitter.create_documents([f.read()], metadatas=[{\"source\": str(file)}])) In\u00a0[\u00a0]: Copied! <pre>texts[0][0]\n</pre> texts[0][0] In\u00a0[\u00a0]: Copied! <pre>!pip install transformers\n!pip install sentence-transformers\n</pre> !pip install transformers !pip install sentence-transformers In\u00a0[\u00a0]: Copied! <pre>from langchain.embeddings import HuggingFaceEmbeddings\n\n\nmodelPath = \"BAAI/bge-small-en-v1.5\"\n\n# Create a dictionary with model configuration options, specifying to use the CPU for computations\nmodel_kwargs = {'device':'cpu'}\n\n# Create a dictionary with encoding options, specifically setting 'normalize_embeddings' to False\nencode_kwargs = {'normalize_embeddings': True}\n\n# Initialize an instance of HuggingFaceEmbeddings with the specified parameters\nembeddings = HuggingFaceEmbeddings(\n    model_name=modelPath,     # Provide the pre-trained model's path\n    model_kwargs=model_kwargs, # Pass the model configuration options\n    encode_kwargs=encode_kwargs # Pass the encoding options\n)\n</pre> from langchain.embeddings import HuggingFaceEmbeddings   modelPath = \"BAAI/bge-small-en-v1.5\"  # Create a dictionary with model configuration options, specifying to use the CPU for computations model_kwargs = {'device':'cpu'}  # Create a dictionary with encoding options, specifically setting 'normalize_embeddings' to False encode_kwargs = {'normalize_embeddings': True}  # Initialize an instance of HuggingFaceEmbeddings with the specified parameters embeddings = HuggingFaceEmbeddings(     model_name=modelPath,     # Provide the pre-trained model's path     model_kwargs=model_kwargs, # Pass the model configuration options     encode_kwargs=encode_kwargs # Pass the encoding options ) In\u00a0[\u00a0]: Copied! <pre>doc_list = [item for sublist in texts for item in sublist]\n\n# Use Chroma with local embeddings\ndb = Chroma.from_documents(doc_list, embedding=embeddings)\n\n#embeddings = OpenAIEmbeddings()\n#db = Chroma.from_documents(doc_list, embeddings)\n</pre> doc_list = [item for sublist in texts for item in sublist]  # Use Chroma with local embeddings db = Chroma.from_documents(doc_list, embedding=embeddings)  #embeddings = OpenAIEmbeddings() #db = Chroma.from_documents(doc_list, embeddings) In\u00a0[\u00a0]: Copied! <pre>query = \"\uc720\ube44\uac00 \uc0bc\uace0\ucd08\ub824\ub97c \ud560 \ub54c \ubaa8\uc2dc\uace0\uc790 \ud55c \uc778\ubb3c\uc740 \ub204\uad6c\uc778\uac00?\"\ndocs = db.similarity_search(query)\nprint(docs[0].page_content)\n</pre> query = \"\uc720\ube44\uac00 \uc0bc\uace0\ucd08\ub824\ub97c \ud560 \ub54c \ubaa8\uc2dc\uace0\uc790 \ud55c \uc778\ubb3c\uc740 \ub204\uad6c\uc778\uac00?\" docs = db.similarity_search(query) print(docs[0].page_content) In\u00a0[\u00a0]: Copied! <pre>!pip install --upgrade --quiet  langchain langchain-community langchainhub langchain-openai langchain-chroma\n</pre> !pip install --upgrade --quiet  langchain langchain-community langchainhub langchain-openai langchain-chroma In\u00a0[\u00a0]: Copied! <pre>from langchain import hub\nfrom langchain_core.output_parsers import StrOutputParser\nfrom langchain_core.runnables import RunnablePassthrough\n\nllm = ChatOpenAI(model=\"gpt-4o-mini\")\n#llm = ChatOpenAI(model=\"gpt-4o\")\n\nretriever = db.as_retriever()\nprompt = hub.pull(\"rlm/rag-prompt\")\n#prompt = hub.pull(\"rag-prompt-fork\")\n\ndef format_docs(docs):\n    return \"\\n\\n\".join(doc.page_content for doc in docs)\n\nrag_chain = (\n    {\"context\": retriever | format_docs, \"question\": RunnablePassthrough()}\n    | prompt\n    | llm\n    | StrOutputParser()\n)\n</pre> from langchain import hub from langchain_core.output_parsers import StrOutputParser from langchain_core.runnables import RunnablePassthrough  llm = ChatOpenAI(model=\"gpt-4o-mini\") #llm = ChatOpenAI(model=\"gpt-4o\")  retriever = db.as_retriever() prompt = hub.pull(\"rlm/rag-prompt\") #prompt = hub.pull(\"rag-prompt-fork\")  def format_docs(docs):     return \"\\n\\n\".join(doc.page_content for doc in docs)  rag_chain = (     {\"context\": retriever | format_docs, \"question\": RunnablePassthrough()}     | prompt     | llm     | StrOutputParser() ) In\u00a0[\u00a0]: Copied! <pre>rag_chain.invoke(\"\uc720\ube44\uac00 \uc0bc\uace0\ucd08\ub824\ub97c \ud560 \ub54c \ubaa8\uc2dc\uace0\uc790 \ud55c \uc778\ubb3c\uc740 \ub204\uad6c\uc778\uac00?\")\n</pre> rag_chain.invoke(\"\uc720\ube44\uac00 \uc0bc\uace0\ucd08\ub824\ub97c \ud560 \ub54c \ubaa8\uc2dc\uace0\uc790 \ud55c \uc778\ubb3c\uc740 \ub204\uad6c\uc778\uac00?\") In\u00a0[\u00a0]: Copied! <pre>results = evaluate(\n    lambda inputs: rag_chain.invoke(inputs[\"Input\"]),\n    data=dataset_name,\n    #data=client.list_examples(dataset_name=dataset_name, as_of=\"test_v1.0\"),\n    evaluators=[correct_label, qa_evaluator, context_qa_evaluator, cot_qa_evaluator],\n    experiment_prefix=\"threekingdoms-qa-words\",\n    description=\"Testing the system.\",  # optional\n)\n</pre> results = evaluate(     lambda inputs: rag_chain.invoke(inputs[\"Input\"]),     data=dataset_name,     #data=client.list_examples(dataset_name=dataset_name, as_of=\"test_v1.0\"),     evaluators=[correct_label, qa_evaluator, context_qa_evaluator, cot_qa_evaluator],     experiment_prefix=\"threekingdoms-qa-words\",     description=\"Testing the system.\",  # optional ) In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>!pip install colab-xterm #https://pypi.org/project/colab-xterm/\n%load_ext colabxterm\n</pre> !pip install colab-xterm #https://pypi.org/project/colab-xterm/ %load_ext colabxterm In\u00a0[\u00a0]: Copied! <pre>%xterm\n#curl -fsSL https://ollama.com/install.sh | sh\n#ollama serve\n#ollama pull llama3.2:1b\n#ollama pull llama3.2:3b\n</pre> %xterm #curl -fsSL https://ollama.com/install.sh | sh #ollama serve #ollama pull llama3.2:1b #ollama pull llama3.2:3b In\u00a0[\u00a0]: Copied! <pre># Import Ollama module from Langchain\nfrom langchain_community.llms import Ollama\n\n# Initialize an instance of the Ollama model\nllm = Ollama(model=\"llama3.2:1b\")\n\n# Invoke the model to generate responses\nresponse = llm.invoke(\"Tell me a joke\")\nprint(response)\n</pre> # Import Ollama module from Langchain from langchain_community.llms import Ollama  # Initialize an instance of the Ollama model llm = Ollama(model=\"llama3.2:1b\")  # Invoke the model to generate responses response = llm.invoke(\"Tell me a joke\") print(response) In\u00a0[\u00a0]: Copied! <pre>rag_chain = (\n    {\"context\": retriever | format_docs, \"question\": RunnablePassthrough()}\n    | prompt\n    | llm\n    | StrOutputParser()\n)\n</pre> rag_chain = (     {\"context\": retriever | format_docs, \"question\": RunnablePassthrough()}     | prompt     | llm     | StrOutputParser() ) In\u00a0[\u00a0]: Copied! <pre>rag_chain.invoke(\"\uc720\ube44\uac00 \uc0bc\uace0\ucd08\ub824\ub97c \ud560 \ub54c \ubaa8\uc2dc\uace0\uc790 \ud55c \uc778\ubb3c\uc740 \ub204\uad6c\uc778\uac00?\")\n</pre> rag_chain.invoke(\"\uc720\ube44\uac00 \uc0bc\uace0\ucd08\ub824\ub97c \ud560 \ub54c \ubaa8\uc2dc\uace0\uc790 \ud55c \uc778\ubb3c\uc740 \ub204\uad6c\uc778\uac00?\") In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>!pip install -q streamlit streamlit-feedback\n</pre> !pip install -q streamlit streamlit-feedback In\u00a0[\u00a0]: Copied! <pre>%%writefile app.py\n\nimport streamlit as st\n\nst.write('Hello, *World!* :sunglasses:')\n</pre> %%writefile app.py  import streamlit as st  st.write('Hello, *World!* :sunglasses:') In\u00a0[\u00a0]: Copied! <pre>!npm install localtunnel\n</pre> !npm install localtunnel In\u00a0[\u00a0]: Copied! <pre>!streamlit run app.py &amp;&gt;/content/logs.txt &amp; npx localtunnel --port 8501 &amp; curl ipv4.icanhazip.com\n</pre> !streamlit run app.py &amp;&gt;/content/logs.txt &amp; npx localtunnel --port 8501 &amp; curl ipv4.icanhazip.com In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>%%writefile app.py\n\nimport streamlit as st\nfrom langchain import memory as lc_memory\nfrom langsmith import Client\nfrom streamlit_feedback import streamlit_feedback\nfrom langchain_core.tracers.context import collect_runs\n\nfrom langchain_core.output_parsers import StrOutputParser\nfrom langchain_openai import ChatOpenAI\n\nimport os\n\nllm = ChatOpenAI(model=\"gpt-4o-mini\")\n\nchain = (\n    llm\n    | StrOutputParser()\n)\n\n# Langsmith project change\nos.environ[\"LANGCHAIN_PROJECT\"] = \"Three Kingdoms Chatbot Tracing &amp; Feedback\"\n\nclient = Client()\n\nst.set_page_config(\n    page_title=\"Capturing User Feedback\",\n    page_icon=\"\ud83e\udd9c\ufe0f\ufe0f\ud83d\udee0\ufe0f\",\n)\n\nst.subheader(\"\ud83e\udd9c\ud83d\udee0\ufe0f Chatbot with Feedback in LangSmith\")\n\nst.sidebar.info(\n    \"\"\"\n\nAn example of a Streamlit Chat UI capturing user feedback.\n\n- [LangSmith Documentation](https://docs.smith.langchain.com/)\n- Streamlit's [chat elements Documentation](https://docs.streamlit.io/library/api-reference/chat)\n- Trubrics' [Streamlit-Feedback](https://github.com/trubrics/streamlit-feedback) component\n\n\"\"\"\n)\n\nst.sidebar.markdown(\"## Feedback Scale\")\nfeedback_option = (\n    \"thumbs\" if st.sidebar.toggle(label=\"`Faces` \u21c4 `Thumbs`\", value=False) else \"faces\"\n)\n\nwith st.form(\"form\"):\n    text = st.text_area(\"Enter text:\", \"Ask me a question!\")\n    submitted = st.form_submit_button(\"Submit\")\n    if submitted:\n        # get run_id from chain or lanchain run\n        with collect_runs() as cb:\n            st.info(chain.invoke(text))\n            st.session_state.run_id = cb.traced_runs[0].id\n\nif st.session_state.get(\"run_id\"):\n    run_id = st.session_state.run_id\n    feedback = streamlit_feedback(\n        feedback_type=feedback_option,\n        optional_text_label=\"[Optional] Please provide an explanation\",\n        key=f\"feedback_{run_id}\",\n    )\n\n    # Define score mappings for both \"thumbs\" and \"faces\" feedback systems\n    score_mappings = {\n        \"thumbs\": {\"\ud83d\udc4d\": 1, \"\ud83d\udc4e\": 0},\n        \"faces\": {\"\ud83d\ude00\": 1, \"\ud83d\ude42\": 0.75, \"\ud83d\ude10\": 0.5, \"\ud83d\ude41\": 0.25, \"\ud83d\ude1e\": 0},\n    }\n\n    # Get the score mapping based on the selected feedback option\n    scores = score_mappings[feedback_option]\n\n    if feedback:\n        # Get the score from the selected feedback option's score mapping\n        score = scores.get(feedback[\"score\"])\n\n        if score is not None:\n            # Formulate feedback type string incorporating the feedback option\n            # and score value\n            feedback_type_str = f\"{feedback_option} {feedback['score']}\"\n\n            # Record the feedback with the formulated feedback type string\n            # and optional comment\n            feedback_record = client.create_feedback(\n                run_id,\n                feedback_type_str,\n                score=score,\n                comment=feedback.get(\"text\"),\n            )\n            st.session_state.feedback = {\n                \"feedback_id\": str(feedback_record.id),\n                \"score\": score,\n            }\n        else:\n            st.warning(\"Invalid feedback score.\")\n</pre> %%writefile app.py  import streamlit as st from langchain import memory as lc_memory from langsmith import Client from streamlit_feedback import streamlit_feedback from langchain_core.tracers.context import collect_runs  from langchain_core.output_parsers import StrOutputParser from langchain_openai import ChatOpenAI  import os  llm = ChatOpenAI(model=\"gpt-4o-mini\")  chain = (     llm     | StrOutputParser() )  # Langsmith project change os.environ[\"LANGCHAIN_PROJECT\"] = \"Three Kingdoms Chatbot Tracing &amp; Feedback\"  client = Client()  st.set_page_config(     page_title=\"Capturing User Feedback\",     page_icon=\"\ud83e\udd9c\ufe0f\ufe0f\ud83d\udee0\ufe0f\", )  st.subheader(\"\ud83e\udd9c\ud83d\udee0\ufe0f Chatbot with Feedback in LangSmith\")  st.sidebar.info(     \"\"\"  An example of a Streamlit Chat UI capturing user feedback.  - [LangSmith Documentation](https://docs.smith.langchain.com/) - Streamlit's [chat elements Documentation](https://docs.streamlit.io/library/api-reference/chat) - Trubrics' [Streamlit-Feedback](https://github.com/trubrics/streamlit-feedback) component  \"\"\" )  st.sidebar.markdown(\"## Feedback Scale\") feedback_option = (     \"thumbs\" if st.sidebar.toggle(label=\"`Faces` \u21c4 `Thumbs`\", value=False) else \"faces\" )  with st.form(\"form\"):     text = st.text_area(\"Enter text:\", \"Ask me a question!\")     submitted = st.form_submit_button(\"Submit\")     if submitted:         # get run_id from chain or lanchain run         with collect_runs() as cb:             st.info(chain.invoke(text))             st.session_state.run_id = cb.traced_runs[0].id  if st.session_state.get(\"run_id\"):     run_id = st.session_state.run_id     feedback = streamlit_feedback(         feedback_type=feedback_option,         optional_text_label=\"[Optional] Please provide an explanation\",         key=f\"feedback_{run_id}\",     )      # Define score mappings for both \"thumbs\" and \"faces\" feedback systems     score_mappings = {         \"thumbs\": {\"\ud83d\udc4d\": 1, \"\ud83d\udc4e\": 0},         \"faces\": {\"\ud83d\ude00\": 1, \"\ud83d\ude42\": 0.75, \"\ud83d\ude10\": 0.5, \"\ud83d\ude41\": 0.25, \"\ud83d\ude1e\": 0},     }      # Get the score mapping based on the selected feedback option     scores = score_mappings[feedback_option]      if feedback:         # Get the score from the selected feedback option's score mapping         score = scores.get(feedback[\"score\"])          if score is not None:             # Formulate feedback type string incorporating the feedback option             # and score value             feedback_type_str = f\"{feedback_option} {feedback['score']}\"              # Record the feedback with the formulated feedback type string             # and optional comment             feedback_record = client.create_feedback(                 run_id,                 feedback_type_str,                 score=score,                 comment=feedback.get(\"text\"),             )             st.session_state.feedback = {                 \"feedback_id\": str(feedback_record.id),                 \"score\": score,             }         else:             st.warning(\"Invalid feedback score.\") In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre> In\u00a0[\u00a0]: Copied! <pre>\n</pre>"},{"location":"practice/2_LangSmith_Evaluation/#evalution","title":"Evalution\u00b6","text":"<ul> <li>Generate or Curate the QA Set</li> <li>Automation Evalution</li> </ul>"},{"location":"practice/2_LangSmith_Evaluation/#generate-dataset-from-chatgpt","title":"Generate DataSet from ChatGPT\u00b6","text":"<ul> <li>\ud604\uc874 \uac00\uc7a5 \ub611\ub611\ud558\ub2e4\uace0 \uc54c\ub824\uc9c4 \ubaa8\ub378\uc744 \uc774\uc6a9\ud574\uc11c \ub370\uc774\ud130\uc14b\uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.</li> <li>ChatGPT, \ub370\uc774\ud130 \uc14b \uc0dd\uc131 \ub300\ud654</li> <li>My GPT, \ud504\ub86c\ud504\ud305 &amp; Knowledge \uae30\ub2a5\uc744 \uc774\uc6a9\ud55c \ub370\uc774\ud130 \uc14b \uc0dd\uc131 \ub300\ud654<ul> <li>\ucc38\uace0 - \uc0bc\uad6d\uc9c0\ud53c\ud2f0</li> </ul> </li> </ul>"},{"location":"practice/2_LangSmith_Evaluation/#dataset-langsmith","title":"Dataset \uc744 Langsmith\uc5d0 \uc62c\ub9ac\uae30\u00b6","text":"<ul> <li>web interface \uc5d0\uc11c \uc9c1\uc811 \ud574\ub3c4 \ub429\ub2c8\ub2e4.</li> <li>\ucf54\ub4dc\ub85c\ub3c4 \uc62c\ub824\ubd05\uc2dc\ub2e4.</li> <li>\uc218\uc815\uc744 \ud558\uba74 version \uc774 \uc0dd\uae30\uace0, tag \ub97c \ub2ec \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4.<ul> <li>\"\uc720\ube44\uc758 \uc758\ud615\uc81c\" \ubb38\uc81c\ub97c \uc815\ub2f5\uc774 \ud558\ub098\uc758 \ub2e8\uc5b4\uac00 \ub418\ub3c4\ub85d \uc218\uc815\ud558\uace0 \ud0dc\uadf8\ub97c \ub2ec\uc544\ubd05\uc2dc\ub2e4. (LangSmith Web Interface \ub85c\ub9cc \uac00\ub2a5\ud569\ub2c8\ub2e4.)</li> </ul> </li> </ul>"},{"location":"practice/2_LangSmith_Evaluation/#evaluate-various-models","title":"Evaluate various models\u00b6","text":"<ul> <li>\uc0bc\uad6d\uc9c0 \ud034\uc988\ub97c \ub370\uc774\ud130\uc14b\uc73c\ub85c \uc790\ub3d9 \ud3c9\uac00 \ud14c\uc2a4\ud2b8\ub97c \uad6c\ucd95\ud569\ub2c8\ub2e4</li> <li><ol> <li>\ud3c9\uac00\ud560 \ubaa8\ub378 (LLM) \uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.</li> </ol> </li> <li><ol> <li>\ud3c9\uac00 \ubc29\ubc95 (= \ucc44\uc810 \ud568\uc218) \uc744 \uc0dd\uc131\ud569\ub2c8\ub2e4.</li> </ol> </li> <li><ol> <li>\uc790\ub3d9 \ud3c9\uac00\ub97c \uc218\ud589\ud558\uace0, \uacb0\uacfc\ub97c \uad00\ucc30\ud569\ub2c8\ub2e4.</li> </ol> </li> </ul>"},{"location":"practice/2_LangSmith_Evaluation/#evalutaion-functions","title":"Evalutaion Functions\u00b6","text":"<ul> <li><p>LangChain \uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \ud3c9\uac00 \ubc29\ubc95\ub4e4\uc744 \uc0ac\uc6a9\ud574 \ubd05\uc2dc\ub2e4.</p> </li> <li><p>\ucc38\uc870: https://docs.smith.langchain.com/reference/sdk_reference/langchain_evaluators</p> </li> <li><p>QA evaluators : Correctness \ud3c9\uac00</p> <ul> <li>qa, context_qa, cot_qa 3\uac00\uc9c0\uc758 qa \ud3c9\uac00 \ud568\uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4.</li> <li>\uc815\ub2f5\uacfc \uc624\ub2f5 \uadf8 \uc0ac\uc774\uc5d0 \uc788\ub294 \ub2f5\ubcc0\ub4e4\uc744 \uac01\uac01\uc758 evaluator \ub4e4\uc774 \uc5b4\ub5bb\uac8c \ub9e4\uacbc\ub294\uc9c0 \uc0b4\ud3b4\ubd05\uc2dc\ub2e4.</li> </ul> </li> </ul>"},{"location":"practice/2_LangSmith_Evaluation/#sentence-qa-evaluation","title":"Sentence Q&amp;A Evaluation\u00b6","text":"<ul> <li>\ub2e8\ub2f5\ud615\uc774 \uc544\ub2cc \uc8fc\uad00\uc2dd \ub2f5\ubcc0\uc5d0 \ub300\ud574\uc11c\ub3c4 \ucc44\uc810\uc744 \ud574\ubd05\uc2dc\ub2e4!</li> <li>(\uc120\ud0dd) \ub354 \uad6c\ud604\ud574 \ubd05\uc2dc\ub2e4!<ul> <li>Metadata \ucd94\uac00</li> <li>\ucc44\uc810 \ubaa8\ub378 \ubcc0\uacbd</li> <li>\uc218\ud589 \ubaa8\ub378 \ubcc0\uacbd \ud6c4 \ube44\uad50</li> </ul> </li> </ul>"},{"location":"practice/2_LangSmith_Evaluation/#rag","title":"RAG \ub97c \uc774\uc6a9\ud55c \uac1c\uc120 \uc791\uc5c5 &amp; \uc911\uac04 \ub2e8\uacc4 \ud3c9\uac00\u00b6","text":"<ul> <li>\uc6d0\ubb38 \ubc88\uc5ed\ubcf8\uc744 \ub370\uc774\ud130\ubca0\uc774\uc2a4\ub85c \ubcf4\uace0 RAG\ub97c \ud574\ubd05\uc2dc\ub2e4.</li> <li>\uac80\uc0c9\uc774 \ubb38\uc81c\uc778\uc9c0, \ub300\ub2f5\uc774 \ubb38\uc81c\uc778\uc9c0 \uac01 \uacfc\uc815\uc744 \ub098\ub220\uc11c \ud3c9\uac00\ub97c \ud574\ubd05\uc2dc\ub2e4.</li> <li>(\ucd94\uac00 \uac1c\uc120 \uc791\uc5c5) RAG variation<ul> <li>\ud6c4\ubcf4: \uce68\ucc29\ub9e8 \uc0bc\uad6d\uc9c0, \uc55e\uc120 \ubc88\uc5ed\ubcf8, \uc6f9 \uc11c\uce6d</li> <li>vector similarity search, keyword searching ...</li> <li>vector similarity \ub3c4 evaluation</li> </ul> </li> </ul>"},{"location":"practice/2_LangSmith_Evaluation/#langchain-rag","title":"LangChain \uc73c\ub85c RAG \uad6c\ud604\u00b6","text":"<ul> <li>\uc77c\ubc18\uc801\uc778 LangChain \uc0ac\uc6a9\ubc95\uc744 \uc18c\uac1c\ud569\ub2c8\ub2e4</li> <li>\uc9c1\uc811 \uad6c\ud604\ud574\ub3c4 \ub418\uc9c0\ub9cc, \uc774\ub97c \ud3b8\ud558\uac8c \uad6c\ud604\ud574 \ubd05\uc2dc\ub2e4</li> <li>Prompting Hub \ub3c4 \uc0ac\uc6a9\ud574 \ubd05\uc2dc\ub2e4.</li> <li>\ubaa8\ub378\ub3c4 \uad50\uccb4\ud574\uac00\uba70 \ube44\uad50\ud574\ubd05\uc2dc\ub2e4.</li> </ul>"},{"location":"practice/2_LangSmith_Evaluation/","title":"\uc624\ud508 \ubaa8\ub378 \uc9c1\uc811 \uc11c\ube59\ud558\ub3c4\ub85d \ubc14\uafb8\uae30\u00b6","text":"<ul> <li>API \uac00 \uc544\ub2cc \ub85c\uceec \ubaa8\ub378\ub85c \ubcc0\uacbd</li> <li>ollama</li> </ul>"},{"location":"practice/2_LangSmith_Evaluation/#chatbot-ui","title":"Chatbot UI \ub97c \ub9cc\ub4e4\uc5b4 \uc11c\ube44\uc2a4\ud558\uace0, \uc720\uc800 \ud53c\ub4dc\ubc31 \ubc1b\uae30\u00b6","text":"<ul> <li>Streamlit</li> <li>User Feedback</li> <li>Online Evaluator on LangSmith</li> </ul>"},{"location":"practice/2_LangSmith_Evaluation/#furthermore","title":"Furthermore\u00b6","text":"<ul> <li>Tavily \uc640 \uac19\uc740 \uc6f9\ube0c\ub77c\uc6b0\uc9d5 \ucd94\uac00\ud558\uae30</li> <li>GGUF file \uc744 Ollama\ub85c \ub3cc\ub9ac\uae30 (Huggingface \uc5d0\uc11c \ub9ce\uc740 \ud29c\ub2dd \ubaa8\ub378\uc744 \ub3cc\ub9b4 \uc218 \uc788\ub2e4!)</li> <li>Unsloth \ub97c \uc774\uc6a9\ud574 Fine Tuning \ud558\uae30 (GGUF \ud30c\uc77c\ub85c \ub9cc\ub4e4\uc5b4 \uc9c1\uc811 \ud29c\ub2dd \ubaa8\ub378\uc744 \uc2e4\ud5d8/\ud3c9\uac00\ud558\uc790)</li> <li>LLM Application \uc744 \uba40\ud2f0\ubaa8\ub2ec\ub9ac\ud2f0\ub85c \ud655\uc7a5\ud558\uae30</li> <li>LangGraph\uc640 \uac19\uc740 Agent framework \ud65c\uc6a9\ud558\uc5ec \ub354 \ubcf5\uc7a1\ud55c LLM Application \ud65c\uc6a9\ud558\uae30</li> </ul>"},{"location":"tutorial/Datasets/","title":"Datasets (\ub370\uc774\ud130\uc14b)","text":"<p>\uac1c\ub150\uacfc \uc885\ub958\uc5d0 \ub300\ud55c \ub0b4\uc6a9\uc740 \ucee8\uc149 \uac00\uc774\ub4dc \ub97c \ucc38\uace0\ud558\uc138\uc694. \ud55c\uc904\ub85c \uc694\uc57d\ud558\uc790\uba74, \ud3c9\uac00\ub97c \ud558\ub824\uace0 \ub370\uc774\ud130\ub97c \uc900\ube44\ud55c\ub2e4\uace0 \ubcf4\uba74 \ub429\ub2c8\ub2e4. \ud29c\ub2dd\uc6a9\uc73c\ub85c\ub3c4 \uc0ac\uc6a9 \uac00\ub2a5\ud558\uace0\uc694.</p>"},{"location":"tutorial/Datasets/#langsmith","title":"LangSmith \uc9c1\uc811 \ucd94\uac00\ud558\uae30","text":"<p>\uc544\ub798\uc640 \uac19\uc774 LangSmith \ub300\uc2dc\ubcf4\ub4dc\uc5d0\uc11c \ubc14\ub85c \ucd94\uac00\uac00 \uac00\ub2a5\ud569\ub2c8\ub2e4.</p> <p></p> <p>Dataset \uc548\uc73c\ub85c \ub4e4\uc5b4\uac00\uba74, \uc544\ub798\uc640 \uac19\uc774 Example \ub4e4\uc744 \ucd94\uac00 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. Input \uc5d0 \ub300\ud55c \uc608\uc0c1 Output\uc744 \uc791\uc131\ud558\uba74 \ub429\ub2c8\ub2e4. Splits \uac00 base \ub85c \uc124\uc815\uc774 \ub418\uc5b4\uc788\ub294\ub370, \uc774\ub294 \uc544\ub798\uc5d0\uc11c \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4.</p> <p></p>"},{"location":"tutorial/Datasets/#trace-dataset","title":"\bTrace \uc5d0\uc11c Dataset \ucd94\uac00\ud558\uae30","text":"<p>Trace \ud0ed\uc5d0\uc11c \uc120\ud0dd\uc744 \ud558\uba74, \uc544\ub798 Dataset \uc73c\ub85c \ucd94\uac00\ud558\ub294 \ubc84\ud2bc\uc774 \ud65c\uc131\ud654\uac00 \ub429\ub2c8\ub2e4.</p> <p></p> <p>Trace \ub97c \ud655\ubcf4\ud558\ub294 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778\uc774 \ud655\ubcf4\ub418\uba74, dataset\uc744 \uad6c\uc131\ud558\ub294 \ubc29\ubc95\uc774 \uac11\uc790\uae30 \ub9e4\uc6b0 \uc26c\uc6cc\uc9d1\ub2c8\ub2e4. \ub370\uc774\ud130 \uc218\uc9d1 \uad00\uc810\uc5d0\uc11c \uc544\uc8fc \ub9ce\uc774 \uc88b\uc2b5\ub2c8\ub2e4. \uc6b4\uc601\uc790\uac00 \uc6d0\ubc84\ud2bc\uc73c\ub85c \uc6d0\ud558\ub294 \ub370\uc774\ud130\ub4e4\uc744 \uace8\ub77c \ub123\uc5b4\uc904 \uc218 \uc788\uc73c\ub2c8\uae4c\uc694.</p> <p>\uc5f0\uad6c/\uac1c\ubc1c \ub2e8\uacc4\uc5d0\uc11c \uc5ec\ub7ec \uc2dc\ub3c4\ub97c \ud574\ubcf4\uba74\uc11c \ud53d\ud560 \ub370\uc774\ud130\ub4e4\uc744 \ub0a8\uaca8\ub458 \uc218\ub3c4 \uc788\uace0, \uc0ac\uc6a9\uc790\uac00 \ubd88\ub9cc\uc871 \ud588\ub358 \uc5b4\ub824\uc6b4 \uc0ac\uc6a9 \uc0ac\ub840\ub4e4\uc744 \ubaa8\uc544\uc11c \ubbf8\ub798\uc5d0 evaluation \ub370\uc774\ud130\uc14b\uc73c\ub85c \uad6c\uc131\ud560 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. </p>"},{"location":"tutorial/Datasets/#-splits","title":"\ub370\uc774\ud130 \uad6c\ubd84\ud558\uae30 - Splits","text":"<p>\ub370\uc774\ud130\uc14b\uc740 \uc5ed\ud560\uc5d0 \ub530\ub77c \ubd84\ub958\uac00 \uac00\ub2a5\ud569\ub2c8\ub2e4. Example \uc744 \uc120\ud0dd\ud558\uba74, split \uc5d0 \ub123\ub294 \ubc84\ud2bc\uc774 \ud65c\uc131\ud654 \ub418\ub294\ub370, \uba40\ud2f0 \ud0dc\uae45\uc744 \ud558\ub4ef\uc774 \ub2ec\uc544 \uc904 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uacf5\uc2dd \uc124\uba85\uc5d0 \ub530\ub974\uba74, \uace0\uc804\uc801\uc778 \uba38\uc2e0\ub7ec\ub2dd\uc758 train, validation, test \uc2a4\ud50c\ub9bf \uacfc \uac19\uc740 \uae30\ub2a5\uc744 \uc5fc\ub450\uc5d0 \ub450\uace0 \ub514\uc790\uc778\uc744 \ud588\uc2b5\ub2c8\ub2e4. \uc0ac\uc6a9\uc790\uc758 \uae30\ud638\uc5d0 \ub9de\uac8c \ud29c\ub2dd\uc6a9, \uac80\uc99d\uc6a9, \ud14c\uc2a4\ud2b8\uc6a9, \uc5d0\ub2e4\uac00 task \ubcc4\ub85c \uad6c\ubd84\ub3c4 \uac00\ub2a5\ud558\uace0, \uc6d0\ud558\ub294 \ub300\ub85c \ud0dc\uadf8\ub97c \ub2ec\uc544 \ubd84\ub958\ud558\uba74 \ub429\ub2c8\ub2e4.</p> <p></p>"},{"location":"tutorial/Datasets/#_1","title":"\uae30\ud0c0 \uae30\ub2a5","text":"<p>\uc774 \ub370\uc774\ud130\uc14b \ub4e4\uc740 \ub2f9\uc5f0\ud788 import, export \uac00\ub2a5\ud558\uace0, csv \ub97c \uc9c0\uc6d0\ud569\ub2c8\ub2e4. share \ud574\uc11c \uacf5\uac1c\ub85c \uc62c\ub9b4 \uc218\ub3c4 \uc788\uc2b5\ub2c8\ub2e4. \ucf54\ub4dc\ub97c \uc9dc\uc11c \ucee8\ud2b8\ub864 \ud558\ub294 \uac83\ub3c4 \uac00\ub2a5\ud558\uace0, \uba54\ud0c0\ub370\uc774\ud130\ub97c \ub2ec\uc544\uc8fc\uace0 \ud544\ud130\ub9c1 \ud558\ub294 \uac83\ub3c4 \uac00\ub2a5\ud569\ub2c8\ub2e4. \ud2b9\ud788, \ubc84\uc804\uc740 \ub530\ub85c \ube7c\uc11c \ubc84\uc800\ub2dd\uc774 \uc6a9\uc774\ud558\ub3c4\ub85d \uc9c0\uc6d0\ud569\ub2c8\ub2e4. \uc77c\ubc18\uc801\uc778 \ub370\uc774\ud130 \ubca0\uc774\uc2a4\uc758 \uc2a4\ud0a4\ub9c8\ub97c LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc5d0 \ub9de\uac8c \ubbf8\ub9ac \uc9c0\uc815\ud574 \ub450\uace0, web interface \ub97c \uac1c\ubc1c\uc790\uac00 \uc544\ub2cc \uc6b4\uc601\uc790\ub3c4 \uc4f0\uae30 \uc27d\uac8c \ub9cc\ub4e4\uc5b4\ub1a8\ub2e4 \uc815\ub3c4\ub85c \ubcf4\uba74 \ucda9\ubd84\ud569\ub2c8\ub2e4.  </p> <p>\uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uacf5\uc2dd\ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694.  </p> <p>\ub370\uc774\ud130\uac00 \uc900\ube44\uac00 \ub418\uc5c8\uc73c\ub2c8 \uc774\uc81c \ud3c9\uac00 (Evaluation) \uc73c\ub85c \ub118\uc5b4\uac00\uaca0\uc2b5\ub2c8\ub2e4.  </p>"},{"location":"tutorial/Evaluation/","title":"Evaluation (\ud3c9\uac00)","text":"<p>\ub370\uc774\ud130\ub97c \uc900\ube44\ud588\uc73c\ub2c8 Evaluation \ub3c4 \ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uba3c\uc800 \uac00\uc7a5 \uac04\ub2e8\ud55c \uc608\uc2dc \ubd80\ud130 \uc2dc\uc791\ud569\ub2c8\ub2e4. \ud544\uc790 \uc758\uacac\uc73c\ub85c\ub294 \uac00\uc7a5 \uc720\uc6a9\ud55c \uae30\ub2a5\uc774\ub2c8 \"Evaluation\" \ubb38\uc11c\ub294 \ud55c \ubc88 \ucb49 \ubcf4\uc2dc\ub294 \uac83\uc744 \ucd94\ucc9c\ub4dc\ub9bd\ub2c8\ub2e4.  </p>"},{"location":"tutorial/Evaluation/#quick-start","title":"Quick Start","text":"<p>\uc544\ub798 \ucf54\ub4dc\ub97c \uc218\ud589\ud558\uba74, \ub370\uc774\ud130\uc14b\uc744 \ub9cc\ub4e4\uace0, example\uc744 \ucd94\uac00\ud558\uace0, \ud3c9\uac00\ud569\ub2c8\ub2e4.</p> <pre><code>from langsmith import Client\nfrom langsmith.evaluation import evaluate\n\nclient = Client()\n\n# Define dataset: these are your test cases\ndataset_name = \"Sample Dataset\"\ndataset = client.create_dataset(dataset_name, description=\"A sample dataset in LangSmith.\")\n\nclient.create_examples(\n  inputs=[\n    {\"postfix\": \"to LangSmith\"},\n    {\"postfix\": \"to Evaluations in LangSmith\"},\n  ],\n  outputs=[\n    {\"output\": \"Welcome to LangSmith\"},\n    {\"output\": \"Welcome to Evaluations in LangSmith\"},\n  ],\n  dataset_id=dataset.id,\n)\n\n# Define your evaluator\ndef exact_match(run, example):\n  return {\"score\": run.outputs[\"output\"] == example.outputs[\"output\"]}\n\nexperiment_results = evaluate(\n  lambda input: \"Welcome \" + input['postfix'], # Your AI system goes here\n  data=dataset_name, # The data to predict and grade over\n  evaluators=[exact_match], # The evaluators to score the results\n  experiment_prefix=\"sample-experiment\", # The name of the experiment\n  metadata={\n    \"version\": \"1.0.0\",\n    \"revision_id\": \"beta\"\n  },\n)\n</code></pre> <p>\ucf54\ub4dc\uc758 \uc8fc\uc694 \uc694\uc18c\ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. - Datatsets \uc5d0 example \ucd94\uac00 - Evalutation \ud568\uc218 \uc815\uc758 : exact_match - \ud3c9\uac00 \ub300\uc0c1\uc778 LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \uac04\ub2e8\ud558\uac8c lambda \ub85c \uc815\uc758\ud574 \ub123\uc5c8\uc2b5\ub2c8\ub2e4.     - \ub2e8\uc21c \ud14d\uc2a4\ud2b8 \uce58\ud658\ud568\uc218 \uc785\ub2c8\ub2e4.</p> <p>Exact Match \ud14c\uc2a4\ud2b8\ud55c \uacb0\uacfc\ub97c LangSmith\uc5d0\uc11c \ud655\uc778\ud558\uba74, \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. Experiment \uac00 \uc0dd\uacbc\uace0 \uadf8 \uacb0\uacfc\uac00 \ud45c\uc2dc\ub429\ub2c8\ub2e4.  </p> <p>\uacb0\uacfc\ub97c \ud074\ub9ad\ud558\uc5ec \ub354 \uc790\uc138\ud788 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.  </p> <p></p> <p>\uac01 \ub370\uc774\ud130\uc14b example\uc5d0 \ub300\ud574 LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc758 output, \ud3c9\uac00 \uacb0\uacfc\uae4c\uc9c0 \uc798 \ub9e4\uaca8\uc838 \ub098\uc654\uc2b5\ub2c8\ub2e4. \uc704\uc5d0\uc11c \uc218\ud589\ud55c evaluation \ub3c4 Run \uc774\uace0 Trace \uc774\uae30 \ub54c\ubb38\uc5d0 \ud504\ub85c\uc81d\ud2b8\uc5d0 \ucd94\uc801 \uacb0\uacfc\uac00 \uc0dd\uc131\ub429\ub2c8\ub2e4.  </p> <p></p> <p>evaluators \ub77c\ub294 \uc774\ub984\uc758 \ud504\ub85c\uc81d\ud2b8\ub85c trace \ub97c \ucd94\uc801\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uc608\uc0c1\uacfc \ub2e4\ub974\uac8c \ud3c9\uac00 \uacb0\uacfc\uac00 \uc548 \uc88b\uc558\ub2e4\uba74, \uadf8 \uc774\uc720\ub97c \ucc3e\ub294 \ub514\ubc84\uae45\uc774 \uac00\ub2a5\ud558\uaca0\ub124\uc694.  </p>"},{"location":"tutorial/Evaluation/#custom-evaluator","title":"Custom Evaluator","text":"<p>\uc704 \uac04\ub2e8\ud55c \uc608\uc2dc\uc5d0\uc11c\ub294 exact_match, \uc815\ud655\ud558\uac8c \uc77c\uce58\ud558\ub294 \uc9c0\ub97c \uae30\uc900\uc73c\ub85c \ud3c9\uac00\ud588\uc2b5\ub2c8\ub2e4. \ubb38\uc81c\uc9d1\uc758 \uc815\ub2f5 \ucc44\uc810\ud558\ub294 \uac83 \ucc98\ub7fc\uc694. LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac00\uc7a5 \uc5b4\ub824\uc6b4 \uc810\uc740 \ud3c9\uac00\uac00 \uc815\uc131\uc801\uc778 \uacbd\uc6b0\uac00 \ub9ce\ub2e4\ub294 \uc810 \uc785\ub2c8\ub2e4. \uadf8\ub798\uc11c, Evaluation\uc744 \uc81c \ub9d8\ub300\ub85c \ub9cc\ub4e4 \uc218 \uc788\uc5b4\uc57c \ud569\ub2c8\ub2e4.  </p> <p>\uc704 exact_math \ud568\uc218 \ucc98\ub7fc \ub9d8\ub300\ub85c \ub9cc\ub4e4\uba74 \ub429\ub2c8\ub2e4. \uc9c0\ucf1c\uc57c \ud560\uc77c\uc740 in/out \ud615\uc2dd\ub9cc \uc798 \ub9de\ucdb0\uc8fc\uba74 \ub418\uaca0\uc8e0. <pre><code>from langsmith.schemas import Example, Run\n\ndef exact_match(root_run: Run, example: Example) -&gt; dict:\n    score = root_run.outputs.get(\"output\") == example.outputs.get(\"label\")\n    return {\"score\": int(score), \"key\": \"correct_label\"}\n</code></pre> input \uc740 Run, Example \uc785\ub2c8\ub2e4. Run \uc740 Trace \uc5d0 \ucd94\uc801\ub418\ub294 \ud558\ub098\uc758 \ub2e8\uc704\uc774\uace0, Example \uc740 \ud14c\uc2a4\ud2b8\ud560 \ub370\uc774\ud130 \uc774\uc8e0.  </p> <p>output \uc740 dict \ud0c0\uc785\uc785\ub2c8\ub2e4. \uc5ec\uae30\uc5d0\ub294 \ud604\uc7ac score, key \uac00 \ub2ec\ub824 \uc788\ub294\ub370, \ud3c9\uac00 \uacb0\uacfc\uac00 \uace7 \ud53c\ub4dc\ubc31\uc774\uae30 \ub584\ubb38\uc5d0 \ud53c\ub4dc\ubc31\uc758 \ud615\uc2dd\uc744 \uc9c0\ucf1c\uc918\uc57c\ud569\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \ud53c\ub4dc\ubc31 \ub370\uc774\ud130 \ud3ec\ub9f7 \ubb38\uc11c\ub97c \ucc38\uace0\ud558\uc138\uc694.  </p>"},{"location":"tutorial/Evaluation/#langchain","title":"LangChain \ub0b4\uc7a5 \ud3c9\uac00 \ud568\uc218","text":"<p>Custom Evaluator \ub85c \ud3c9\uac00 \ub85c\uc9c1\uc744 \ub9c8\uc74c\ub300\ub85c \ub9cc\ub4e4 \uc218 \uc788\ub294 \uac83 \uc88b\uc2b5\ub2c8\ub2e4. </p> <p>\uadf8\ub7f0\ub370... \uc5b8\uc81c \ub2e4 \ub9cc\ub4e4\uc8e0. \uc5b4\ub5bb\uac8c \ud3c9\uac00\ud574\uc57c\ud558\ub294\uac8c \uc88b\uc744\uae4c\uc694??  </p> <p>\uadf8\ub798\uc11c \ub9ce\uc774 \uc4f0\uc77c \ubc95\ud55c \ud3c9\uac00 \ud568\uc218\ub4e4\uc740 \uc774\ubbf8 \ub2e4 \ub9cc\ub4e4\uc5b4\uc838 \uc788\uc2b5\ub2c8\ub2e4. \ubb34\uc5c7\ubcf4\ub2e4\ub3c4 LLM as judge, LLM \uc5d0\uac8c \ucc44\uc810\uc744 \uc2dc\ud0a4\ub294 \ubc29\ubc95\uc774 \uad6c\ud604\uc774 \ub418\uc5b4\uc788\uc2b5\ub2c8\ub2e4. \ud55c\ubc88 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4. </p>"},{"location":"tutorial/Evaluation/#qa-correctness","title":"Q&amp;A Correctness","text":"<p>\uc9c8\ubb38\uacfc \ub2f5 \ub370\uc774\ud130 \uc138\ud2b8\ub97c \uc900\ube44\ud588\ub2e4\uba74, \ub0b4\uac00 \ub9cc\ub4e0 LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158 \ud55c\ud14c \uc2dc\ud5d8\uc744 \ubcf4\uac8c \uc2dc\ud0a4\uace0 \ub9de\uc558\ub294\uc9c0 \ud2c0\ub838\ub294\uc9c0 \ud655\uc778\ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ubc29\uae08 \uc704\uc5d0\uc11c \ubcf8 <code>exact_math</code> \ud568\uc218\ub85c \uac80\uc0ac\ud558\uba74 \ub418\ub294\uac8c \uc544\ub2c8\ub0d0\uace0 \uc0dd\uac01\ud558\uc2e4 \uc218 \uc788\ub294\ub370\uc694, \uc544\ub2d9\ub2c8\ub2e4. </p> <p>\uc815\ub2f5\uc774 \uc560\ub9e4\ud55c \uacbd\uc6b0\uc5d0 \ub300\ud574 \ucc44\uc810\uc744 \ub354 \uc798 \ud558\uace0 \uc2f6\uc740 \uacbd\uc6b0\ub97c \uc0dd\uac01\ud574 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.  </p> <p>Q: \uc7a5\ube44\uc758 \ubb34\uae30\ub294 \ubb34\uc5c7\uc785\ub2c8\uae4c? A:  \uc7a5\ud314\uc0ac\ubaa8</p> <p>\uac04\ub2e8\ud55c \uc9c8\ub2f5 \uc138\ud2b8\uc785\ub2c8\ub2e4.  \uc774 \uc9c8\ubb38\uc744 GPT\uc5d0\uac8c \ud574\ubd24\ub354\ub2c8, \uc774\ub807\uac8c \ub2f5\ud588\uc2b5\ub2c8\ub2e4. </p> <p>\ucc3d </p> <p>\uc774\uac74 \uc815\ub2f5\uc778\uac00\uc694?  \uc7a5\ud314\uc0ac\ubaa8\ub294 \ucc3d\uc774 \ub9de\uae34 \ud55c\ub370\uc694. \ucc44\uc810 \uae30\uc900\uc5d0 \ub530\ub77c\uc11c \uc815\ub2f5\uc77c \uc218\ub3c4 \uc544\ub2d0 \uc218\ub3c4 \uc788\uaca0\uc8e0. \ub2f5\ubcc0\uc774 \ub2e8\ub2f5\ud615\uc774 \uacbd\uc6b0\uc5d0\ub3c4 \uc774\ub7f0\ub370 \uc11c\uc220\ud615\uc774 \ub418\uba74 \ucc44\uc810\uc774 \ub354\uc6b1 \uc560\ub9e4\ud574\uc9d1\ub2c8\ub2e4. \uc774\ub7f0 \uacbd\uc6b0\ub97c \ud574\uacb0\ud558\uae30 \uc704\ud55c langchain\uc758 \uc81c\uc2dc \ubc29\ubc95\uc744 \uc0b4\ud3b4\ubcf4\uaca0\uc2b5\ub2c8\ub2e4.  </p> <pre><code>from langsmith import Client\nfrom langsmith.evaluation import LangChainStringEvaluator, evaluate\n\nqa_evaluator = LangChainStringEvaluator(\"qa\")\ncontext_qa_evaluator = LangChainStringEvaluator(\"context_qa\")\ncot_qa_evaluator = LangChainStringEvaluator(\"cot_qa\")\n\nclient = Client()\nevaluate(\n    ... ,\n    data=dataset_name,\n    evaluators=[qa_evaluator, context_qa_evaluator, cot_qa_evaluator],\n)\n</code></pre> <p>LangChainStringEvaluator \uc5d0\ub294 \uc5ec\ub7ec\uac00\uc9c0 correctness \uccb4\ud06c\ub97c \ubc29\ubc95\uc744 \uc81c\uc2dc\ud569\ub2c8\ub2e4. \uc704 \ucf54\ub4dc\uc5d0\uc11c\ub294 \"qa\", \"context_qa\", \"cot_qa\" \ub97c \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4.  </p>"},{"location":"tutorial/Evaluation/#_1","title":"\uae30\ud0c0 \ud3c9\uac00 \uae30\uc900","text":"<p>Q&amp;A Correctness \ub97c \ud3c9\uac00\ud558\ub294 \ub85c\uc9c1\uc744 \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4. \uc774 \uc678\uc5d0\ub3c4 \ub2e4\uc591\ud55c \ud3c9\uac00 \uae30\uc900\ub4e4\uc774 \uc788\uc2b5\ub2c8\ub2e4. \ub2f5\ubcc0\uc774 \uc5bc\ub9c8\ub098 \ub3c4\uc6c0\uc774 \ub418\ub294\uc9c0, \ub9d0\ud22c\uac00 \uacf5\uaca9\uc801\uc774\uc9c0\ub294 \uc54a\ub294\uc9c0, \uc5ec\uc131\ud610\uc624 \ud45c\ud604\uc774 \uc788\uc9c0\ub294 \uc54a\uc740\uc9c0, \uae30\ud0c0 \ub0b4\uc7a5 \ud3c9\uac00 \uae30\ub2a5\ub4e4\uc740 SDK \ubb38\uc11c \ub97c \ucc38\uc870\ud558\uc138\uc694. LangSmith\uc758 Evaluation \uae30\ub2a5 \uc124\uba85\uc744 \uc704\ud574 \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uc0dd\ub7b5\ud569\ub2c8\ub2e4.  </p>"},{"location":"tutorial/Evaluation/#_2","title":"\ud3c9\uac00 \uacb0\uacfc \ubc0f \ucc44\uc810 \uacfc\uc815 \uc5f4\ub78c","text":"<p>\uc704\uc5d0\uc11c \uc81c\uac00 \uc9c0\uc815\ud55c  Q&amp;A \uad00\ub828 \ucc44\uc810 \uacb0\uacfc\ub4e4\uc774 \ud53c\ub4dc\ubc31\uc73c\ub85c \ubd99\uc5b4\uc788\uc2b5\ub2c8\ub2e4.  </p> <p></p> <p>correct_label \uc740 \uc704\uc5d0\uc11c \ub9cc\ub4e0 exact_match \ub791 \uac19\uc740 \uac80\uc0ac \ub85c\uc9c1 \uc785\ub2c8\ub2e4. \ub2f9\uc5f0\ud788 \ud2c0\ub838\uc8e0. \"\uc7a5\ud314\uc0ac\ubaa8\" \uc640 \"\ucc3d\" \uc740 \ud14d\uc2a4\ud2b8\uac00 \ub2e4\ub974\ub2c8\uae4c\uc694. \uc81c\uc77c \uc5c4\uaca9\ud55c \uac80\uc0ac\uc8e0.  </p> <p><code>correctness</code>, <code>context correctness</code> \ub294 <code>INCORRECT</code> \ub77c\uace0 \ub300\ub2f5\ud55c \ubc18\uba74, <code>cot context correctness</code> \ub294 <code>CORRECT</code> \ub77c\uace0 \ub300\ub2f5\ud588\uc2b5\ub2c8\ub2e4.</p> <p></p> <p>\uac01 \ucc44\uc810 \ud56d\ubaa9\uc744 \ud074\ub9ad\ud558\uba74 \uc5b4\ub5bb\uac8c \uc774\ub7f0 \ucc44\uc810\uc774 \ub418\uc5c8\ub294\uc9c0 \ucd94\uc801\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud63c\uc790 \ub2e4\ub978 \uc815\ub2f5\uc774\ub77c\uace0 \ucc44\uc810\ud55c <code>cot context correctness</code> \uc758 \ucc44\uc810 \uacfc\uc815\uc744 \ud55c\ubc88 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.  </p> <p></p> <p>\ucc44\uc810 \uacfc\uc815\ub3c4 \ud558\ub098\uc758 Trace \uc774\uae30 \ub584\ubb38\uc5d0 \ucd94\uc801\uacb0\uacfc\ub97c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. gpt-4 \ub97c \uc0ac\uc6a9\ud588\uace0, 0.01 \ub2ec\ub7ec \uc815\ub3c4 \ube44\uc6a9\uc774 \ub4e4\uc5c8\uad70\uc694. \ud504\ub86c\ud504\ud305\uc774 \ubbf8\ub9ac \ub2e4 \ub418\uc5b4\uc788\ub294\ub370, \uc774\ub984 \ucc98\ub7fc cot, Chain of Thought \uacfc\uc815\uc774 \uad6c\ud604\uc774 \ub418\uc5b4\uc788\uc2b5\ub2c8\ub2e4. gpt-4 \uac00 \uc65c \uc815\ub2f5\uc774\ub77c\uace0 \ucc98\ub9ac \ud588\ub294 \uc9c0 output\uc744 \ubcf4\uba74, \uc7a5\ube44\uac00 \uc6d0\ub798 \ucc3d\uc744 \uc4f4\ub2e4\ub294 \uc0ac\uc2e4\uc744 \ud559\uc2b5\uc744 \ud1b5\ud574 \uc54c\uace0 \uc788\uc5c8\uae30 \ub54c\ubb38\uc5d0 \uc815\ub2f5\uc774\ub77c\uace0 \ucc98\ub9ac \ud588\ub2e4\ub294\uad70\uc694.  </p> <p>\ub2e4\ub978 \ud56d\ubaa9\ub4e4\uc740 \uc774 \ubb38\uc11c\uc5d0\uc11c\ub294 \ub108\ubb34 \uae38\uc774\uc9c0\ub2c8 \uc0dd\ub7b5\ud558\uaca0\uc2b5\ub2c8\ub2e4. LangChain\uc774 \ubbf8\ub9ac \ub9cc\ub4e4\uc5b4\ub454 \ucc44\uc810 \ud504\ub86c\ud504\ud305\uc744 \ubc14\ub85c \uc0ac\uc6a9\ud560 \uc218 \uc788\ub2e4\ub294 \uac83\uc774 \ucc38 \ud3b8\ub9ac\ud558\uace0 \uc88b\uc2b5\ub2c8\ub2e4.  </p>"},{"location":"tutorial/Evaluation/#_3","title":"\ud3c9\uac00 \uacb0\uacfc \ud1b5\uacc4 \uc5f4\ub78c","text":"<p>\uc774 \uacfc\uc815\uc744 \ubaa8\ub4e0 \ub370\uc774\ud130 \uc14b\uc5d0 \ub300\ud574\uc11c \ub2e4 \uc218\ud589\ud558\uace0 \uacb0\uacfc\ub97c \ub0b4\uc8fc\uae30 \ub54c\ubb38\uc5d0, Q&amp;A \ub370\uc774\ud130 \uc14b\uc774 \ub9ce\ub2e4\uba74, \uc9c8\ub2f5 \ud004\ub9ac\ud2f0\uac00 \uc0b4\uc9dd \ubd80\uc871\ud574\ub3c4 \uc591\uc73c\ub85c \ud574\uacb0\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. </p> <p></p> <p>\uc5ec\ub7ec \uc9c8\ub2f5 \ub370\uc774\ud130\uc14b\uc5d0 \ub300\ud55c \ud55c\ubc88\uc758 \ud3c9\uac00 \uc785\ub2c8\ub2e4. \uac01 \uc9c8\ub2f5\uc5d0 \ub300\ud574 \ub2e4\uc591\ud55c \ucc44\uc810\uae30\uc900\uc758 \ucc44\uc810 \uacb0\uacfc\uac00 \ubaa8\ub450 \ub2ec\ub824 \uae30\ub85d\ub41c \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.  </p> <p></p> <p>LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \ubc14\uafd4\uac00\uba74\uc11c evaluation \uc744 \uc5ec\ub7ec\ubc88 \uc218\ud589\ud558\uba74, \ud3c9\uac00 \uc810\uc218\ub97c \uc774\ub807\uac8c \ube44\uad50\ud574\ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \ubc1c\uc804 \uacfc\uc815\uc744 \uc815\ub7c9\ud654\ud574\uc11c \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4.  </p>"},{"location":"tutorial/Setup/","title":"Setup &amp; Quick Start","text":"<p>LangSmith \ub294 LangChain \uc5d0\uc11c \uc81c\uacf5\ud558\ub294 \uc11c\ube44\uc2a4 \uc774\uae30 \ub54c\ubb38\uc5d0 \uac00\uc785\ud558\uace0 API Key\ub97c \ubc1b\uc544\uc57c \ud569\ub2c8\ub2e4.</p> <p>LangChain\uc758 \ud074\ub77c\uc6b0\ub4dc\ub85c \ub370\uc774\ud130\ub97c \ubcf4\ub0b4\uc9c0 \uc54a\uace0 \uc9c1\uc811 \ud638\uc2a4\ud305\ud574\uc11c \uc0ac\uc6a9\ud558\ub294 \uac83 \ub610\ud55c \uac00\ub2a5\ud569\ub2c8\ub2e4. (FAQ #1)</p>"},{"location":"tutorial/Setup/#api-key","title":"API key \ubc1c\uae09","text":"<p>\uc544\ub798\uc640 \uac19\uc774 LangSmith \uc6f9\uc0ac\uc774\ud2b8 \uc5d0 \uc811\uc18d\ud558\uba74 \ub300\uc2dc\ubcf4\ub4dc\uac00 \ubcf4\uc785\ub2c8\ub2e4.</p> <p></p> <p>\uc124\uc815\uc5d0 \uc9c4\uc785 \ud558\uba74 API \ud0a4\ub97c \ubc1c\uae09\ubc1b\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p></p> <p>\uc774 API \ud0a4\ub97c \ucf54\ub4dc\uc5d0\uc11c \uc0ac\uc6a9\ud558\uba74 \ub429\ub2c8\ub2e4.</p> <p>\uccab \uc0ac\uc6a9\uc744 \uc704\ud55c \uc900\ube44\ub294 \ubc8c\uc368 \ub05d \uc785\ub2c8\ub2e4. \ubb34\ub8cc \uc0ac\uc6a9\uc744 \ucda9\ubd84\ud788 \uc9c0\uc6d0\ud558\uae30 \ub54c\ubb38\uc5d0 (\ub9e4\uc6d4 5000\uac70\uc758 \ucd94\uc801) \ud14c\uc2a4\ud2b8 \ub2e8\uacc4\ub85c\ub294 \ubb34\ub9ac\uac00 \uc5c6\uc2b5\ub2c8\ub2e4.</p>"},{"location":"tutorial/Setup/#_1","title":"\uc124\uce58","text":"<p>\uc774\uc81c LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158 \ucabd\uc5d0\uc11c LangSmith \ub85c \ub370\uc774\ud130\ub97c \ub0a0\ub824\uc8fc\uc5b4\uc57c \ud558\ub294\ub370, LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158 \ucf54\ub4dc\ub294 Python \uc774\ub77c\uace0 \uac00\uc815\uc744 \ud558\uace0 \uc124\uba85\ud558\uaca0\uc2b5\ub2c8\ub2e4. \uaf2d Python\uc744 \uc0ac\uc6a9\ud574\uc57c\ud558\ub294 \uac83\uc740 \uc544\ub2c8\uc9c0\ub9cc, \uc774 \ubd84\uc57c\uc5d0\uc11c \uac00\uc7a5 \ub300\uc911\uc801\uc778 Python\uc744 \uae30\uc900\uc73c\ub85c \uc791\uc131\ud558\uaca0\uc2b5\ub2c8\ub2e4. Typescript \ub3c4 \uc9c0\uc6d0\ud558\uace0, REST API \ub97c \uc0ac\uc6a9\ud574\uc11c \uc5b8\uc5b4 \ubd88\ubb38\ud558\uace0 \uc0ac\uc6a9\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4. (\ucc38\uc870 - FAQ #2 )</p> <p>pip \ub97c \uc774\uc6a9\ud574\uc11c \ud544\uc694 \ud328\ud0a4\uc9c0\ub97c \uc124\uc815\ud574 \uc90d\ub2c8\ub2e4.</p> <pre><code>pip install -U langsmith\n</code></pre>"},{"location":"tutorial/Setup/#quick-start","title":"Quick Start","text":"<p>\ud658\uacbd \ubcc0\uc218\ub97c \uc124\uc815\ud574 \uc90d\ub2c8\ub2e4. \uc55e\uc11c \ubc1c\uae09\ubc1b\uc740 api key \ub97c \uc124\uc815\ud574\uc8fc\uba74 \ub429\ub2c8\ub2e4. \ud14c\uc2a4\ud2b8\ub97c \uc704\ud574 GPT \ub97c \uc0ac\uc6a9\ud574 \ubcfc \uc608\uc815\uc774\ub77c OPENAI \uc5d0\uc11c\ub3c4 api key\ub97c \ubc1c\uae09\ubc1b\uc544\uc11c \uc785\ub825\ud558\uaca0\uc2b5\ub2c8\ub2e4.</p> <pre><code>import os\n\nos.environ[\"LANGCHAIN_TRACING_V2\"]=\"true\"\nos.environ[\"LANGCHAIN_API_KEY\"]=\"\"\n\nos.environ[\"OPENAI_API_KEY\"]=\"\"\n</code></pre> <p>\uc774\uc81c Tracing (\ucd94\uc801) \uc744 \ud574\ubcf4\uaca0\uc2b5\ub2c8\ub2e4. \uc5ec\uae30\uc11c\ub294 <code>wrap_openai</code> \ud568\uc218\uc640  <code>@traceable</code> \ub370\ucf54\ub808\uc774\ud130 \ub450 \uac00\uc9c0\ub97c \uc0ac\uc6a9\ud588\uc2b5\ub2c8\ub2e4. Openai \ub85c\uc758 \uc694\uccad\uacfc, traceable \ub97c \ub2ec\uace0 \uc788\ub294 \ud568\uc218\uac00 \ubaa8\ub450 LangSmith \ub85c \ub85c\uae45\ub418\uc5b4 \ucd94\uc801\uc774 \uac00\ub2a5\ud574\uc9d1\ub2c8\ub2e4.</p> <pre><code>import openai\nfrom langsmith.wrappers import wrap_openai\nfrom langsmith import traceable\n\n# Auto-trace LLM calls in-context\nclient = wrap_openai(openai.Client())\n\n@traceable # Auto-trace this function\ndef pipeline(user_input: str):\n  result = client.chat.completions.create(\n  messages=[{\"role\": \"user\", \"content\": user_input}],\n  model=\"gpt-3.5-turbo\"\n)\n\nreturn result.choices[0].message.content\n\npipeline(\"Hello, world!\")\n# Out: Hello there! How can I assist you today?\n</code></pre> <p>\uc2e4\uc81c \ucd94\uc801\ub41c \uacb0\uacfc\ub97c \ud55c\ubc88 \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.</p> <p>LangSmith \uc6f9\uc0ac\uc774\ud2b8 \uc5d0 \uc811\uc18d\ud558\uc5ec Project \ud398\uc774\uc9c0\ub97c \ubcf4\uba74 \"default\" \ub77c\ub294 \uc774\ub984\uc774 \ud504\ub85c\uc81d\ud2b8\ub85c \ucd94\uc801 \uacb0\uacfc\uac00 \uc0dd\uacbc\uc2b5\ub2c8\ub2e4. \uc704\uc5d0\uc11c \ud504\ub85c\uc81d\ud2b8 \uba85\uc744 \uba85\uc2dc\ud558\uc9c0 \uc54a\uc558\uae30 \ub54c\ubb38\uc785\ub2c8\ub2e4.</p> <p></p> <p>default \ud504\ub85c\uc81d\ud2b8\ub97c \ud074\ub9ad\ud558\uba74, run \ub41c \uacb0\uacfc\ub4e4\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. @traceable \ub85c \ub178\ud14c\uc774\uc158\ud55c \ud568\uc218 pipeline \ub3c4 \ubcf4\uc774\uace0, \uadf8 \uc548\uc5d0 openai \ub85c \uc694\uccad\ub41c gpt \uc758 \uacb0\uacfc\ub3c4 \ubcf4\uc785\ub2c8\ub2e4. \ube44\uc6a9, \uc18c\uc694 \uc2dc\uac04, \uc2e4\uc81c \uc694\uccad\ub41c \uc2dc\uac04, \ubaa8\ub450 \ub2e4 \ucd94\uc801\uc774 \uc644\uc131\ub418\uc5c8\uc2b5\ub2c8\ub2e4.</p> <p></p>"},{"location":"tutorial/Tracing_1/","title":"Tracing \uae30\ucd08","text":"<p>LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc758 \uac01 \uacfc\uc815\ub4e4\uc744 \ucd94\uc801\ud569\ub2c8\ub2e4. LangSmith \uc5d0\uc11c\ub294 \ucd94\uc801, Tracing \uc774\ub77c\uace0 \uc815\uc758 \ud558\uace0 \uc788\uc9c0\ub9cc, Logging (\ub85c\uae45) \uc774\ub791 \uac1c\ub150\uc774 \uac19\uc2b5\ub2c8\ub2e4.</p> <p>\uc608\ub97c \ub4e4\uc5b4 \ucc57\ubd07\uc744 \uad6c\uc131\ud588\ub2e4\uace0 \uac00\uc815\ud558\uba74, \uc0ac\uc6a9\uc790\ub4e4\uc758 \ucc57 history \uc640 LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \ub2f5\ubcc0\ud55c \uacfc\uc815\uc744 \ubaa8\ub450 \ub0a8\uaca8 \uad00\ub9ac\ud569\ub2c8\ub2e4. \ub514\ubc84\uae45 \uc6a9\uc73c\ub85c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uace0, \ucda9\ubd84\ud788 \ube60\ub974\uac8c \ub2f5\ubcc0\ud558\ub294\uc9c0, \ube44\uc6a9\uc740 \uc5bc\ub9c8\ub098 \ubc1c\uc0dd\ud588\ub294\uc9c0, \uc0ac\uc6a9\uc790\ub294 \ub9cc\uc871\uc744 \ud588\ub294\uc9c0 \ubaa8\ub450 \uad00\ub9ac\uac00 \uac00\ub2a5\ud569\ub2c8\ub2e4.</p>"},{"location":"tutorial/Tracing_1/#_1","title":"\uacb0\uacfc \ubbf8\ub9ac\ubcf4\uae30","text":"<p>Tracing \uc608\uc2dc \uc785\ub2c8\ub2e4. \ud558\ub098\uc758 \ub300\ud654\uc5d0 \ub300\ud574 Retriever \uc758 \uacb0\uacfc, \ucd5c\uc885 output, \uac01 \ub2e8\uacc4\uc5d0\uc11c \uc18c\uc694\ub41c \uc2dc\uac04, \ubc1c\uc0dd\ud55c \ube44\uc6a9, \uc0ac\uc6a9\uc790\uc758 \ud53c\ub4dc\ubc31 \uc218\uc9d1 \uacb0\uacfc \uae4c\uc9c0 \ubaa8\ub450 \uad00\ucc30\uc774 \uac00\ub2a5\ud569\ub2c8\ub2e4. Tracing \uc635\uc158 \uc124\uc815\uc5d0 \ub530\ub77c \ubaa8\ub4e0 \ub300\ud654\ub97c \uc218\uc9d1\ud558\ub294 \uac83, \uc77c\ubd80\ub9cc \uc218\uc9d1\ud558\ub294 \uac83\ub3c4 \uac00\ub2a5\ud569\ub2c8\ub2e4.</p> <p></p>"},{"location":"tutorial/Tracing_1/#_2","title":"\uad6c\ud604","text":"<p>\uba3c\uc800 Setup \ub97c \ucc38\uc870\ud558\uc5ec \ud658\uacbd\ubcc0\uc218 \uc124\uc815\uc744 \uba3c\uc800 \ud574\uc90d\ub2c8\ub2e4.</p> <p>\ucd94\uc801\uc744 \ud558\ub294 \ubc29\ubc95\uc740 \ud06c\uac8c 3\uac00\uc9c0\uac00 \uc788\uc2b5\ub2c8\ub2e4. - <code>@traceable</code> \ub370\ucf54\ub808\uc774\ud130\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83 - <code>wrap_openai</code>\uc640 \uac19\uc740 <code>wrapper</code> \ud568\uc218\ub97c \uc0ac\uc6a9\ud558\ub294 \uac83 - LangChain \uc744 \uc774\uc6a9\ud574\uc11c LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc744 \uad6c\ud604\ud558\ub294 \uac83</p> <p>\uc774 \uc678\uc5d0\ub3c4 <code>RunTree</code> \ud074\ub798\uc2a4\ub77c\ub358\uac00,  REST API \ud638\ucd9c\uc774\ub77c\ub358\uac00 \ub2e4\ub978 \ubc29\uc2dd\uc758 \uad6c\ud604\uc774 \uac00\ub2a5\ud558\uc9c0\ub9cc, \uc0dd\ub7b5\ud558\ub3c4\ub85d \ud558\uaca0\uc2b5\ub2c8\ub2e4.</p> <p>\uac04\ub2e8\ud558\uac8c \uc704 \ub450\uac00\uc9c0 \ubc29\ubc95\uc744 \uc0ac\uc6a9\ud55c \uc608\uc2dc\ub97c \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.</p> <pre><code>import openai\nfrom langsmith import traceable\nfrom langsmith.wrappers import wrap_openai\n\nclient = wrap_openai(openai.Client())\n\n@traceable(run_type=\"tool\", name=\"Retrieve Context\")\ndef my_tool(question: str) -&gt; str:\n  return \"During this morning's meeting, we solved all world conflict.\"\n\n@traceable(name=\"Chat Pipeline\")\ndef chat_pipeline(question: str):\n  context = my_tool(question)\n  messages = [\n    { \"role\": \"system\", \"content\": \"You are a helpful assistant. Please respond to the user's request only based on the given context.\" },\n    { \"role\": \"user\", \"content\": f\"Question: {question}\\nContext: {context}\"}\n  ]\n  chat_completion = client.chat.completions.create(\n  model=\"gpt-3.5-turbo\", messages=messages\n)\n\nreturn chat_completion.choices[0].message.content\n\nchat_pipeline(\"\uc544\uce68\uc5d0 \ubb50 \ud568?\")\n</code></pre> <p>Prompting \uc774 \ucd94\uac00\ub41c \uc544\uc8fc \uac04\ub2e8\ud55c LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158 \uc785\ub2c8\ub2e4. - GPT \uc5d0 \ubcf4\ub0b4\ub294 openai client \ub97c wrap_openai \ub85c \uac10\uc2f8\uc11c \ucd94\uc801\uc744 \ucd94\uac00\ud588\uace0, - Prompting \uc744 \uc704\ud574 \ucee8\ud14d\uc2a4\ud2b8\ub97c \ucd94\uac00\ud558\ub294 <code>my_tool()</code>\uc5d0 <code>@tracable</code>\uc744 \ucd94\uac00\ud574\uc11c \ucd94\uc801\ud588\uace0, - \uc704 \ub450 \uc791\uc5c5\uc744 \uc9c4\ud589\ud558\ub294 <code>chat_pipeline</code>\uc5d0\ub3c4 \ucd94\uc801\uc744 \ucd94\uac00\ud588\uc2b5\ub2c8\ub2e4.</p> <p>LangSmith \ud398\uc774\uc9c0\uc5d0\uc11c \ud655\uc778 \uac00\ub2a5\ud55c \uacb0\uacfc\ub97c \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.</p> <p></p> <p>\ucd94\uc801\uc744 \ud0a8 3\uac00\uc9c0 \uc694\uc18c\uac00 \ubaa8\ub450 \ucd94\uc801\uc774 \ub418\uc5c8\uc2b5\ub2c8\ub2e4.</p> <p><code>@traceable(run_type=\"tool\", name=\"Retrieve Context\")</code> \uc758 \ucf54\ub4dc\uc5d0\uc11c \ubcfc \uc218 \uc788\ub294 \uac01 \ucd94\uc801\uc744 \ub098\ud0c0\ub0b4\ub294 \uc694\uc18c\uae4c\uc9c0 \uc798 \ud45c\uae30\uac00 \ub418\uc5c8\uc2b5\ub2c8\ub2e4.</p> <p>\uc5bc\ub9c8\ub098 \ubcf5\uc7a1\ud574\uc9c0\ub4e0 \uc6d0\ud558\ub294 \uc694\uc18c \ubaa8\ub450 \ub2e4 \ucd94\uc801\uc744 \ub2ec\uc544\uc8fc\uba74 \ub429\ub2c8\ub2e4.</p>"},{"location":"tutorial/Tracing_1/#_3","title":"\ud504\ub85c\uc81d\ud2b8 \uc124\uc815\ud558\uae30","text":"<p>\ud604\uc7ac\ub294 \ud504\ub85c\uc81d\ud2b8 \uc774\ub984\uc744 \uc124\uc815\ud558\uc9c0 \uc54a\uc558\uae30 \ub584\ubb38\uc5d0, \ubaa8\ub450 \"default\" \ud504\ub85c\uc81d\ud2b8\ub85c \ucd94\uc801 \uacb0\uacfc\uac00 \uc218\uc9d1\ub429\ub2c8\ub2e4. \ud504\ub85c\uc81d\ud2b8 \uba85\uc744 \uc124\uc815\ud574\uc8fc\uba74 \uc6d0\ud558\ub294 \ud504\ub85c\uc81d\ud2b8 \ub2e8\uc704\ub85c \ucd94\uc801 \uacb0\uacfc\ub4e4\uc744 \ubaa8\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud504\ub85c\uc81d\ud2b8 \uc124\uc815 \ud558\ub294 \ubc29\ubc95\uc73c\ub85c\ub294 \uc544\ub798\uc640 \uac19\uc740 \ubc29\ubc95\uc774 \uc788\uc2b5\ub2c8\ub2e4.</p> <ul> <li> <p>\ud658\uacbd \ubcc0\uc218 <code>LANGCHAIN_PROJECT</code> \uc5d0 \uc774\ub984\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. <pre><code>os.environ[\"LANGCHAIN_PROJECT\"]=\"MYPROJECT!\"\n</code></pre></p> </li> <li> <p><code>@traceable</code> \ub370\ucf54\ub808\uc774\ud130\uc5d0 \ud504\ub85c\uc81d\ud2b8 \uc774\ub984\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. <pre><code>@traceable(run_type=\"llm\", project_name=\"MYPROJECT!\")\n</code></pre></p> </li> <li> <p>wrapper \ud568\uc218\uc5d0 \ud504\ub85c\uc81d\ud2b8 \uc774\ub984\uc744 \uc124\uc815\ud569\ub2c8\ub2e4. <pre><code>from langsmith import wrappers  \nwrapped_client = wrappers.wrap_openai(client)  \nwrapped_client.chat.completions.create(  \n  model=\"gpt-3.5-turbo\",  \n  messages=messages,  \n  langsmith_extra={\"project_name\": \"MYPROJECT!\"},  \n)\n</code></pre></p> </li> </ul> <p>\ud504\ub85c\uc81d\ud2b8 \uba85\uc744 \uc124\uc815\ud558\uba74 \uadf8 \uc774\ub984\uc5d0 \ub9de\ub294 \ud504\ub85c\uc81d\ud2b8\uac00 \uc0dd\uc131\ub418\uace0 \uadf8 \ud558\uc704\uc5d0 \ucd94\uc801 \uacb0\uacfc\ub4e4\uc774 \uc801\uc7ac\ub429\ub2c8\ub2e4.</p> <p></p> <p>Trace \ub4e4\uc740 \ud2b8\ub9ac \uad6c\uc870\ub85c \ud3ec\ud568\uad00\uacc4\uac00 \uc788\uae30 \ub54c\ubb38\uc5d0, \uac00\uc7a5 \ubc14\uae65\uc758 \ud568\uc218\uc5d0 \ud504\ub85c\uc81d\ud2b8\uba85\uc744 \uc798 \ud45c\uae30\ud574\uc57c\ud569\ub2c8\ub2e4.</p>"},{"location":"tutorial/Tracing_1/#sampling-rate","title":"Sampling Rate","text":"<p>\ucd94\uc801 \uae30\ub2a5\uc744 \ucf1c\uba74, \ubaa8\ub4e0 \uc218\ud589 \uacb0\uacfc\ub4e4\uc774 LangSmith \uc5d0 \uae30\ub85d\ub429\ub2c8\ub2e4. \uacb0\uad6d \ub370\uc774\ud130\uac00 \uc313\uc774\ub294 \uac83\uc774\uae30 \ub54c\ubb38\uc5d0, \uc11c\ube44\uc2a4\uac00 \ud65c\ubc1c\ud788 \ub3cc\uc544\uac04\ub2e4\uba74, \ubaa8\ub4e0 Run \uc744 \ucd94\uc801\ud558\ub294 \uac83\uc774 \uacfc\ub3c4\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \uadf8\ub798\uc11c, \ucd94\uc801\uc744 \ub0a8\uae38 \ube44\uc728\uc744 \uc9c0\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <pre><code>os.environ[\"LANGCHAIN_TRACING_SAMPLING_RATE\"]=0.75\n</code></pre> <p>\uc704\uc640 \uac19\uc774 \ud658\uacbd \ubcc0\uc218\ub97c \uc124\uc815\ud558\uba74 \ube44\uc728\uc744 \uc124\uc815 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"tutorial/Tracing_1/#metadata-tag","title":"Metadata \uc640 Tag \ucd94\uac00\ud558\uae30","text":"<p>trace \ub4e4\uc740 \ucd94\uac00 \uc815\ubcf4\ub97c \uc544\ub798\uc640 \uac19\uc774 \uc785\ub825\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. </p> <pre><code>@traceable(  \n...\ntags=[\"my-tag\"],  \nmetadata={\"my-key\": \"my-value\"}  \n)\n</code></pre> <p>\uc544\ub798\uc640 \uac19\uc774 \ucd94\uac00\ub41c tag \uc640 \uba54\ud0c0\ub370\uc774\ud130\ub97c \ud655\uc778 \uac00\ub2a5\ud569\ub2c8\ub2e4.</p> <p> </p> <p>Tracing \uc758 \uae30\ubcf8 \uae30\ub2a5\uc740 \uc5ec\uae30\uae4c\uc9c0 \uc815\ub9ac\ub97c \ud558\uace0, \ub098\uba38\uc9c0\ub294 \uace0\uae09 \uae30\ub2a5\uc73c\ub85c \ubd84\ub958\ud574\uc11c \ub2e4\uc74c \uae00\uc5d0\uc11c \uc774\uc5b4 \uc791\uc131\ud569\ub2c8\ub2e4. \ub300\ubd80\ubd84\uc740 \uc5ec\uae30\uae4c\uc9c0\ub9cc \uad81\uae08\ud558\uc2e4 \uac83 \uac19\uc544\uc11c\uc694.</p>"},{"location":"tutorial/Tracing_2/","title":"Tracing \uace0\uae09","text":"<p>\uae30\ubcf8 \uae30\ub2a5\uc5d0 \uc774\uc5b4 \ucd94\uac00\uc801\uc778 \uae30\ub2a5\ub4e4\uc744 \uc124\uba85\ud569\ub2c8\ub2e4.</p>"},{"location":"tutorial/Tracing_2/#multimodality","title":"Multimodality (\uba40\ud2f0\ubaa8\ub2ec\ub9ac\ud2f0)","text":"<p>LangSmith \ub294 \uc5b8\uc5b4\ub9cc trace \ud558\ub294 \uac83\uc774 \uc544\ub2c8\ub77c image \ub3c4 \ucd94\uc801\ub429\ub2c8\ub2e4. \ucd94\uac00\uc801\uc778 \uc870\uce58\ub97c \ucde8\ud560 \ud544\uc694\ub294 \uc5c6\uc2b5\ub2c8\ub2e4. Image\ub97c URL \ub610\ub294 base64 \ud615\ud0dc\ub85c retrieve \ud588\uac70\ub098, \ubaa8\ub378\uc5d0 \uc804\ub2ec \ud588\ub2e4\uba74 \uc544\ub798\uc640 \uac19\uc774 \ucd94\uc801\uc774 \ub429\ub2c8\ub2e4.</p> <p></p>"},{"location":"tutorial/Tracing_2/#retriever","title":"Retriever","text":"<p>\ub9ce\uc740 LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc740 retriever \ub97c \ub3d9\ubc18\ud569\ub2c8\ub2e4. \uc544\ub798\uc640 \uac19\uc774 traceable \ub370\ucf54\ub808\uc774\ud130\uc5d0 run_type \uc744 retriever \ub85c \uc9c0\uc815\ud574 \uc8fc\uba74 \uc774\uc5d0 \uac78\ub9de\ub294 \ucd94\uc801 \uacb0\uacfc\uac00 \uae30\ub85d\ub429\ub2c8\ub2e4. <pre><code>@traceable(run_type=\"retriever\")\n</code></pre></p> <p>Retriever \ub294 \uc544\ub798\uc640 \uac19\uc740 \uacb0\uacfc\ub97c return \ud574\uc57c\ub9cc LangSmith\uc5d0 retreiver \ud615\ud0dc\ub85c \uae30\ub85d\ud569\ub2c8\ub2e4. Python \uae30\uc900 \ub515\uc154\ub108\ub9ac\ub97c return \ud574\uc57c\ub9cc\ud558\uace0, \uadf8 key \ub294 \ub2e4\uc74c\uacfc \uac19\uc2b5\ub2c8\ub2e4. - <code>page_content</code>: \ub0b4\uc6a9 \uc785\ub2c8\ub2e4. - <code>type</code>: \"Document\" \ub77c\ub294 \uac12\uc744 \uac00\uc838\uc57c\ub9cc \ud569\ub2c8\ub2e4. - <code>metadata</code>: \uba54\ud0c0 \ub370\uc774\ud130 \ub515\uc154\ub108\ub9ac \uc774\uace0, LangSmith \uc5d0\uc11c \uba54\ud0c0\ub370\uc774\ud130\ub85c \ud45c\uc2dc\ub429\ub2c8\ub2e4.</p> <p>\uc544\ub798\uc640 \uac19\uc774 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uc5ec \uc218\ud589\ud558\uba74, <pre><code>from langsmith import traceable\n\ndef _convert_docs(results):\n    return [\n        {\n            \"page_content\": r,\n            \"type\": \"Document\",\n            \"metadata\": {\"foo\": \"bar\"}\n        }\n        for r in results\n    ]\n\n@traceable(run_type=\"retriever\")\ndef retrieve_docs(query):\n    # Foo retriever returning hardcoded dummy documents.\n    # In production, this could be a real vector datatabase or other document index.\n    contents = [\"Document contents 1\", \"Document contents 2\", \"Document contents 3\"]\n    return _convert_docs(contents)\n\nretrieve_docs(\"User query\")\n</code></pre></p> <p>\ub2e4\uc74c\uacfc \uac19\uc774 Retriever \ud0c0\uc785\uc73c\ub85c \uba85\uc2dc\uac00 \ub418\uc5b4 \ucd94\uc801\uc774 \ub429\ub2c8\ub2e4.</p> <p></p> <p>\uacb0\uacfc\ub9cc \ubcf4\uba74 \ubb34\uc2a8\ucc28\uc774\uac00 \uc788\ub098 \uc2f6\uc73c\uc2e4 \uc218\ub3c4 \uc788\uaca0\uc9c0\ub9cc, \ub9ce\uc740 \uacfc\uc815\uc774 \ucd94\uac00\ub41c \uc0c1\ud0dc\uc5d0\uc11c\ub294 \uad6c\ubd84\uc774 \uc911\uc694\ud569\ub2c8\ub2e4. \uc65c\ub0d0\ud558\uba74 Agent\ub294 Retrieve\ub97c \ubc18\ubcf5\uc801\uc73c\ub85c \uc5ec\ub7ec\ubc88 \uc218\ud589\ud560 \uc218\ub3c4 \uc788\uace0, \ub2e4\ub978 \ud589\uc704\ub4e4 (ex, tavily \uac19\uc740 \uac80\uc0c9) \uacfc\uc758 \uc0c1\ud638\uc791\uc6a9\uc744 \uc798 \uad00\ucc30\ud574\uc57c\ud560 \ud544\uc694\uac00 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"tutorial/Tracing_2/#custom-llm","title":"Custom LLM","text":"<p>\ud604\uc7ac\uae4c\uc9c0\ub294 OpenAI \uc758 Chat API \ud638\ucd9c\ub9cc\uc744 \ucd94\uc801\ud588\uc2b5\ub2c8\ub2e4. LangSmith \uc5d0\uc11c\ub294 OpenAI \ud638\ucd9c\uc744 \uae30\ubcf8\uc73c\ub85c \ubcf4\ub294 \uac83 \uac19\uc2b5\ub2c8\ub2e4. \ud1a0\ud070 \ucd94\uc801\uc774\ub098, builtin \ucd94\uc801 \uae30\ubcf8 \uae30\ub2a5\ub4e4\uc744 \ud56d\uc0c1 OpenAI API \uba3c\uc800 \uc9c0\uc6d0\ud558\ub354\uad70\uc694. \uc6b0\ub9ac\ub294 Google Gemini\ub97c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uace0, Antropic \uc758 Claude \ub97c \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uace0, \uc9c1\uc811 \ud638\uc2a4\ud305\ud558\ub294 \ubaa8\ub378\ub4e4\uc744 \uc0ac\uc6a9\ud560 \uc218\ub3c4 \uc788\uc8e0. Meta Lamma \ub77c\ub358\uac00, fine-tune \ub41c \ubaa8\ub378\uc744 huggingface \uc5d0\uc11c \uc8fc\uc6cc \uc628\ub2e4\ub358\uac00. \ub2e4\uc591\ud55c \ubaa8\ub378\ub4e4\uc744 \uad6c\ubd84\ud574\uc11c \ucd94\uc801\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.</p> <p>LLM \ubaa8\ub378\uc758 \ud638\ucd9c\uc740 \ud06c\uac8c Chat-Style \uacfc Instruction-Style \ub85c \uad6c\ubd84\ud560 \uc218 \uc788\ub294\ub370, \ub450 \uac00\uc9c0 \uacbd\uc6b0\ub85c \ub098\ub220\uc11c \ubcf4\uaca0\uc2b5\ub2c8\ub2e4.</p> <ol> <li>Chat Style (OpenAI \uc758 Chat Completion API \ud615\uc2dd)</li> </ol> <p>\uc544\ub798\uc640 \uac19\uc774 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uba74, <pre><code>from langsmith import traceable\n\ninputs = [\n    {\"role\": \"system\", \"content\": \"You are a helpful assistant.\"},\n    {\"role\": \"user\", \"content\": \"I'd like to book a table for two.\"},\n]\n\noutput = {\n    \"choices\": [\n        {\n            \"message\": {\n                \"role\": \"assistant\",\n                \"content\": \"Sure, what time would you like to book the table for?\"\n            }\n        }\n    ]\n}\n\n@traceable(\n    run_type=\"llm\",\n    metadata={\"ls_provider\": \"my_provider\", \"ls_model_name\": \"my_model\"}\n)\ndef chat_model(messages: list):\n    return output\n\nchat_model(inputs)\n</code></pre></p> <p>\uc544\ub798\uc640 \uac19\uc774 LLM \ubaa8\ub378\uc774 \"my_model\"\ub85c \uc124\uc815\ub41c \uac83\uc744 \ubcfc \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ub2e4\uc591\ud55c \ubaa8\ub378\ub4e4\uc744 \ub0b4 \ub9c8\uc74c\ub300\ub85c \uc124\uc815\ud574\uc11c \ucd94\uc801\uc744 \ub0a8\uae38 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud29c\ub2dd\ub41c \uc5ec\ub7ec \ubaa8\ub378\ub4e4\uc744 A/B \ud14c\uc2a4\ud2b8 \ud560\ub54c \ud544\uc694\ud558\uaca0\ub124\uc694.  </p> <ol> <li>Instruction-Style (String in/out \ud615\uc2dd)</li> </ol> <p>\uc544\ub798\uc640 \uac19\uc774 \ucf54\ub4dc\ub97c \uc791\uc131\ud558\uba74, <pre><code>@traceable(\n    run_type=\"llm\",\n    metadata={\"ls_provider\": \"my_provider\", \"ls_model_name\": \"my_model\"}\n)\ndef hello_llm(prompt: str):\n    return {\n        \"choices\": [\n            {\"text\": \"Hello, \" + prompt}\n        ],\n        \"usage_metadata\": {\n            \"input_tokens\": 4,\n            \"output_tokens\": 5,\n            \"total_tokens\": 9,\n        },\n    }\n\nhello_llm(\"polly the parrot\\n\")\n</code></pre></p> <p>\uc544\ub798\uc640 \uac19\uc774 \uacb0\uacfc\uac00 \ub098\uc635\ub2c8\ub2e4. \uc5ed\uc2dc\ub098 \ubaa8\ub378\uba85\uc744 \uc81c \ub9c8\uc74c\ub300\ub85c \uc124\uc815\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. chat \ud615\uc2dd\uc774 \uc544\ub2c8\ub77c \uc774\uc5b4\uc9c4 String \uc744 \ud55c\ubc88\uc5d0 \ubcfc \uc218 \uc788\uace0, \uba54\ud0c0\ub370\uc774\ud130\ub85c \uc804\ub2ec\ud55c token \uac2f\uc218\ub3c4 \ucd94\uc801\uc774 \ub418\uc5b4 \ud45c\uc2dc\ub429\ub2c8\ub2e4. OpenAI\uc758 API\ub294 \ud1a0\ud070 \uac2f\uc218\uc5d0 \uc5f0\ub3d9\ub418\uc5b4 \ube44\uc6a9\ub3c4 \ucd94\uc801\uc774 \ub418\uc9c0\ub9cc, \ucee4\uc2a4\ud140 \ubaa8\ub378\uc740 \ube44\uc6a9 \uc815\ubcf4\uac00 \uc5c6\uc73c\ubbc0\ub85c \uacc4\uc0b0\uc774 \ub418\uc5b4 \ub098\uc624\uc9c0\ub294 \uc54a\uc2b5\ub2c8\ub2e4. \uba54\ud0c0\ub370\uc774\ud130\ub85c \ucd94\uac00\ud558\uba74 \ub420 \ud150\ub370, \uc544\uc9c1\uc740 \uc9c0\uc6d0\uc744 \uc548\ud558\ub098 \ubd05\ub2c8\ub2e4.  </p> <p>\uc774 \uc678\uc5d0\ub3c4 \ub2e4\uc591\ud55c \uae30\ub2a5\ub4e4\uc774 \ub354 \uc788\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \uc0ac\uc6a9\ubc95\uc740 \uc0dd\ub7b5\ud558\uace0 \uac1c\ub150\uacfc \uc124\uba85\ub9cc \uae30\uc220\ud558\uaca0\uc2b5\ub2c8\ub2e4. \uc790\uc138\ud55c \ub0b4\uc6a9\uc740 \uacf5\uc2dd \ubb38\uc11c\ub97c \ucc38\uc870\ud558\uc138\uc694</p>"},{"location":"tutorial/Tracing_2/#distributed-tracing","title":"Distributed Tracing","text":"<p>LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc740 \ubcf5\uc218\uac1c\uc758 \uc11c\ube44\uc2a4\uac00 \uc5f0\ub3d9\ub418\uc5b4\uc11c \ub3d9\uc791\ud560 \uc218\uac00 \uc788\uc2b5\ub2c8\ub2e4. \uc774\ub7f4 \ub54c\uc5d0\ub3c4 \ud558\ub098\uc758 Run\uc73c\ub85c \ucd94\uc801\uc744 \ud574\uc57c\ud569\ub2c8\ub2e4. API \ud638\ucd9c\uc744 \uac14\ub2e4 \uc624\uba74\uc11c \uac19\uc774 \ub370\uc774\ud130\ub97c \ub118\uaca8 \uc774\uc5b4\uc11c \ucd94\uc801\uc744 \ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4.  \ubb38\uc81c\ub294 API \ub97c \ubc1b\uc544\uc8fc\ub294 \uc11c\ube44\uc2a4\uc5d0 \ucd94\uc801\uc744 \ub2ec\uc544\uc57c \ud558\uae30 \ub54c\ubb38\uc5d0, \ubaa8\ub450 \uc81c\uac00 \ucf54\ub4dc\ub97c \uc218\uc815\ud560 \uc218 \uc788\uc5b4\uc57c\ub9cc \ud569\ub2c8\ub2e4.</p>"},{"location":"tutorial/Tracing_2/#_1","title":"\ub370\uc774\ud130 \uc228\uae30\uae30","text":"<p>\ubbfc\uac10\ud55c \ub370\uc774\ud130\uac00 \uc788\ub294 \uacbd\uc6b0, \ub370\uc774\ud130\ub9cc \uac00\ub824\uc11c \ucd94\uc801\uc744 \ud558\uace0 \uc2f6\uc744 \uc218 \uc788\uc2b5\ub2c8\ub2e4. LLM \uc5b4\ud50c\ub9ac\ucf00\uc774\uc158\uc774 \uc5bc\ub9c8\ub098 \ud638\ucd9c\uc774 \ub418\uace0 \uc788\ub294\uc9c0, \ube60\ub974\uac8c \ucc98\ub9ac\uac00 \ub418\uace0 \uc788\ub294\uc9c0, \uc0ac\uc6a9\uc790\ub294 \ub9cc\uc871\uc744 \ud558\uace0 \uc788\ub294\uc9c0 \ubaa8\ub450 \ucd94\uc801\ud558\uace0 \uc2f6\uc9c0\ub9cc, \ub370\uc774\ud130\uac00 \uacf5\uac1c\ub418\uc9c0 \uc54a\uc558\uc73c\uba74 \ud558\ub294 \uacbd\uc6b0\uc5d0 \uc0ac\uc6a9\ud560 \uc218 \uc788\uaca0\uad70\uc694. \uc544\ub798 \ud658\uacbd \ubcc0\uc218\ub97c \uc798 \uc124\uc815\ud574\uc8fc\uba74 \ub429\ub2c8\ub2e4.</p> <pre><code>LANGCHAIN_HIDE_INPUTS=true\nLANGCHAIN_HIDE_OUTPUTS=true\n</code></pre>"},{"location":"tutorial/Tracing_2/#_2","title":"\ucd94\uc801 \uacb0\uacfc \uacf5\uc720\ud558\uae30","text":"<p>\ucd94\uc801\ub41c Run \uc744 \uc6b0\uce21 \uc0c1\ub2e8\uc5d0\uc11c \uacf5\uc720\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. \ud074\ub77c\uc6b0\ub4dc\ub85c \ud638\uc2a4\ud305 \ub418\uace0 \uc788\ub294 LangSmith \uc758 \uacbd\uc6b0 \ub9c1\ud06c\uac00 \uc0dd\uc131\ub418\uc5b4 \uc6f9 URL\ub85c \uacf5\uc720\uac00 \ub429\ub2c8\ub2e4. Project \ub2e8\uc704\ub85c \uacf5\uc720\ub97c \ud558\uace0 \uc2f6\uc5c8\ub358 \uacbd\uc6b0\uac00 \uc788\uc5c8\ub294\ub370, \uc774\ub294 \uc548\ub418\uace0 Run \ub2e8\uc704\ub85c\ub9cc \ub429\ub2c8\ub2e4. \uc2dc\uac04\uc774 \uc9c0\ub098\uba74 Project \ub2e8\uc704\ub85c\ub3c4 \uc9c0\uc6d0\uc744 \ud574\uc8fc\uaca0\uc8e0...?</p>"},{"location":"tutorial/Tracing_2/#_3","title":"\ucd94\uc801 \uacb0\uacfc \ub370\uc774\ud130 \ucc98\ub9ac\ud558\uae30","text":"<p>\ubcf8 \ubb38\uc11c\ub294 LangSmith \uc758 \uc6f9 \uc778\ud130\ud398\uc774\uc2a4\ub85c \uc811\uadfc\ud574\uc11c \ub370\uc774\ud130\ub97c \ub2e4\ub8e8\uace0 \uc788\uc2b5\ub2c8\ub2e4. \ub2f9\uc5f0\ud788 \ucf54\ub4dc\ub85c\ub3c4 \uc9c1\uc811 \uc6d0\ud558\ub294 \ub370\uc774\ud130\ub4e4\uc744 \ud544\ud130\ub9c1 \ud558\uace0, export \ud558\uace0, \ucc98\ub9ac\ud560 \uc218 \uc788\uc2b5\ub2c8\ub2e4. SDK \uc5d0 \ubaa8\ub450 \ud3ec\ud568\ub418\uc5b4 \uc788\uc2b5\ub2c8\ub2e4.</p>"},{"location":"tags/","title":"Tags","text":""},{"location":"tags/#langsmith","title":"langsmith","text":"<ul> <li>LangSmith\ub294 \ubb34\uc5c7\uc778\uac00\uc694?</li> </ul>"}]}